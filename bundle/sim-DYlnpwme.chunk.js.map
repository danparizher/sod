{"version":3,"file":"sim-DYlnpwme.chunk.js","sources":["../../../ui/restoration_shaman/presets.ts","../../../ui/restoration_shaman/sim.ts"],"sourcesContent":["import * as PresetUtils from '../core/preset_utils.js';\nimport { Consumes, Flask, Food, WeaponImbue } from '../core/proto/common.js';\nimport { RestorationShaman_Options as RestorationShamanOptions } from '../core/proto/shaman.js';\nimport { SavedTalents } from '../core/proto/ui.js';\nimport BlankGear from './gear_sets/blank.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const DefaultGear = PresetUtils.makePresetGear('Blank', BlankGear);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\nexport const TankHealingTalents = {\n\tname: 'Tank Healing',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-30205033-05005331335010501122331251',\n\t}),\n};\nexport const RaidHealingTalents = {\n\tname: 'Raid Healing',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-3020503-50005331335310501122331251',\n\t}),\n};\n\nexport const DefaultOptions = RestorationShamanOptions.create({\n\tearthShieldPPM: 0,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n\tmainHandImbue: WeaponImbue.RockbiterWeapon,\n\toffHandImbue: WeaponImbue.RockbiterWeapon,\n});\n","import * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { Player } from '../core/player.js';\nimport { APLRotation } from '../core/proto/apl.js';\nimport { Class, Debuffs, Faction, IndividualBuffs, PartyBuffs, Race, RaidBuffs, Spec, Stat, TristateEffect } from '../core/proto/common.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\n// import * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecRestorationShaman, {\n\tcssClass: 'restoration-shaman-sim-ui',\n\tcssScheme: 'shaman',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [],\n\twarnings: [],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [Stat.StatIntellect, Stat.StatSpirit, Stat.StatSpellPower, Stat.StatSpellCrit, Stat.StatSpellHaste, Stat.StatMP5],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecRestorationShaman>) => {\n\t\tlet stats = new Stats();\n\t\tstats = stats.addStat(Stat.StatSpellCrit, player.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.22,\n\t\t\t[Stat.StatSpirit]: 0.05,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.67,\n\t\t\t[Stat.StatSpellHaste]: 1.29,\n\t\t\t[Stat.StatMP5]: 0.08,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.RaidHealingTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tdivineSpirit: true,\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tmoonkinAura: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfWisdom: 2,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tfaerieFire: true,\n\t\t\tjudgementOfWisdom: true,\n\t\t\tcurseOfElementsNew: TristateEffect.TristateEffectRegular,\n\t\t}),\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [],\n\texcludeBuffDebuffInputs: [],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [OtherInputs.TankAssignment],\n\t},\n\tcustomSections: [],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [Presets.RaidHealingTalents, Presets.TankHealingTalents],\n\t\trotations: [],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [Presets.DefaultGear],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecRestorationShaman>): APLRotation => {\n\t\treturn APLRotation.create();\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecRestorationShaman,\n\t\t\ttooltip: specNames[Spec.SpecRestorationShaman],\n\t\t\tdefaultName: 'Restoration',\n\t\t\ticonUrl: getSpecIcon(Class.ClassShaman, 2),\n\n\t\t\ttalents: Presets.RaidHealingTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceUnknown,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class RestorationShamanSimUI extends IndividualSimUI<Spec.SpecRestorationShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRestorationShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["DefaultGear","PresetUtils.makePresetGear","TankHealingTalents","name","data","SavedTalents","create","talentsString","RaidHealingTalents","DefaultOptions","RestorationShamanOptions","earthShieldPPM","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","mainHandImbue","WeaponImbue","RockbiterWeapon","offHandImbue","SPEC_CONFIG","registerSpecConfig","Spec","SpecRestorationShaman","cssClass","cssScheme","knownIssues","warnings","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","player","stats","Stats","addStat","getTalents","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","gear","Presets.DefaultGear","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.RaidHealingTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","moonkinAura","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","debuffs","Debuffs","faerieFire","judgementOfWisdom","curseOfElementsNew","TristateEffectRegular","playerIconInputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","customSections","encounterPicker","showExecuteProportion","presets","Presets.TankHealingTalents","rotations","autoRotation","_player","APLRotation","raidSimPresets","spec","tooltip","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassShaman","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","Horde","RaceOrc","defaultGear","RestorationShamanSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"oSAUaA,EAAcC,EAA2B,oBAIzCC,EAAqB,CACjCC,KAAM,eACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,0CAGJC,EAAqB,CACjCL,KAAM,eACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,yCAIJE,EAAiBC,EAAyBJ,OAAO,CAC7DK,eAAgB,IAGJC,EAAkBC,EAASP,OAAO,CAC9CQ,MAAOC,EAAMC,aACbC,KAAMC,EAAKC,YACXC,cAAeC,EAAYC,gBAC3BC,aAAcF,EAAYC,kBCxBrBE,EAAcC,EAAmBC,EAAKC,sBAAuB,CAClEC,SAAU,4BACVC,UAAW,SAEXC,YAAa,GACbC,SAAU,GAGVC,QAAS,CAACC,EAAKC,cAAeD,EAAKE,WAAYF,EAAKG,eAAgBH,EAAKI,cAAeJ,EAAKK,eAAgBL,EAAKM,SAElHC,gBAAiBP,EAAKG,eAEtBK,aAAc,CACbR,EAAKS,WACLT,EAAKU,SACLV,EAAKW,YACLX,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,cACLJ,EAAKK,eACLL,EAAKM,SAENM,mBAAqBC,IAChB,IAAAC,EAAQ,IAAIC,EAET,OADCD,EAAAA,EAAME,QAAQhB,EAAKI,cAAkD,EAAnCS,EAAOI,aAAaC,aAAmBC,GAC1E,CACNC,QAASN,EAAA,EAIXO,SAAU,CAETC,KAAMC,EAAoBD,KAE1BE,UAAWT,EAAMU,QAAQ,CACxB,CAACzB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,eAAgB,IACtB,CAACJ,EAAKK,gBAAiB,KACvB,CAACL,EAAKM,SAAU,MAGjBoB,SAAUC,EAEVP,QAASQ,EAA2BzD,KAEpC0D,YAAaC,EAEbC,UAAWC,EAAU3D,OAAO,CAC3B4D,kBAAkB,EAClBC,cAAc,EACdC,cAAeC,EAAeC,uBAC9BC,aAAa,IAEdC,WAAYC,EAAWnE,OAAO,IAC9BoE,gBAAiBC,EAAgBrE,OAAO,CACvCsE,iBAAiB,EACjBC,iBAAkB,IAEnBC,QAASC,EAAQzE,OAAO,CACvB0E,YAAY,EACZC,mBAAmB,EACnBC,mBAAoBb,EAAec,yBAIrCC,iBAAkB,GAElBC,wBAAyB,GACzBC,wBAAyB,GAEzBC,YAAa,CACZC,OAAQ,CAACC,IAEVC,eAAgB,GAChBC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERxC,QAAS,CAACQ,EAA4BiC,GACtCC,UAAW,GAEXxC,KAAM,CAACC,IAGRwC,aAAeC,GACPC,EAAY5F,SAGpB6F,eAAgB,CACf,CACCC,KAAM1E,EAAKC,sBACX0E,QAASC,EAAU5E,EAAKC,uBACxB4E,YAAa,cACbC,QAASC,EAAYC,EAAMC,YAAa,GAExCtD,QAASQ,EAA2BzD,KACpC0D,YAAaC,EACbJ,SAAUC,EACVgD,oBAAqB,CACpB,CAACC,EAAQC,SAAUC,EAAKC,YACxB,CAACH,EAAQI,UAAWF,EAAKC,YACzB,CAACH,EAAQK,OAAQH,EAAKI,SAEvBC,YAAa,CACZ,CAACP,EAAQC,SAAU,CAAC,EACpB,CAACD,EAAQI,UAAW,CACnB,EAAGzD,EAAoBD,MAExB,CAACsD,EAAQK,OAAQ,CAChB,EAAG1D,EAAoBD,WAOrB,MAAM8D,UAA+BC,EAC3C,WAAAC,CAAYC,EAAyB1E,GAC9B2E,MAAAD,EAAY1E,EAAQtB,EAC3B"}