{"version":3,"file":"preset_utils-BVa5w3Ey.chunk.js","sources":["../../../ui/core/launched_sims.ts","../../../ui/core/party.ts","../../../ui/core/proto_utils/stats.ts","../../../ui/core/components/copy_button.tsx","../../../ui/core/talents/talents_picker.tsx","../../../ui/core/talents/druid.ts","../../../ui/core/talents/hunter.ts","../../../ui/core/talents/mage.ts","../../../ui/core/talents/paladin.ts","../../../ui/core/talents/priest.ts","../../../ui/core/talents/rogue.ts","../../../ui/core/talents/shaman.ts","../../../ui/core/talents/warlock.ts","../../../ui/core/talents/warrior.ts","../../../ui/core/talents/factory.ts","../../../ui/core/player.ts","../../../ui/core/encounter.ts","../../../ui/core/raid.ts","../../../ui/core/worker_pool.ts","../../../ui/core/sim.ts","../../../ui/core/components/icon_picker.tsx","../../../ui/core/components/icon_enum_picker.tsx","../../../ui/core/components/input_helpers.ts","../../../ui/core/components/icon_inputs.ts","../../../ui/core/components/multi_icon_picker.ts","../../../ui/core/components/inputs/buffs_debuffs.ts","../../../ui/core/components/inputs/rogue_imbues.ts","../../../ui/core/components/inputs/shaman_imbues.ts","../../../ui/core/components/inputs/consumables.ts","../../../ui/core/components/enum_picker.ts","../../../ui/core/components/other_inputs.ts","../../../ui/core/components/number_picker.ts","../../../ui/core/components/character_stats.tsx","../../../node_modules/pako/lib/utils/common.js","../../../node_modules/pako/lib/zlib/trees.js","../../../node_modules/pako/lib/zlib/adler32.js","../../../node_modules/pako/lib/zlib/crc32.js","../../../node_modules/pako/lib/zlib/deflate.js","../../../node_modules/pako/lib/zlib/messages.js","../../../node_modules/pako/lib/utils/strings.js","../../../node_modules/pako/lib/zlib/zstream.js","../../../node_modules/pako/lib/deflate.js","../../../node_modules/pako/lib/zlib/inftrees.js","../../../node_modules/pako/lib/zlib/inflate.js","../../../node_modules/pako/lib/zlib/inffast.js","../../../node_modules/pako/lib/zlib/constants.js","../../../node_modules/pako/lib/zlib/gzheader.js","../../../node_modules/pako/lib/inflate.js","../../../node_modules/pako/index.js","../../../ui/core/components/base_modal.tsx","../../../ui/core/components/importers.ts","../../../ui/core/components/exporters.tsx","../../../ui/core/components/content_block.tsx","../../../ui/core/css_utils.ts","../../../ui/core/proto_utils/enchants.ts","../../../ui/core/components/filters_menu.ts","../../../ui/core/components/virtual_scroll/clusterize.ts","../../../ui/core/components/gear_picker.tsx","../../../ui/core/components/results_viewer.tsx","../../../ui/core/components/sim_tab.ts","../../../ui/core/components/individual_sim_ui/bulk_tab.ts","../../../ui/core/components/saved_data_manager.ts","../../../ui/core/components/individual_sim_ui/gear_tab.ts","../../../ui/core/constants/tooltips.ts","../../../ui/core/components/list_picker.tsx","../../../ui/core/components/inputs/string_picker.ts","../../../ui/core/components/individual_sim_ui/apl_helpers.ts","../../../ui/core/components/individual_sim_ui/apl_values.ts","../../../ui/core/components/individual_sim_ui/apl_actions.ts","../../../ui/core/components/individual_sim_ui/apl_rotation_picker.ts","../../../ui/core/components/number_list_picker.ts","../../../ui/core/components/individual_sim_ui/cooldowns_picker.ts","../../../ui/core/components/individual_sim_ui/rotation_tab.ts","../../../ui/core/components/encounter_picker.ts","../../../ui/core/components/inputs/stat_options.ts","../../../ui/core/components/item_swap_picker.tsx","../../../ui/core/components/individual_sim_ui/consumes_picker.ts","../../../ui/core/components/individual_sim_ui/preset_builds_picker.tsx","../../../ui/core/components/individual_sim_ui/settings_tab.ts","../../../ui/core/components/individual_sim_ui/talents_tab.ts","../../../ui/core/components/stat_weights_action.ts","../../../ui/core/components/settings_menu.ts","../../../ui/core/components/social_links.tsx","../../../ui/core/components/sim_header.tsx","../../../ui/core/components/sim_title_dropdown.ts","../../../ui/core/sim_ui.ts","../../../ui/core/individual_sim_ui.ts","../../../ui/core/preset_utils.ts"],"sourcesContent":["import { Phase } from './constants/other';\nimport { Class, Spec } from './proto/common';\nimport { specToClass } from './proto_utils/utils';\n\n// This file is for anything related to launching a new sim. DO NOT touch this\n// file until your sim is ready to launch!\n\nexport enum LaunchStatus {\n\tUnlaunched,\n\tAlpha,\n\tBeta,\n}\n\nexport type SimStatus = {\n\tphase: Phase;\n\tstatus: LaunchStatus;\n};\n\nexport const raidSimStatus: SimStatus = {\n\tphase: Phase.Phase1,\n\tstatus: LaunchStatus.Unlaunched,\n};\n\n// This list controls which links are shown in the top-left dropdown menu.\nexport const simLaunchStatuses: Record<Spec, SimStatus> = {\n\t[Spec.SpecBalanceDruid]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecFeralDruid]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecFeralTankDruid]: {\n\t\tphase: Phase.Phase1,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n\t[Spec.SpecRestorationDruid]: {\n\t\tphase: Phase.Phase1,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n\t[Spec.SpecElementalShaman]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecEnhancementShaman]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecRestorationShaman]: {\n\t\tphase: Phase.Phase1,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n\t[Spec.SpecHunter]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecMage]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecRogue]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecTankRogue]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n\t[Spec.SpecHolyPaladin]: {\n\t\tphase: Phase.Phase1,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n\t[Spec.SpecProtectionPaladin]: {\n\t\tphase: Phase.Phase1,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n\t[Spec.SpecRetributionPaladin]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecHealingPriest]: {\n\t\tphase: Phase.Phase1,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n\t[Spec.SpecShadowPriest]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecWarlock]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecTankWarlock]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecWarrior]: {\n\t\tphase: Phase.Phase3,\n\t\tstatus: LaunchStatus.Alpha,\n\t},\n\t[Spec.SpecProtectionWarrior]: {\n\t\tphase: Phase.Phase1,\n\t\tstatus: LaunchStatus.Unlaunched,\n\t},\n};\n\nexport function getLaunchedSims(): Array<Spec> {\n\treturn Object.keys(simLaunchStatuses)\n\t\t.map(specStr => parseInt(specStr) as Spec)\n\t\t.filter(spec => simLaunchStatuses[spec].status > LaunchStatus.Unlaunched);\n}\n\nexport function getLaunchedSimsForClass(klass: Class): Array<Spec> {\n\treturn Object.keys(specToClass)\n\t\t.map(specStr => parseInt(specStr) as Spec)\n\t\t.filter(spec => specToClass[spec] == klass && isSimLaunched(spec));\n}\n\nexport function isSimLaunched(specIndex: Spec): boolean {\n\treturn simLaunchStatuses[specIndex].status > LaunchStatus.Unlaunched;\n}\n","import { Party as PartyProto } from './proto/api.js';\nimport { PartyStats as PartyStatsProto } from './proto/api.js';\nimport { Player as PlayerProto } from './proto/api.js';\nimport { PartyBuffs } from './proto/common.js';\nimport { Class } from './proto/common.js';\nimport { Spec } from './proto/common.js';\nimport { playerToSpec } from './proto_utils/utils.js';\n\nimport { Raid } from './raid.js';\nimport { Player } from './player.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { Sim } from './sim.js';\n\nexport const MAX_PARTY_SIZE = 5;\n\n// Manages all the settings for a single Party.\nexport class Party {\n\treadonly sim: Sim;\n\treadonly raid: Raid;\n\n\tprivate buffs: PartyBuffs = PartyBuffs.create();\n\n\t// Emits when a party member is added/removed/moved.\n\treadonly compChangeEmitter = new TypedEvent<void>();\n\n\treadonly buffsChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when anything in the party changes.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Should always hold exactly MAX_PARTY_SIZE elements.\n\tprivate players: Array<Player<any> | null>;\n\n\tprivate readonly playerChangeListener: (eventID: EventID) => void;\n\n\tconstructor(raid: Raid, sim: Sim) {\n\t\tthis.sim = sim;\n\t\tthis.raid = raid;\n\t\tthis.players = [...Array(MAX_PARTY_SIZE).keys()].map(i => null);\n\t\tthis.playerChangeListener = eventID => this.changeEmitter.emit(eventID);\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.compChangeEmitter,\n\t\t\tthis.buffsChangeEmitter,\n\t\t], 'PartyChange');\n\t}\n\n\tsize(): number {\n\t\treturn this.players.filter(player => player != null).length;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.size() == 0;\n\t}\n\n\tclear(eventID: EventID) {\n\t\tthis.setBuffs(eventID, PartyBuffs.create());\n\t\tfor (let i = 0; i < MAX_PARTY_SIZE; i++) {\n\t\t\tthis.setPlayer(eventID, i, null);\n\t\t}\n\t}\n\n\t// Returns this party's index within the raid [0-4].\n\tgetIndex(): number {\n\t\treturn this.raid.getParties().indexOf(this);\n\t}\n\n\tgetPlayers(): Array<Player<any> | null> {\n\t\t// Make defensive copy.\n\t\treturn this.players.slice();\n\t}\n\n\tgetPlayer(playerIndex: number): Player<any> | null {\n\t\treturn this.players[playerIndex];\n\t}\n\n\tsetPlayer(eventID: EventID, playerIndex: number, newPlayer: Player<any> | null) {\n\t\tif (playerIndex < 0 || playerIndex >= MAX_PARTY_SIZE) {\n\t\t\tthrow new Error('Invalid player index: ' + playerIndex);\n\t\t}\n\n\t\tif (newPlayer == this.players[playerIndex]) {\n\t\t\treturn;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tconst oldPlayer = this.players[playerIndex];\n\t\t\tif (oldPlayer != null) {\n\t\t\t\toldPlayer.changeEmitter.off(this.playerChangeListener);\n\t\t\t\toldPlayer.setParty(null);\n\t\t\t}\n\t\t\tif (newPlayer != null) {\n\t\t\t\tconst newPlayerOldParty = newPlayer.getParty();\n\t\t\t\tif (newPlayerOldParty) {\n\t\t\t\t\tnewPlayerOldParty.setPlayer(eventID, newPlayer.getPartyIndex(), null);\n\t\t\t\t}\n\t\t\t\tthis.players[playerIndex] = newPlayer;\n\t\t\t\tnewPlayer.changeEmitter.on(this.playerChangeListener);\n\t\t\t\tnewPlayer.setParty(this);\n\t\t\t} else {\n\t\t\t\tthis.players[playerIndex] = null;\n\t\t\t}\n\n\t\t\tthis.compChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tgetBuffs(): PartyBuffs {\n\t\t// Make a defensive copy\n\t\treturn PartyBuffs.clone(this.buffs);\n\t}\n\n\tsetBuffs(eventID: EventID, newBuffs: PartyBuffs) {\n\t\tif (PartyBuffs.equals(this.buffs, newBuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = PartyBuffs.clone(newBuffs);\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n\ttoProto(forExport?: boolean, forSimming?: boolean): PartyProto {\n\t\treturn PartyProto.create({\n\t\t\tplayers: this.players.map(player => player == null ? PlayerProto.create() : player.toProto(forExport, forSimming)),\n\t\t\tbuffs: this.buffs,\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: PartyProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setBuffs(eventID, proto.buffs || PartyBuffs.create());\n\n\t\t\tfor (let i = 0; i < MAX_PARTY_SIZE; i++) {\n\t\t\t\tif (!proto.players[i] || proto.players[i].class == Class.ClassUnknown) {\n\t\t\t\t\tthis.setPlayer(eventID, i, null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst playerProto = proto.players[i];\n\t\t\t\tconst spec = playerToSpec(playerProto);\n\t\t\t\tconst currentPlayer = this.players[i];\n\n\t\t\t\t// Reuse the current player if possible, so that event handlers are preserved.\n\t\t\t\tif (currentPlayer && spec == currentPlayer.spec) {\n\t\t\t\t\tcurrentPlayer.fromProto(eventID, playerProto);\n\t\t\t\t} else {\n\t\t\t\t\tconst newPlayer = new Player(spec, this.sim);\n\t\t\t\t\tnewPlayer.fromProto(eventID, playerProto);\n\t\t\t\t\tthis.setPlayer(eventID, i, newPlayer);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Class, Stat, PseudoStat, UnitStats } from '../proto/common.js';\nimport { getEnumValues } from '../utils.js';\nimport { getClassStatName, pseudoStatNames } from './names.js';\n\nconst STATS_LEN = getEnumValues(Stat).length;\nconst PSEUDOSTATS_LEN = getEnumValues(PseudoStat).length;\n\nexport class UnitStat {\n\tprivate readonly stat: Stat | null;\n\tprivate readonly pseudoStat: PseudoStat | null;\n\n\tprivate constructor(stat: Stat | null, pseudoStat: PseudoStat | null) {\n\t\tthis.stat = stat;\n\t\tthis.pseudoStat = pseudoStat;\n\t}\n\n\tisStat(): boolean {\n\t\treturn this.stat != null;\n\t}\n\tisPseudoStat(): boolean {\n\t\treturn this.pseudoStat != null;\n\t}\n\n\tgetStat(): Stat {\n\t\tif (!this.isStat()) {\n\t\t\tthrow new Error('Not a stat!');\n\t\t}\n\t\treturn this.stat!;\n\t}\n\tgetPseudoStat(): PseudoStat {\n\t\tif (!this.isPseudoStat()) {\n\t\t\tthrow new Error('Not a pseudo stat!');\n\t\t}\n\t\treturn this.pseudoStat!;\n\t}\n\n\tequals(other: UnitStat): boolean {\n\t\treturn this.stat == other.stat && this.pseudoStat == other.pseudoStat;\n\t}\n\n\tgetName(clazz: Class): string {\n\t\tif (this.isStat()) {\n\t\t\treturn getClassStatName(this.stat!, clazz);\n\t\t} else {\n\t\t\treturn pseudoStatNames.get(this.pseudoStat!)!;\n\t\t}\n\t}\n\n\tgetProtoValue(proto: UnitStats): number {\n\t\tif (this.isStat()) {\n\t\t\treturn proto.stats[this.stat!];\n\t\t} else {\n\t\t\treturn proto.pseudoStats[this.pseudoStat!];\n\t\t}\n\t}\n\n\tsetProtoValue(proto: UnitStats, val: number) {\n\t\tif (this.isStat()) {\n\t\t\tproto.stats[this.stat!] = val;\n\t\t} else {\n\t\t\tproto.pseudoStats[this.pseudoStat!] = val;\n\t\t}\n\t}\n\n\tstatic fromStat(stat: Stat): UnitStat {\n\t\treturn new UnitStat(stat, null);\n\t}\n\tstatic fromPseudoStat(pseudoStat: PseudoStat): UnitStat {\n\t\treturn new UnitStat(null, pseudoStat);\n\t}\n\n\tstatic getAll(): Array<UnitStat> {\n\t\tconst allStats = (getEnumValues(Stat) as Array<Stat>).filter(stat => ![Stat.StatEnergy, Stat.StatRage].includes(stat));\n\t\tconst allPseudoStats = getEnumValues(PseudoStat) as Array<PseudoStat>;\n\t\treturn [\n\t\t\tallStats.map(stat => UnitStat.fromStat(stat)),\n\t\t\tallPseudoStats.map(stat => UnitStat.fromPseudoStat(stat)),\n\t\t].flat();\n\t}\n}\n\n/**\n * Represents values for all character stats (stam, agi, spell power, hit raiting, etc).\n *\n * This is an immutable type.\n */\nexport class Stats {\n\tprivate readonly stats: Array<number>;\n\tprivate readonly pseudoStats: Array<number>;\n\n\tconstructor(stats?: Array<number>, pseudoStats?: Array<number>) {\n\t\tthis.stats = Stats.initStatsArray(STATS_LEN, stats);\n\t\tthis.pseudoStats = Stats.initStatsArray(PSEUDOSTATS_LEN, pseudoStats);\n\t}\n\n\tprivate static initStatsArray(expectedLen: number, newStats?: Array<number>): Array<number> {\n\t\tlet stats = newStats?.slice(0, expectedLen) || [];\n\n\t\tif (stats.length < expectedLen) {\n\t\t\tstats = stats.concat(new Array(expectedLen - (newStats?.length || 0)).fill(0));\n\t\t}\n\n\t\tfor (let i = 0; i < expectedLen; i++) {\n\t\t\tif (stats[i] == null)\n\t\t\t\tstats[i] = 0;\n\t\t}\n\t\treturn stats;\n\t}\n\n\tequals(other: Stats): boolean {\n\t\treturn this.stats.every((newStat, statIdx) => newStat == other.getStat(statIdx)) &&\n\t\t\tthis.pseudoStats.every((newStat, statIdx) => newStat == other.getPseudoStat(statIdx))\n\t}\n\n\tgetStat(stat: Stat): number {\n\t\treturn this.stats[stat];\n\t}\n\tgetPseudoStat(stat: PseudoStat): number {\n\t\treturn this.pseudoStats[stat];\n\t}\n\tgetUnitStat(stat: UnitStat): number {\n\t\tif (stat.isStat()) {\n\t\t\treturn this.stats[stat.getStat()];\n\t\t} else {\n\t\t\treturn this.pseudoStats[stat.getPseudoStat()];\n\t\t}\n\t}\n\n\twithStat(stat: Stat, value: number): Stats {\n\t\tconst newStats = this.stats.slice();\n\t\tnewStats[stat] = value;\n\t\treturn new Stats(newStats, this.pseudoStats);\n\t}\n\twithPseudoStat(stat: PseudoStat, value: number): Stats {\n\t\tconst newStats = this.pseudoStats.slice();\n\t\tnewStats[stat] = value;\n\t\treturn new Stats(this.stats, newStats);\n\t}\n\twithUnitStat(stat: UnitStat, value: number): Stats {\n\t\tif (stat.isStat()) {\n\t\t\treturn this.withStat(stat.getStat(), value);\n\t\t} else {\n\t\t\treturn this.withPseudoStat(stat.getPseudoStat(), value);\n\t\t}\n\t}\n\n\taddStat(stat: Stat, value: number): Stats {\n\t\treturn this.withStat(stat, this.getStat(stat) + value);\n\t}\n\n\tadd(other: Stats): Stats {\n\t\treturn new Stats(\n\t\t\tthis.stats.map((value, stat) => value + other.stats[stat]),\n\t\t\tthis.pseudoStats.map((value, stat) => value + other.pseudoStats[stat]));\n\t}\n\n\tsubtract(other: Stats): Stats {\n\t\treturn new Stats(\n\t\t\tthis.stats.map((value, stat) => value - other.stats[stat]),\n\t\t\tthis.pseudoStats.map((value, stat) => value - other.pseudoStats[stat]));\n\t}\n\n\tscale(scalar: number): Stats {\n\t\treturn new Stats(\n\t\t\tthis.stats.map((value, _) => value * scalar),\n\t\t\tthis.pseudoStats.map((value, _) => value * scalar));\n\t}\n\n\tcomputeEP(epWeights: Stats): number {\n\t\tlet total = 0;\n\t\tthis.stats.forEach((stat, idx) => {\n\t\t\ttotal += stat * epWeights.stats[idx];\n\t\t});\n\t\tthis.pseudoStats.forEach((stat, idx) => {\n\t\t\ttotal += stat * epWeights.pseudoStats[idx];\n\t\t});\n\t\treturn total;\n\t}\n\n\tbelowCaps(statCaps: Stats): boolean {\n\t\tfor (const [idx, stat] of this.stats.entries()) {\n\t\t\tif ((statCaps.stats[idx] > 0) && (stat > statCaps.stats[idx])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasArray(): Array<number> {\n\t\treturn this.stats.slice();\n\t}\n\n\ttoJson(): Object {\n\t\treturn UnitStats.toJson(this.toProto()) as Object;\n\t}\n\n\ttoProto(): UnitStats {\n\t\treturn UnitStats.create({\n\t\t\tstats: this.stats.slice(),\n\t\t\tpseudoStats: this.pseudoStats.slice(),\n\t\t});\n\t}\n\n\tstatic fromJson(obj: any): Stats {\n\t\treturn Stats.fromProto(UnitStats.fromJson(obj));\n\t}\n\n\tstatic fromMap(statsMap: Partial<Record<Stat, number>>, pseudoStatsMap?: Partial<Record<PseudoStat, number>>): Stats {\n\t\tconst statsArr = new Array(STATS_LEN).fill(0);\n\t\tObject.entries(statsMap).forEach(entry => {\n\t\t\tconst [statStr, value] = entry;\n\t\t\tstatsArr[Number(statStr)] = value;\n\t\t});\n\n\t\tconst pseudoStatsArr = new Array(PSEUDOSTATS_LEN).fill(0);\n\t\tif (pseudoStatsMap) {\n\t\t\tObject.entries(pseudoStatsMap).forEach(entry => {\n\t\t\t\tconst [pseudoStatstr, value] = entry;\n\t\t\t\tpseudoStatsArr[Number(pseudoStatstr)] = value;\n\t\t\t});\n\t\t}\n\n\t\treturn new Stats(statsArr, pseudoStatsArr);\n\t}\n\n\tstatic fromProto(unitStats?: UnitStats): Stats {\n\t\tif (unitStats) {\n\t\t\treturn new Stats(unitStats.stats, unitStats.pseudoStats);\n\t\t} else {\n\t\t\treturn new Stats();\n\t\t}\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, ref } from 'tsx-vanilla';\n\nimport { Component } from \"./component\";\n\nexport interface CopyButtonConfig {\n\tgetContent: () => string,\n\textraCssClasses?: string[],\n\ttext?: string,\n\ttooltip?: string,\n}\n\nexport class CopyButton extends Component {\n  private readonly config: CopyButtonConfig;\n\n  constructor(parent: HTMLElement, config: CopyButtonConfig) {\n\t\tconst btnRef = ref<HTMLButtonElement>();\n\t\tconst buttonElem = (\n\t\t\t<button\n\t\t\t\tclassName={`btn ${config.extraCssClasses?.join(' ') ?? ''}`}\n\t\t\t\tref={btnRef}\n\t\t\t>\n\t\t\t\t<i className=\"fas fa-copy me-1\" />{config.text ?? 'Copy to Clipboard'}\n\t\t\t</button>\n\t\t)\n\n    super(parent, 'copy-button', buttonElem as HTMLElement);\n    this.config = config;\n\n\t\tconst button = btnRef.value!\n\t\tlet clicked = false\n\t\tbutton.addEventListener('click', _event => {\n\t\t\tif (clicked) return\n\n\t\t\tconst data = this.config.getContent()\n\t\t\tif (navigator.clipboard == undefined) {\n\t\t\t\talert(data);\n\t\t\t} else {\n\t\t\t\tclicked = true\n\t\t\t\tnavigator.clipboard.writeText(data);\n\t\t\t\tconst originalContent = button.innerHTML;\n\t\t\t\tbutton.innerHTML = '<i class=\"fas fa-check me-1\"></i>Copied';\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tbutton.innerHTML = originalContent;\n\t\t\t\t\tclicked = false\n\t\t\t\t}, 1500);\n\t\t\t}\n\t\t});\n\n\t\tif (config.tooltip) {\n\t\t\tTooltip.getOrCreateInstance(button, {title: config.tooltip});\n\t\t}\n  }\n};\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment, ref } from 'tsx-vanilla';\n\nimport { Component } from '../components/component.js';\nimport { CopyButton } from '../components/copy_button.js';\nimport { Input, InputConfig } from '../components/input.js';\nimport { Player } from '../player.js';\nimport { Class, Spec } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { getSpecIcon } from '../proto_utils/utils.js';\nimport { TypedEvent } from '../typed_event.js';\nimport { isRightClick, sum } from '../utils.js';\n\nexport interface TalentsPickerConfig<TalentsProto> extends InputConfig<Player<Spec>, string> {\n\tklass: Class;\n\ttrees: TalentsConfig<TalentsProto>;\n\tpointsPerRow: number;\n}\n\nexport class TalentsPicker<TalentsProto> extends Input<Player<Spec>, string> {\n\tprivate readonly config: TalentsPickerConfig<TalentsProto>;\n\n\treadonly numRows: number;\n\treadonly numCols: number;\n\treadonly pointsPerRow: number;\n\tmaxPoints: number;\n\n\treadonly trees: Array<TalentTreePicker<TalentsProto>>;\n\n\tconstructor(parent: HTMLElement, player: Player<Spec>, config: TalentsPickerConfig<TalentsProto>) {\n\t\tsuper(parent, 'talents-picker-root', player, { ...config, inline: true });\n\t\tthis.config = config;\n\t\tthis.pointsPerRow = config.pointsPerRow;\n\t\tthis.numRows = Math.max(...config.trees.map(treeConfig => treeConfig.talents.map(talentConfig => talentConfig.location.rowIdx).flat()).flat()) + 1;\n\t\tthis.numCols = Math.max(...config.trees.map(treeConfig => treeConfig.talents.map(talentConfig => talentConfig.location.colIdx).flat()).flat()) + 1;\n\n\t\tconst getMaxPoints = () => player.getLevel() - 9;\n\t\tthis.maxPoints = getMaxPoints();\n\n\t\tconst getPointsRemaining = (): number => this.maxPoints - player.getTalentTreePoints().reduce((sum, points) => sum + points, 0);\n\n\t\tconst pointsRemainingElemRef = ref<HTMLSpanElement>();\n\t\tconst actionsContainerRef = ref<HTMLDivElement>();\n\n\t\tconst carouselContainerRef = ref<HTMLDivElement>();\n\t\tconst carouselPrevBtnRef = ref<HTMLButtonElement>();\n\t\tconst carouselNextBtnRef = ref<HTMLButtonElement>();\n\n\t\tthis.rootElem.appendChild(\n\t\t\t<div className=\"talents-picker-inner\">\n\t\t\t\t<div className=\"talents-picker-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Points Remaining:</label>\n\t\t\t\t\t\t<span className=\"talent-tree-points\" ref={pointsRemainingElemRef}>\n\t\t\t\t\t\t\t{getPointsRemaining()}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"talents-picker-actions\" ref={actionsContainerRef}></div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"talents-carousel\" className=\"carousel slide\">\n\t\t\t\t\t<div className=\"carousel-inner\" ref={carouselContainerRef}></div>\n\t\t\t\t\t<button className=\"carousel-control-prev\" type=\"button\" ref={carouselPrevBtnRef}>\n\t\t\t\t\t\t<span className=\"carousel-control-prev-icon\" attributes={{ 'aria-hidden': true }}></span>\n\t\t\t\t\t\t<span className=\"visually-hidden\">Previous</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"carousel-control-next\" type=\"button\" ref={carouselNextBtnRef}>\n\t\t\t\t\t\t<span className=\"carousel-control-next-icon\" attributes={{ 'aria-hidden': true }}></span>\n\t\t\t\t\t\t<span className=\"visually-hidden\">Next</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>,\n\t\t);\n\n\t\tconst carouselContainer = carouselContainerRef.value!;\n\t\tconst carouselPrevBtn = carouselPrevBtnRef.value!;\n\t\tconst carouselNextBtn = carouselNextBtnRef.value!;\n\n\t\tTypedEvent.onAny([player.levelChangeEmitter, player.talentsChangeEmitter]).on(() => {\n\t\t\tthis.setMaxPoints(getMaxPoints());\n\t\t\tpointsRemainingElemRef.value!.textContent = `${getPointsRemaining()}`;\n\t\t});\n\n\t\tnew CopyButton(actionsContainerRef.value!, {\n\t\t\textraCssClasses: ['btn-sm', 'btn-outline-primary', 'copy-talents'],\n\t\t\tgetContent: () => player.getTalentsString(),\n\t\t\ttext: 'Copy',\n\t\t\ttooltip: 'Copy talent string',\n\t\t});\n\n\t\tthis.trees = config.trees.map((treeConfig, i) => {\n\t\t\tconst carouselItem = document.createElement('div');\n\t\t\tcarouselContainer.appendChild(carouselItem);\n\n\t\t\tcarouselItem.classList.add('carousel-item');\n\t\t\t// Set middle talents active by default for mobile slider\n\t\t\tif (i === 1) carouselItem.classList.add('active');\n\n\t\t\treturn new TalentTreePicker(carouselItem, treeConfig, this, config.klass, i);\n\t\t});\n\t\tthis.trees.forEach(tree => tree.talents.forEach(talent => talent.setPoints(0, false)));\n\n\t\tlet carouselitemIdx = 0;\n\t\tconst slidePrev = () => {\n\t\t\tif (carouselitemIdx >= 1) return;\n\t\t\tcarouselitemIdx += 1;\n\t\t\tcarouselContainer.style.transform = `translateX(${33.3 * carouselitemIdx}%)`;\n\t\t\tcarouselContainer.children[Math.abs(carouselitemIdx - 2) % 3]!.classList.remove('active');\n\t\t\tcarouselContainer.children[Math.abs(carouselitemIdx - 1) % 3]!.classList.add('active');\n\t\t};\n\t\tconst slideNext = () => {\n\t\t\tif (carouselitemIdx <= -1) return;\n\t\t\tcarouselitemIdx -= 1;\n\t\t\tcarouselContainer.style.transform = `translateX(${33.3 * carouselitemIdx}%)`;\n\t\t\tcarouselContainer.children[Math.abs(carouselitemIdx) % 3]!.classList.remove('active');\n\t\t\tcarouselContainer.children[Math.abs(carouselitemIdx) + (1 % 3)]!.classList.add('active');\n\t\t};\n\n\t\tcarouselPrevBtn.addEventListener('click', slidePrev);\n\t\tcarouselNextBtn.addEventListener('click', slideNext);\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): string {\n\t\treturn this.trees\n\t\t\t.map(tree => tree.getTalentsString())\n\t\t\t.join('-')\n\t\t\t.replace(/-+$/g, '');\n\t}\n\n\tsetInputValue(newValue: string) {\n\t\tconst parts = newValue.split('-');\n\t\tthis.trees.forEach((tree, idx) => tree.setTalentsString(parts[idx] || ''));\n\t\tthis.updateTrees();\n\t}\n\n\tupdateTrees() {\n\t\tif (this.isFull()) {\n\t\t\tthis.rootElem.classList.add('talents-full');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('talents-full');\n\t\t}\n\t\tthis.trees.forEach(tree => tree.update());\n\t}\n\n\tget numPoints() {\n\t\treturn sum(this.trees.map(tree => tree.numPoints));\n\t}\n\n\tisFull() {\n\t\treturn this.numPoints >= this.maxPoints;\n\t}\n\n\tsetMaxPoints(newMaxPoints: number) {\n\t\tif (newMaxPoints != this.maxPoints) {\n\t\t\tthis.maxPoints = newMaxPoints;\n\t\t\tthis.updateTrees();\n\t\t}\n\t}\n}\n\nclass TalentTreePicker<TalentsProto> extends Component {\n\tprivate readonly config: TalentTreeConfig<TalentsProto>;\n\tprivate readonly title: HTMLElement;\n\tprivate readonly pointsElem: HTMLElement;\n\n\treadonly talents: Array<TalentPicker<TalentsProto>>;\n\treadonly picker: TalentsPicker<TalentsProto>;\n\n\t// The current number of points in this tree\n\tnumPoints: number;\n\n\tconstructor(parent: HTMLElement, config: TalentTreeConfig<TalentsProto>, picker: TalentsPicker<TalentsProto>, klass: Class, specNumber: number) {\n\t\tsuper(parent, 'talent-tree-picker-root');\n\t\tthis.config = config;\n\t\tthis.numPoints = 0;\n\t\tthis.picker = picker;\n\n\t\tthis.rootElem.appendChild(\n\t\t\t<>\n\t\t\t\t<div className=\"talent-tree-header\">\n\t\t\t\t\t<img src={getSpecIcon(klass, specNumber)} className=\"talent-tree-icon\" />\n\t\t\t\t\t<span className=\"talent-tree-title\"></span>\n\t\t\t\t\t<span className=\"talent-tree-points\"></span>\n\t\t\t\t\t<button className=\"talent-tree-reset btn btn-link link-danger\">\n\t\t\t\t\t\t<i className=\"fa fa-times\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"talent-tree-background\"></div>\n\t\t\t\t<div className=\"talent-tree-main\"></div>\n\t\t\t</>,\n\t\t);\n\n\t\tthis.title = this.rootElem.getElementsByClassName('talent-tree-title')[0] as HTMLElement;\n\t\tthis.pointsElem = this.rootElem.querySelector('.talent-tree-points') as HTMLElement;\n\n\t\tconst background = this.rootElem.querySelector('.talent-tree-background') as HTMLElement;\n\t\tbackground.style.backgroundImage = `url('${config.backgroundUrl}')`;\n\n\t\tconst main = this.rootElem.querySelector('.talent-tree-main') as HTMLElement;\n\t\tmain.style.gridTemplateRows = `repeat(${this.picker.numRows}, 1fr)`;\n\t\t// Add 2 for spacing on the sides\n\t\tmain.style.gridTemplateColumns = `repeat(${this.picker.numCols}, 1fr)`;\n\n\t\tconst iconSize = '3.5rem';\n\t\tmain.style.height = `calc(${iconSize} * ${this.picker.numRows})`;\n\t\tmain.style.maxWidth = `calc(${iconSize} * ${this.picker.numCols})`;\n\t\tthis.rootElem.style.maxWidth = `calc(${iconSize} * ${this.picker.numCols + 2})`;\n\n\t\tthis.talents = config.talents.map(talent => new TalentPicker(main, talent, this));\n\t\t// Process parent<->child mapping\n\t\tthis.talents.forEach(talent => {\n\t\t\tif (talent.config.prereqLocation) {\n\t\t\t\tthis.getTalent(talent.config.prereqLocation).config.childLocations!.push(talent.config.location);\n\t\t\t}\n\t\t});\n\t\t// Loop through all and have talent add in divs/items for child dependencies\n\t\t// It'd be nicer to have this in talent constructor but json would have to be updated\n\t\tconst recurseCalcIdx = (t: TalentPicker<TalentsProto>, z: number) => {\n\t\t\tt.initChildReqs();\n\t\t\tt.zIndex = z;\n\t\t\tfor (const cl of t.config.childLocations!) {\n\t\t\t\tconst c = this.getTalent(cl);\n\t\t\t\tc.parentReq = t.getChildReqArrow(cl);\n\t\t\t\trecurseCalcIdx(c, z - 2);\n\t\t\t}\n\t\t};\n\t\t// Start at top of each heirachy chain and recurse down\n\t\tfor (const t of this.talents) {\n\t\t\tif (t.config.childLocations!.length == 0) continue;\n\t\t\tif (t.config.prereqLocation !== undefined) continue;\n\t\t\trecurseCalcIdx(t, 20);\n\t\t}\n\t\tconst resetBtn = this.rootElem.querySelector('.talent-tree-reset') as HTMLElement;\n\t\tnew Tooltip(resetBtn, {\n\t\t\ttitle: 'Reset talent points',\n\t\t});\n\t\tresetBtn.addEventListener('click', _ => {\n\t\t\tthis.talents.forEach(talent => talent.setPoints(0, false));\n\t\t\tthis.picker.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tupdate() {\n\t\tthis.title.innerHTML = this.config.name;\n\t\tthis.pointsElem.textContent = `${this.numPoints} / ${this.getMaxSpendablePoints()}`;\n\t\tthis.talents.forEach(talent => talent.update());\n\t}\n\n\tgetTalent(location: TalentLocation): TalentPicker<TalentsProto> {\n\t\tconst talent = this.talents.find(talent => talent.getRow() == location.rowIdx && talent.getCol() == location.colIdx);\n\t\tif (!talent) throw new Error('No talent found with location: ' + location);\n\t\treturn talent;\n\t}\n\n\tgetTalentsString(): string {\n\t\treturn this.talents\n\t\t\t.map(talent => String(talent.getPoints()))\n\t\t\t.join('')\n\t\t\t.replace(/0+$/g, '');\n\t}\n\n\tsetTalentsString(str: string) {\n\t\tthis.talents.forEach((talent, idx) => talent.setPoints(Number(str.charAt(idx)), false));\n\t}\n\n\tgetMaxSpendablePoints() {\n\t\treturn this.picker.maxPoints;\n\t}\n}\n\ntype ReqDir = 'down' | 'right' | 'left' | 'rightdown' | 'leftdown';\nclass TalentReqArrow extends Component {\n\tprivate dir: ReqDir;\n\tprivate zIdx: number;\n\treadonly parentLoc: TalentLocation;\n\treadonly childLoc: TalentLocation;\n\n\tconstructor(parent: HTMLElement, parentLoc: TalentLocation, childLoc: TalentLocation) {\n\t\tsuper(parent, 'talent-picker-req-arrow', document.createElement('div'));\n\t\tthis.zIdx = 0;\n\t\tthis.parentLoc = parentLoc;\n\t\tthis.childLoc = childLoc;\n\n\t\tthis.rootElem.style.gridRow = String(parentLoc.rowIdx + 1);\n\t\tthis.rootElem.style.gridColumn = String(parentLoc.colIdx + 1);\n\n\t\tlet rowEnd = Math.max(parentLoc.rowIdx, childLoc.rowIdx) + 1;\n\t\tlet colEnd = Math.max(parentLoc.colIdx, childLoc.colIdx) + 1;\n\n\t\t// Calculate where we need to 'point'\n\t\tif (parentLoc.rowIdx == childLoc.rowIdx) {\n\t\t\tthis.dir = parentLoc.colIdx < childLoc.colIdx ? 'right' : 'left';\n\t\t\tthis.rootElem.dataset.reqArrowColSize = String(Math.abs(parentLoc.colIdx - childLoc.colIdx));\n\t\t\tcolEnd = this.dir == 'left' ? colEnd + 1 : colEnd - 1;\n\t\t} else {\n\t\t\tif (parentLoc.colIdx == childLoc.colIdx) {\n\t\t\t\tthis.dir = 'down';\n\t\t\t\tthis.rootElem.dataset.reqArrowRowSize = String(Math.abs(parentLoc.rowIdx - childLoc.rowIdx));\n\t\t\t\trowEnd += 1;\n\t\t\t} else {\n\t\t\t\tthis.dir = parentLoc.colIdx < childLoc.colIdx ? 'rightdown' : 'leftdown';\n\t\t\t\tthis.rootElem.dataset.reqArrowColSize = String(Math.abs(parentLoc.colIdx - childLoc.colIdx));\n\t\t\t\tthis.rootElem.dataset.reqArrowRowSize = String(Math.abs(parentLoc.rowIdx - childLoc.rowIdx));\n\t\t\t\trowEnd += 1;\n\t\t\t\tcolEnd = this.dir == 'rightdown' ? colEnd + 1 : colEnd - 1;\n\t\t\t\tthis.rootElem.appendChild(<div></div>);\n\t\t\t}\n\t\t}\n\n\t\tthis.rootElem.style.gridRowEnd = String(rowEnd);\n\t\tthis.rootElem.style.gridColumnEnd = String(colEnd);\n\t\tthis.rootElem.classList.add(`talent-picker-req-arrow-${this.dir}`);\n\t}\n\n\tget zIndex() {\n\t\treturn this.zIdx;\n\t}\n\n\tset zIndex(z: number) {\n\t\tthis.zIdx = z;\n\t\tthis.rootElem.style.zIndex = String(z);\n\t}\n\n\tsetReqFufilled(isFufilled: boolean) {\n\t\tif (isFufilled) this.rootElem.dataset.reqActive = 'true';\n\t\telse delete this.rootElem.dataset.reqActive;\n\t}\n}\n\nclass TalentPicker<TalentsProto> extends Component {\n\treadonly config: TalentConfig<TalentsProto>;\n\tprivate readonly tree: TalentTreePicker<TalentsProto>;\n\tprivate readonly pointsDisplay: HTMLElement;\n\n\tprivate longTouchTimer?: number;\n\tprivate childReqs: TalentReqArrow[];\n\tprivate zIdx: number;\n\tparentReq: TalentReqArrow | null;\n\n\tconstructor(parent: HTMLElement, config: TalentConfig<TalentsProto>, tree: TalentTreePicker<TalentsProto>) {\n\t\tsuper(parent, 'talent-picker-root', document.createElement('a'));\n\t\tthis.config = config;\n\t\tthis.tree = tree;\n\t\tthis.childReqs = [];\n\t\tthis.parentReq = null;\n\t\tthis.zIdx = 0;\n\n\t\tthis.rootElem.style.gridRow = String(this.config.location.rowIdx + 1);\n\t\tthis.rootElem.style.gridColumn = String(this.config.location.colIdx + 1);\n\n\t\tthis.rootElem.dataset.maxPoints = String(this.config.maxPoints);\n\t\tthis.rootElem.dataset.whtticon = 'false';\n\n\t\tthis.pointsDisplay = document.createElement('span');\n\t\tthis.pointsDisplay.classList.add('talent-picker-points');\n\t\tthis.rootElem.appendChild(this.pointsDisplay);\n\n\t\tthis.rootElem.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootElem.addEventListener('contextmenu', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\t\tthis.rootElem.addEventListener('touchmove', _ => {\n\t\t\tif (this.longTouchTimer != undefined) {\n\t\t\t\tclearTimeout(this.longTouchTimer);\n\t\t\t\tthis.longTouchTimer = undefined;\n\t\t\t}\n\t\t});\n\t\tthis.rootElem.addEventListener('touchstart', event => {\n\t\t\tevent.preventDefault();\n\t\t\tthis.longTouchTimer = window.setTimeout(() => {\n\t\t\t\tthis.setPoints(0, true);\n\t\t\t\tthis.tree.picker.inputChanged(TypedEvent.nextEventID());\n\t\t\t\tthis.longTouchTimer = undefined;\n\t\t\t}, 750);\n\t\t});\n\t\tthis.rootElem.addEventListener('touchend', event => {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.longTouchTimer != undefined) {\n\t\t\t\tclearTimeout(this.longTouchTimer);\n\t\t\t\tthis.longTouchTimer = undefined;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet newPoints = this.getPoints() + 1;\n\t\t\tif (this.config.maxPoints < newPoints) {\n\t\t\t\tnewPoints = 0;\n\t\t\t}\n\t\t\tthis.setPoints(newPoints, true);\n\t\t\tthis.tree.picker.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t\tthis.rootElem.addEventListener('mousedown', event => {\n\t\t\tconst rightClick = isRightClick(event);\n\t\t\tif (rightClick) {\n\t\t\t\tthis.setPoints(this.getPoints() - 1, true);\n\t\t\t} else {\n\t\t\t\tthis.setPoints(this.getPoints() + 1, true);\n\t\t\t}\n\t\t\tthis.tree.picker.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tinitChildReqs(): void {\n\t\tif (this.config.childLocations!.length == 0) return;\n\n\t\tfor (const c of this.config.childLocations!) {\n\t\t\tthis.childReqs.push(new TalentReqArrow(this.rootElem.parentElement!, this.config.location, c));\n\t\t}\n\t}\n\n\tgetChildReqArrow(loc: TalentLocation): TalentReqArrow {\n\t\tfor (const c of this.childReqs) {\n\t\t\tif (c.childLoc === loc) {\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t\tthrow Error('missing child prereq?');\n\t}\n\n\tget zIndex() {\n\t\treturn this.zIdx;\n\t}\n\n\tset zIndex(z: number) {\n\t\tthis.zIdx = z;\n\t\tthis.rootElem.style.zIndex = String(this.zIdx);\n\n\t\tfor (const c of this.childReqs) {\n\t\t\tc.zIndex = this.zIdx - 1;\n\t\t}\n\t}\n\n\tgetRow(): number {\n\t\treturn this.config.location.rowIdx;\n\t}\n\n\tgetCol(): number {\n\t\treturn this.config.location.colIdx;\n\t}\n\n\tgetPoints(): number {\n\t\tconst pts = Number(this.rootElem.dataset.points);\n\t\treturn isNaN(pts) ? 0 : pts;\n\t}\n\n\tisFull(): boolean {\n\t\treturn this.getPoints() >= this.config.maxPoints;\n\t}\n\n\t// Returns whether setting the points to newPoints would be a valid talent tree.\n\tcanSetPoints(newPoints: number): boolean {\n\t\tconst oldPoints = this.getPoints();\n\n\t\tif (newPoints > oldPoints) {\n\t\t\tconst additionalPoints = newPoints - oldPoints;\n\n\t\t\tif (this.tree.picker.numPoints + additionalPoints > this.tree.picker.maxPoints) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.tree.numPoints < this.getRow() * this.tree.picker.pointsPerRow) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.config.prereqLocation) {\n\t\t\t\tif (!this.tree.getTalent(this.config.prereqLocation).isFull()) return false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst removedPoints = oldPoints - newPoints;\n\n\t\t\t// Figure out whether any lower talents would have the row requirement\n\t\t\t// broken by subtracting points.\n\t\t\tconst pointTotalsByRow = [...Array(this.tree.picker.numRows).keys()]\n\t\t\t\t.map(rowIdx => this.tree.talents.filter(talent => talent.getRow() == rowIdx))\n\t\t\t\t.map(talentsInRow => sum(talentsInRow.map(talent => talent.getPoints())));\n\t\t\tpointTotalsByRow[this.getRow()] -= removedPoints;\n\n\t\t\tconst cumulativeTotalsByRow = pointTotalsByRow.map((_, rowIdx) => sum(pointTotalsByRow.slice(0, rowIdx + 1)));\n\n\t\t\tif (\n\t\t\t\t!this.tree.talents.every(\n\t\t\t\t\ttalent =>\n\t\t\t\t\t\ttalent.getPoints() == 0 ||\n\t\t\t\t\t\ttalent.getRow() == 0 ||\n\t\t\t\t\t\tcumulativeTotalsByRow[talent.getRow() - 1] >= talent.getRow() * this.tree.picker.pointsPerRow,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (const c of this.config.childLocations!) {\n\t\t\t\tif (this.tree.getTalent(c).getPoints() > 0) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tsetPoints(newPoints: number, checkValidity: boolean) {\n\t\tconst oldPoints = this.getPoints();\n\t\tnewPoints = Math.max(0, newPoints);\n\t\tnewPoints = Math.min(this.config.maxPoints, newPoints);\n\n\t\tif (checkValidity && !this.canSetPoints(newPoints)) return;\n\n\t\tthis.tree.numPoints += newPoints - oldPoints;\n\t\tthis.rootElem.dataset.points = String(newPoints);\n\n\t\tthis.pointsDisplay.textContent = newPoints + '/' + this.config.maxPoints;\n\n\t\tif (this.isFull()) {\n\t\t\tthis.rootElem.classList.add('talent-full');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('talent-full');\n\t\t}\n\n\t\tconst spellId = this.getSpellIdForPoints(newPoints);\n\t\tActionId.fromSpellId(spellId)\n\t\t\t.fill()\n\t\t\t.then(actionId => {\n\t\t\t\tactionId.setWowheadHref(this.rootElem as HTMLAnchorElement);\n\t\t\t\tthis.rootElem.style.backgroundImage = `url('${actionId.iconUrl}')`;\n\t\t\t});\n\t}\n\n\tgetSpellIdForPoints(numPoints: number): number {\n\t\t// 0-indexed rank of talent\n\t\tconst rank = Math.max(0, numPoints - 1);\n\n\t\tif (this.config.spellIds[rank]) {\n\t\t\treturn this.config.spellIds[rank];\n\t\t} else {\n\t\t\tthrow new Error(`No rank ${numPoints} for talent ${String(this.config.fieldName)}`);\n\t\t}\n\t}\n\n\tupdate() {\n\t\tconst canSetPoints = this.canSetPoints(this.getPoints() + 1);\n\t\tif (canSetPoints) {\n\t\t\tthis.rootElem.classList.add('talent-picker-can-add');\n\t\t} else {\n\t\t\tthis.rootElem.classList.remove('talent-picker-can-add');\n\t\t}\n\n\t\tif (this.parentReq) {\n\t\t\tthis.parentReq.setReqFufilled(canSetPoints || this.isFull());\n\t\t}\n\t}\n}\n\nexport type TalentsConfig<TalentsProto> = Array<TalentTreeConfig<TalentsProto>>;\n\nexport type TalentTreeConfig<TalentsProto> = {\n\tname: string;\n\tbackgroundUrl: string;\n\ttalents: Array<TalentConfig<TalentsProto>>;\n};\n\nexport type TalentLocation = {\n\t// 0-indexed row in the tree\n\trowIdx: number;\n\t// 0-indexed column in the tree\n\tcolIdx: number;\n};\n\nexport type TalentConfig<TalentsProto> = {\n\tfieldName?: keyof TalentsProto | string;\n\n\tlocation: TalentLocation;\n\n\t// Location of a prerequisite talent, if any\n\tprereqLocation?: TalentLocation;\n\n\t// Child talents depending on this talent. This is populated automatically.\n\tchildLocations?: TalentLocation[];\n\n\t// Spell ID for each rank of this talent.\n\t// Omitted ranks will be inferred by incrementing from the last provided rank.\n\tspellIds: Array<number>;\n\n\tmaxPoints: number;\n};\n\nexport function newTalentsConfig<TalentsProto>(talents: TalentsConfig<TalentsProto>): TalentsConfig<TalentsProto> {\n\ttalents.forEach(tree => {\n\t\ttree.talents.forEach((talent, i) => {\n\t\t\ttalent.childLocations = [];\n\t\t\t// Validate that talents are given in the correct order (left-to-right top-to-bottom).\n\t\t\tif (i != 0) {\n\t\t\t\tconst prevTalent = tree.talents[i - 1];\n\t\t\t\tif (\n\t\t\t\t\ttalent.location.rowIdx < prevTalent.location.rowIdx ||\n\t\t\t\t\t(talent.location.rowIdx == prevTalent.location.rowIdx && talent.location.colIdx <= prevTalent.location.colIdx)\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(`Out-of-order talent: ${String(talent.fieldName)}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Infer omitted spell IDs.\n\t\t\tif (talent.spellIds.length < talent.maxPoints) {\n\t\t\t\tlet curSpellId = talent.spellIds[talent.spellIds.length - 1];\n\t\t\t\tfor (let pointIdx = talent.spellIds.length; pointIdx < talent.maxPoints; pointIdx++) {\n\t\t\t\t\tcurSpellId++;\n\t\t\t\t\ttalent.spellIds.push(curSpellId);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\treturn talents;\n}\n","import { DruidTalents } from '../proto/druid.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport DruidTalentsJson from './trees/druid.json';\n\nexport const druidTalentsConfig: TalentsConfig<DruidTalents> = newTalentsConfig(DruidTalentsJson);\n","import { HunterTalents } from '../proto/hunter.js';\n\n\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport HunterTalentJson from './trees/hunter.json';\n\nexport const hunterTalentsConfig: TalentsConfig<HunterTalents> = newTalentsConfig(HunterTalentJson);\n","import { MageTalents } from '../proto/mage.js';\n\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport MageTalentJson from './trees/mage.json';\n\nexport const mageTalentsConfig: TalentsConfig<MageTalents> = newTalentsConfig(MageTalentJson);","import { PaladinTalents } from '../proto/paladin.js';\n\n\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport PaladinTalentJson from './trees/paladin.json';\n\nexport const paladinTalentsConfig: TalentsConfig<PaladinTalents> = newTalentsConfig(PaladinTalentJson);\n","import { PriestTalents } from '../proto/priest.js';\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport PriestTalentJson from './trees/priest.json';\n\nexport const priestTalentsConfig: TalentsConfig<PriestTalents> = newTalentsConfig(PriestTalentJson);\n","import { RogueTalents } from '../proto/rogue.js';\n\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport RogueTalentJson from './trees/rogue.json';\n\nexport const rogueTalentsConfig: TalentsConfig<RogueTalents> = newTalentsConfig(RogueTalentJson);\n","import { ShamanTalents } from '../proto/shaman.js';\n\n\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport ShamanTalentJson from './trees/shaman.json';\n\nexport const shamanTalentsConfig: TalentsConfig<ShamanTalents> = newTalentsConfig(ShamanTalentJson);\n","import { WarlockTalents } from '../proto/warlock.js';\n\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport WarlockTalentJson from './trees/warlock.json';\n\nexport const warlockTalentsConfig: TalentsConfig<WarlockTalents> = newTalentsConfig(WarlockTalentJson);\n","import { WarriorTalents } from '../proto/warrior.js';\n\n\nimport { TalentsConfig, newTalentsConfig } from './talents_picker.js';\n\nimport WarriorTalentJson from './trees/warrior.json';\n\nexport const warriorTalentsConfig: TalentsConfig<WarriorTalents> = newTalentsConfig(WarriorTalentJson);","import { Class, Spec } from '../proto/common.js';\nimport {\n\tSpecTalents,\n\tspecToClass,\n\tspecTypeFunctions,\n} from '../proto_utils/utils.js';\n\nimport { druidTalentsConfig } from './druid.js';\nimport { hunterTalentsConfig } from './hunter.js';\nimport { mageTalentsConfig } from './mage.js';\nimport { paladinTalentsConfig } from './paladin.js';\nimport { priestTalentsConfig } from './priest.js';\nimport { rogueTalentsConfig } from './rogue.js';\nimport { shamanTalentsConfig } from './shaman.js';\nimport { TalentsConfig } from './talents_picker.js';\nimport { warlockTalentsConfig } from './warlock.js';\nimport { warriorTalentsConfig } from './warrior.js';\n\nexport const classTalentsConfig: Record<Class, TalentsConfig<any>> = {\n\t[Class.ClassUnknown]: [],\n\t[Class.ClassDruid]: druidTalentsConfig,\n\t[Class.ClassShaman]: shamanTalentsConfig,\n\t[Class.ClassHunter]: hunterTalentsConfig,\n\t[Class.ClassMage]: mageTalentsConfig,\n\t[Class.ClassRogue]: rogueTalentsConfig,\n\t[Class.ClassPaladin]: paladinTalentsConfig,\n\t[Class.ClassPriest]: priestTalentsConfig,\n\t[Class.ClassWarlock]: warlockTalentsConfig,\n\t[Class.ClassWarrior]: warriorTalentsConfig,\n};\n\nexport function talentSpellIdsToTalentString(playerClass: Class, talentIds: Array<number>): string {\n\tconst talentsConfig = classTalentsConfig[playerClass];\n\n\tconst talentsStr = talentsConfig.map(treeConfig => {\n\t\tconst treeStr = treeConfig.talents.map(talentConfig => {\n\t\t\tconst spellIdIndex = talentConfig.spellIds.findIndex(spellId => talentIds.includes(spellId));\n\t\t\tif (spellIdIndex == -1) {\n\t\t\t\treturn '0';\n\t\t\t} else {\n\t\t\t\treturn String(spellIdIndex + 1);\n\t\t\t}\n\t\t}).join('').replace(/0+$/g, '');\n\n\t\treturn treeStr;\n\t}).join('-').replace(/-+$/g, '');\n\n\treturn talentsStr\n}\n\nexport function playerTalentStringToProto<SpecType extends Spec>(spec: Spec, talentString: string): SpecTalents<SpecType> {\n\tconst specFunctions = specTypeFunctions[spec];\n\tconst proto = specFunctions.talentsCreate() as SpecTalents<SpecType>;\n\tconst talentsConfig = classTalentsConfig[specToClass[spec]] as TalentsConfig<SpecTalents<SpecType>>;\n\n\treturn talentStringToProto(proto, talentString, talentsConfig);\n}\n\nexport function talentStringToProto<TalentsProto>(proto: TalentsProto, talentString: string, talentsConfig: TalentsConfig<TalentsProto>): TalentsProto {\n\ttalentString.split('-').forEach((treeString, treeIdx) => {\n\t\tconst treeConfig = talentsConfig[treeIdx];\n\t\t[...treeString].forEach((talentString, i) => {\n\t\t\tconst talentConfig = treeConfig.talents[i];\n\t\t\tconst points = parseInt(talentString);\n\t\t\tif (talentConfig.fieldName) {\n\t\t\t\tif (talentConfig.maxPoints == 1) {\n\t\t\t\t\t(proto[talentConfig.fieldName as keyof TalentsProto] as unknown as boolean) = points == 1;\n\t\t\t\t} else {\n\t\t\t\t\t(proto[talentConfig.fieldName as keyof TalentsProto] as unknown as number) = points;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\treturn proto;\n}\n\n// Note that this function will fail if any of the talent names are not defined. TODO: Remove that condition\n// once all talents are migrated to wrath and use all fields.\nexport function protoToTalentString<TalentsProto>(proto: TalentsProto, talentsConfig: TalentsConfig<TalentsProto>): string {\n\treturn talentsConfig.map(treeConfig => {\n\t\treturn treeConfig.talents\n\t\t\t.map(talentConfig => String(Number(proto[(talentConfig.fieldName as keyof TalentsProto)!])))\n\t\t\t.join('').replace(/0+$/g, '');\n\t}).join('-').replace(/-+$/g, '');\n}\n","import { getLanguageCode } from './constants/lang.js';\nimport * as Mechanics from './constants/mechanics.js';\nimport { LEVEL_THRESHOLDS } from './constants/other.js';\nimport { simLaunchStatuses } from './launched_sims.js';\nimport { MAX_PARTY_SIZE, Party } from './party.js';\nimport {\n\tAuraStats as AuraStatsProto,\n\tPlayer as PlayerProto,\n\tPlayerStats,\n\tSpellStats as SpellStatsProto,\n\tStatWeightsResult,\n\tUnitMetadata as UnitMetadataProto,\n} from './proto/api.js';\nimport { APLRotation, APLRotation_Type as APLRotationType, SimpleRotation } from './proto/apl.js';\nimport {\n\tClass,\n\tConsumes,\n\tCooldowns,\n\tFaction,\n\tHandType,\n\tHealingModel,\n\tIndividualBuffs,\n\tItemRandomSuffix,\n\tItemSlot,\n\tProfession,\n\tPseudoStat,\n\tRace,\n\tSimDatabase,\n\tSpec,\n\tStat,\n\tUnitReference,\n\tUnitStats,\n} from './proto/common.js';\nimport {\n\tDungeonFilterOption,\n\tRaidFilterOption,\n\tSourceFilterOption,\n\tUIEnchant as Enchant,\n\tUIItem as Item,\n\tUIItem_FactionRestriction,\n\tUIRune as Rune,\n} from './proto/ui.js';\nimport { ActionId, ActionIdConfig } from './proto_utils/action_id.js';\nimport { Database } from './proto_utils/database.js';\nimport { EquippedItem, getWeaponDPS } from './proto_utils/equipped_item.js';\nimport { Gear, ItemSwapGear } from './proto_utils/gear.js';\nimport { Stats } from './proto_utils/stats.js';\nimport {\n\tcanEquipEnchant,\n\tcanEquipItem,\n\tclassColors,\n\tClassSpecs,\n\temptyUnitReference,\n\tenchantAppliesToItem,\n\tgetTalentTree,\n\tgetTalentTreeIcon,\n\tgetTalentTreePoints,\n\tisTankSpec,\n\tnewUnitReference,\n\traceToFaction,\n\tSpecOptions,\n\tSpecRotation,\n\tSpecTalents,\n\tspecToClass,\n\tspecToEligibleRaces,\n\tSpecTypeFunctions,\n\tspecTypeFunctions,\n\twithSpecProto,\n} from './proto_utils/utils.js';\nimport { Raid } from './raid.js';\nimport { Sim, SimSettingCategories } from './sim.js';\nimport { playerTalentStringToProto } from './talents/factory.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { stringComparator } from './utils.js';\n\nexport interface AuraStats {\n\tdata: AuraStatsProto;\n\tid: ActionId;\n}\nexport interface SpellStats {\n\tdata: SpellStatsProto;\n\tid: ActionId;\n}\n\nexport class UnitMetadata {\n\tprivate name: string;\n\tprivate auras: Array<AuraStats>;\n\tprivate spells: Array<SpellStats>;\n\n\tconstructor() {\n\t\tthis.name = '';\n\t\tthis.auras = [];\n\t\tthis.spells = [];\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetAuras(): Array<AuraStats> {\n\t\treturn this.auras.slice();\n\t}\n\n\tgetSpells(): Array<SpellStats> {\n\t\treturn this.spells.slice();\n\t}\n\n\t// Returns whether any updates were made.\n\tasync update(metadata: UnitMetadataProto): Promise<boolean> {\n\t\tlet newSpells = metadata!.spells.map(spell => {\n\t\t\treturn {\n\t\t\t\tdata: spell,\n\t\t\t\tid: ActionId.fromProto(spell.id!),\n\t\t\t};\n\t\t});\n\t\tlet newAuras = metadata!.auras.map(aura => {\n\t\t\treturn {\n\t\t\t\tdata: aura,\n\t\t\t\tid: ActionId.fromProto(aura.id!),\n\t\t\t};\n\t\t});\n\n\t\tawait Promise.all([...newSpells, ...newAuras].map(newSpell => newSpell.id.fill().then(newId => (newSpell.id = newId))));\n\n\t\tnewSpells = newSpells.sort((a, b) => stringComparator(a.id.name, b.id.name));\n\t\tnewAuras = newAuras.sort((a, b) => stringComparator(a.id.name, b.id.name));\n\n\t\tlet anyUpdates = false;\n\t\tif (metadata.name != this.name) {\n\t\t\tthis.name = metadata.name;\n\t\t\tanyUpdates = true;\n\t\t}\n\t\tif (newSpells.length != this.spells.length || newSpells.some((newSpell, i) => !newSpell.id.equals(this.spells[i].id))) {\n\t\t\tthis.spells = newSpells;\n\t\t\tanyUpdates = true;\n\t\t}\n\t\tif (newAuras.length != this.auras.length || newAuras.some((newAura, i) => !newAura.id.equals(this.auras[i].id))) {\n\t\t\tthis.auras = newAuras;\n\t\t\tanyUpdates = true;\n\t\t}\n\n\t\treturn anyUpdates;\n\t}\n}\n\nexport class UnitMetadataList {\n\tprivate metadatas: Array<UnitMetadata>;\n\n\tconstructor() {\n\t\tthis.metadatas = [];\n\t}\n\n\tasync update(newMetadatas: Array<UnitMetadataProto>): Promise<boolean> {\n\t\tconst oldLen = this.metadatas.length;\n\n\t\tif (newMetadatas.length > oldLen) {\n\t\t\tfor (let i = oldLen; i < newMetadatas.length; i++) {\n\t\t\t\tthis.metadatas.push(new UnitMetadata());\n\t\t\t}\n\t\t} else if (newMetadatas.length < oldLen) {\n\t\t\tthis.metadatas = this.metadatas.slice(0, newMetadatas.length);\n\t\t}\n\n\t\tconst anyUpdates = await Promise.all(newMetadatas.map((metadata, i) => this.metadatas[i].update(metadata)));\n\n\t\treturn oldLen != this.metadatas.length || anyUpdates.some(v => v);\n\t}\n\n\tasList(): Array<UnitMetadata> {\n\t\treturn this.metadatas.slice();\n\t}\n}\n\nexport interface MeleeCritCapInfo {\n\tmeleeCrit: number;\n\tmeleeHit: number;\n\texpertise: number;\n\tsuppression: number;\n\tglancing: number;\n\tdebuffCrit: number;\n\thasOffhandWeapon: boolean;\n\tmeleeHitCap: number;\n\texpertiseCap: number;\n\tremainingMeleeHitCap: number;\n\tremainingExpertiseCap: number;\n\tbaseCritCap: number;\n\tspecSpecificOffset: number;\n\tplayerCritCapDelta: number;\n}\n\nexport type AutoRotationGenerator<SpecType extends Spec> = (player: Player<SpecType>) => APLRotation;\nexport type SimpleRotationGenerator<SpecType extends Spec> = (\n\tplayer: Player<SpecType>,\n\tsimpleRotation: SpecRotation<SpecType>,\n\tcooldowns: Cooldowns,\n) => APLRotation;\n\nexport interface PlayerConfig<SpecType extends Spec> {\n\tautoRotation: AutoRotationGenerator<SpecType>;\n\tsimpleRotation?: SimpleRotationGenerator<SpecType>;\n}\n\nconst SPEC_CONFIGS: Partial<Record<Spec, PlayerConfig<any>>> = {};\n\nexport function registerSpecConfig(spec: Spec, config: PlayerConfig<any>) {\n\tSPEC_CONFIGS[spec] = config;\n}\n\nexport function getSpecConfig<SpecType extends Spec>(spec: SpecType): PlayerConfig<SpecType> {\n\tconst config = SPEC_CONFIGS[spec] as PlayerConfig<SpecType>;\n\tif (!config) {\n\t\tthrow new Error('No config registered for Spec: ' + spec);\n\t}\n\treturn config;\n}\n\n// Manages all the gear / consumes / other settings for a single Player.\nexport class Player<SpecType extends Spec> {\n\treadonly sim: Sim;\n\tprivate party: Party | null;\n\tprivate raid: Raid | null;\n\n\treadonly spec: Spec;\n\tprivate name = '';\n\tprivate buffs: IndividualBuffs = IndividualBuffs.create();\n\tprivate consumes: Consumes = Consumes.create();\n\tprivate bonusStats: Stats = new Stats();\n\tprivate gear: Gear = new Gear({});\n\t//private bulkEquipmentSpec: BulkEquipmentSpec = BulkEquipmentSpec.create();\n\tprivate enableItemSwap = false;\n\tprivate itemSwapGear: ItemSwapGear = new ItemSwapGear({});\n\tprivate race: Race;\n\tprivate level: number;\n\tprivate profession1: Profession = 0;\n\tprivate profession2: Profession = 0;\n\taplRotation: APLRotation = APLRotation.create();\n\tprivate talentsString = '';\n\tprivate specOptions: SpecOptions<SpecType>;\n\tprivate reactionTime = 0;\n\tprivate channelClipDelay = 0;\n\tprivate inFrontOfTarget = false;\n\tprivate distanceFromTarget = 0;\n\tprivate healingModel: HealingModel = HealingModel.create();\n\tprivate healingEnabled = false;\n\n\tprivate isbSbFrequency = 0.0;\n\tprivate isbCrit = 0.0;\n\tprivate isbWarlocks = 0;\n\tprivate isbSpriests = 0;\n\n\tprivate readonly autoRotationGenerator: AutoRotationGenerator<SpecType> | null = null;\n\tprivate readonly simpleRotationGenerator: SimpleRotationGenerator<SpecType> | null = null;\n\n\tprivate itemEPCache = new Array<Map<number, number>>();\n\tprivate randomSuffixEPCache = new Map<number, number>();\n\tprivate enchantEPCache = new Map<number, number>();\n\tprivate talents: SpecTalents<SpecType> | null = null;\n\n\treadonly specTypeFunctions: SpecTypeFunctions<SpecType>;\n\n\tprivate static readonly numEpRatios = 6;\n\tprivate epRatios: Array<number> = new Array<number>(Player.numEpRatios).fill(0);\n\tprivate epWeights: Stats = new Stats();\n\tprivate currentStats: PlayerStats = PlayerStats.create();\n\tprivate metadata: UnitMetadata = new UnitMetadata();\n\tprivate petMetadatas: UnitMetadataList = new UnitMetadataList();\n\n\treadonly nameChangeEmitter = new TypedEvent<void>('PlayerName');\n\treadonly buffsChangeEmitter = new TypedEvent<void>('PlayerBuffs');\n\treadonly consumesChangeEmitter = new TypedEvent<void>('PlayerConsumes');\n\treadonly bonusStatsChangeEmitter = new TypedEvent<void>('PlayerBonusStats');\n\treadonly gearChangeEmitter = new TypedEvent<void>('PlayerGear');\n\treadonly itemSwapChangeEmitter = new TypedEvent<void>('PlayerItemSwap');\n\treadonly professionChangeEmitter = new TypedEvent<void>('PlayerProfession');\n\treadonly raceChangeEmitter = new TypedEvent<void>('PlayerRace');\n\treadonly levelChangeEmitter = new TypedEvent<void>('PlayerLevel');\n\treadonly rotationChangeEmitter = new TypedEvent<void>('PlayerRotation');\n\treadonly talentsChangeEmitter = new TypedEvent<void>('PlayerTalents');\n\treadonly specOptionsChangeEmitter = new TypedEvent<void>('PlayerSpecOptions');\n\treadonly inFrontOfTargetChangeEmitter = new TypedEvent<void>('PlayerInFrontOfTarget');\n\treadonly distanceFromTargetChangeEmitter = new TypedEvent<void>('PlayerDistanceFromTarget');\n\treadonly healingModelChangeEmitter = new TypedEvent<void>('PlayerHealingModel');\n\treadonly epWeightsChangeEmitter = new TypedEvent<void>('PlayerEpWeights');\n\treadonly miscOptionsChangeEmitter = new TypedEvent<void>('PlayerMiscOptions');\n\n\treadonly currentStatsEmitter = new TypedEvent<void>('PlayerCurrentStats');\n\treadonly epRatiosChangeEmitter = new TypedEvent<void>('PlayerEpRatios');\n\treadonly epRefStatChangeEmitter = new TypedEvent<void>('PlayerEpRefStat');\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\tconstructor(spec: Spec, sim: Sim) {\n\t\tthis.sim = sim;\n\t\tthis.party = null;\n\t\tthis.raid = null;\n\n\t\tthis.spec = spec;\n\t\tthis.race = specToEligibleRaces[this.spec][0];\n\t\tthis.level = LEVEL_THRESHOLDS[simLaunchStatuses[this.spec].phase];\n\t\tthis.specTypeFunctions = specTypeFunctions[this.spec] as SpecTypeFunctions<SpecType>;\n\t\tthis.specOptions = this.specTypeFunctions.optionsCreate();\n\n\t\tconst specConfig = SPEC_CONFIGS[this.spec] as PlayerConfig<SpecType>;\n\t\tif (!specConfig) {\n\t\t\tthrow new Error('Could not find spec config for spec: ' + this.spec);\n\t\t}\n\n\t\tthis.autoRotationGenerator = specConfig.autoRotation;\n\t\tif (specConfig.simpleRotation) {\n\t\t\tthis.simpleRotationGenerator = specConfig.simpleRotation;\n\t\t} else {\n\t\t\tthis.simpleRotationGenerator = null;\n\t\t}\n\n\t\tfor (let i = 0; i < ItemSlot.ItemSlotRanged + 1; ++i) {\n\t\t\tthis.itemEPCache[i] = new Map();\n\t\t}\n\n\t\tthis.changeEmitter = TypedEvent.onAny(\n\t\t\t[\n\t\t\t\tthis.nameChangeEmitter,\n\t\t\t\tthis.buffsChangeEmitter,\n\t\t\t\tthis.consumesChangeEmitter,\n\t\t\t\tthis.bonusStatsChangeEmitter,\n\t\t\t\tthis.gearChangeEmitter,\n\t\t\t\tthis.itemSwapChangeEmitter,\n\t\t\t\tthis.professionChangeEmitter,\n\t\t\t\tthis.raceChangeEmitter,\n\t\t\t\tthis.levelChangeEmitter,\n\t\t\t\tthis.rotationChangeEmitter,\n\t\t\t\tthis.talentsChangeEmitter,\n\t\t\t\tthis.specOptionsChangeEmitter,\n\t\t\t\tthis.miscOptionsChangeEmitter,\n\t\t\t\tthis.inFrontOfTargetChangeEmitter,\n\t\t\t\tthis.distanceFromTargetChangeEmitter,\n\t\t\t\tthis.healingModelChangeEmitter,\n\t\t\t\tthis.epWeightsChangeEmitter,\n\t\t\t\tthis.epRatiosChangeEmitter,\n\t\t\t\tthis.epRefStatChangeEmitter,\n\t\t\t],\n\t\t\t'PlayerChange',\n\t\t);\n\t}\n\n\tgetSpecIcon(): string {\n\t\treturn getTalentTreeIcon(this.spec, this.getTalentsString());\n\t}\n\n\tgetClass(): Class {\n\t\treturn specToClass[this.spec];\n\t}\n\n\tgetClassColor(): string {\n\t\treturn classColors[this.getClass()];\n\t}\n\n\tisSpec<T extends Spec>(spec: T): this is Player<T> {\n\t\treturn this.spec == spec;\n\t}\n\tisClass<T extends Class>(clazz: T): this is Player<ClassSpecs<T>> {\n\t\treturn this.getClass() == clazz;\n\t}\n\n\tgetParty(): Party | null {\n\t\treturn this.party;\n\t}\n\n\tgetRaid(): Raid | null {\n\t\treturn this.raid;\n\t}\n\n\t// Returns this player's index within its party [0-4].\n\tgetPartyIndex(): number {\n\t\tif (this.party == null) {\n\t\t\tthrow new Error(\"Can't get party index for player without a party!\");\n\t\t}\n\n\t\treturn this.party.getPlayers().indexOf(this);\n\t}\n\n\t// Returns this player's index within its raid [0-24].\n\tgetRaidIndex(): number {\n\t\tif (this.party == null) {\n\t\t\tthrow new Error(\"Can't get raid index for player without a party!\");\n\t\t}\n\n\t\treturn this.party.getIndex() * MAX_PARTY_SIZE + this.getPartyIndex();\n\t}\n\n\t// This should only ever be called from party.\n\tsetParty(newParty: Party | null) {\n\t\tif (newParty == null) {\n\t\t\tthis.party = null;\n\t\t\tthis.raid = null;\n\t\t} else {\n\t\t\tthis.party = newParty;\n\t\t\tthis.raid = newParty.raid;\n\t\t}\n\t}\n\n\tgetOtherPartyMembers(): Array<Player<any>> {\n\t\tif (this.party == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.party.getPlayers().filter(player => player != null && player != this) as Array<Player<any>>;\n\t}\n\n\t// Returns all items that this player can wear in the given slot.\n\tgetItems(slot: ItemSlot): Array<Item> {\n\t\treturn this.sim.db.getItems(slot).filter(item => canEquipItem(this, item, slot));\n\t}\n\n\t// Returns all random suffixes that this player would be interested in for the given base item.\n\tgetRandomSuffixes(item: Item): Array<ItemRandomSuffix> {\n\t\tconst allSuffixes = item.randomSuffixOptions.map(id => this.sim.db.getRandomSuffixById(id)!);\n\t\treturn allSuffixes.filter(suffix => this.computeRandomSuffixEP(suffix) > 0);\n\t}\n\n\t// Returns all enchants that this player can wear in the given slot.\n\tgetEnchants(slot: ItemSlot): Array<Enchant> {\n\t\treturn this.sim.db.getEnchants(slot).filter(enchant => canEquipEnchant(enchant, this.spec));\n\t}\n\n\tgetRunes(slot: ItemSlot): Array<Rune> {\n\t\treturn this.sim.db.getRunes(slot, this.getClass());\n\t}\n\n\tgetEpWeights(): Stats {\n\t\treturn this.epWeights;\n\t}\n\n\tsetEpWeights(eventID: EventID, newEpWeights: Stats) {\n\t\tthis.epWeights = newEpWeights;\n\t\tthis.epWeightsChangeEmitter.emit(eventID);\n\n\t\tthis.enchantEPCache = new Map();\n\t\tthis.randomSuffixEPCache = new Map();\n\t\tfor (let i = 0; i < ItemSlot.ItemSlotRanged + 1; ++i) {\n\t\t\tthis.itemEPCache[i] = new Map();\n\t\t}\n\t}\n\n\tgetDefaultEpRatios(isTankSpec: boolean, isHealingSpec: boolean): Array<number> {\n\t\tconst defaultRatios = new Array(Player.numEpRatios).fill(0);\n\t\tif (isHealingSpec) {\n\t\t\t// By default only value HPS EP for healing spec\n\t\t\tdefaultRatios[1] = 1;\n\t\t} else if (isTankSpec) {\n\t\t\t// By default value TPS and DTPS EP equally for tanking spec\n\t\t\tdefaultRatios[2] = 1;\n\t\t\tdefaultRatios[3] = 1;\n\t\t} else {\n\t\t\t// By default only value DPS EP\n\t\t\tdefaultRatios[0] = 1;\n\t\t}\n\t\treturn defaultRatios;\n\t}\n\n\tgetEpRatios() {\n\t\treturn this.epRatios.slice();\n\t}\n\n\tsetEpRatios(eventID: EventID, newRatios: Array<number>) {\n\t\tthis.epRatios = newRatios;\n\t\tthis.epRatiosChangeEmitter.emit(eventID);\n\t}\n\n\tasync computeStatWeights(\n\t\teventID: EventID,\n\t\tepStats: Array<Stat>,\n\t\tepPseudoStats: Array<PseudoStat>,\n\t\tepReferenceStat: Stat,\n\t\tonProgress: (_?: any) => void,\n\t): Promise<StatWeightsResult> {\n\t\tconst result = await this.sim.statWeights(this, epStats, epPseudoStats, epReferenceStat, onProgress);\n\t\treturn result;\n\t}\n\n\tgetCurrentStats(): PlayerStats {\n\t\treturn PlayerStats.clone(this.currentStats);\n\t}\n\n\tsetCurrentStats(eventID: EventID, newStats: PlayerStats) {\n\t\tthis.currentStats = newStats;\n\t\tthis.currentStatsEmitter.emit(eventID);\n\t}\n\n\tgetMetadata(): UnitMetadata {\n\t\treturn this.metadata;\n\t}\n\n\tgetPetMetadatas(): UnitMetadataList {\n\t\treturn this.petMetadatas;\n\t}\n\n\tasync updateMetadata(): Promise<boolean> {\n\t\tconst playerPromise = this.metadata.update(this.currentStats.metadata!);\n\t\tconst petsPromise = this.petMetadatas.update(this.currentStats.pets.map(p => p.metadata!));\n\t\tconst playerUpdated = await playerPromise;\n\t\tconst petsUpdated = await petsPromise;\n\t\treturn playerUpdated || petsUpdated;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\tsetName(eventID: EventID, newName: string) {\n\t\tif (newName != this.name) {\n\t\t\tthis.name = newName;\n\t\t\tthis.nameChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetLabel(): string {\n\t\tif (this.party) {\n\t\t\treturn `${this.name} (#${this.getRaidIndex() + 1})`;\n\t\t} else {\n\t\t\treturn this.name;\n\t\t}\n\t}\n\n\tgetRace(): Race {\n\t\treturn this.race;\n\t}\n\tsetRace(eventID: EventID, newRace: Race) {\n\t\tif (newRace != this.race) {\n\t\t\tthis.race = newRace;\n\t\t\tthis.raceChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\tgetLevel(): number {\n\t\treturn this.level;\n\t}\n\tsetLevel(eventID: EventID, newLevel: number) {\n\t\tif (newLevel != this.level) {\n\t\t\tthis.level = newLevel;\n\t\t\tthis.levelChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetProfession1(): Profession {\n\t\treturn this.profession1;\n\t}\n\tsetProfession1(eventID: EventID, newProfession: Profession) {\n\t\tif (newProfession != this.profession1) {\n\t\t\tthis.profession1 = newProfession;\n\t\t\tthis.professionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\tgetProfession2(): Profession {\n\t\treturn this.profession2;\n\t}\n\tsetProfession2(eventID: EventID, newProfession: Profession) {\n\t\tif (newProfession != this.profession2) {\n\t\t\tthis.profession2 = newProfession;\n\t\t\tthis.professionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\tgetProfessions(): Array<Profession> {\n\t\treturn [this.profession1, this.profession2].filter(p => p != Profession.ProfessionUnknown);\n\t}\n\tsetProfessions(eventID: EventID, newProfessions: Array<Profession>) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setProfession1(eventID, newProfessions[0] || Profession.ProfessionUnknown);\n\t\t\tthis.setProfession2(eventID, newProfessions[1] || Profession.ProfessionUnknown);\n\t\t});\n\t}\n\thasProfession(prof: Profession): boolean {\n\t\treturn this.getProfessions().includes(prof);\n\t}\n\tisBlacksmithing(): boolean {\n\t\treturn this.hasProfession(Profession.Blacksmithing);\n\t}\n\n\tgetFaction(): Faction {\n\t\treturn raceToFaction[this.getRace()];\n\t}\n\n\tgetBuffs(): IndividualBuffs {\n\t\t// Make a defensive copy\n\t\treturn IndividualBuffs.clone(this.buffs);\n\t}\n\n\tsetBuffs(eventID: EventID, newBuffs: IndividualBuffs) {\n\t\tif (IndividualBuffs.equals(this.buffs, newBuffs)) return;\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = IndividualBuffs.clone(newBuffs);\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetConsumes(): Consumes {\n\t\t// Make a defensive copy\n\t\treturn Consumes.clone(this.consumes);\n\t}\n\n\tsetConsumes(eventID: EventID, newConsumes: Consumes) {\n\t\tif (Consumes.equals(this.consumes, newConsumes)) return;\n\n\t\t// Make a defensive copy\n\t\tthis.consumes = Consumes.clone(newConsumes);\n\t\tthis.consumesChangeEmitter.emit(eventID);\n\t}\n\n\tcanDualWield2H(): boolean {\n\t\treturn false;\n\t}\n\n\tequipItem(eventID: EventID, slot: ItemSlot, newItem: EquippedItem | null) {\n\t\tthis.setGear(eventID, this.gear.withEquippedItem(slot, newItem, this.canDualWield2H()));\n\t}\n\n\tgetEquippedItem(slot: ItemSlot): EquippedItem | null {\n\t\treturn this.gear.getEquippedItem(slot);\n\t}\n\n\tgetGear(): Gear {\n\t\treturn this.gear;\n\t}\n\n\tsetGear(eventID: EventID, newGear: Gear) {\n\t\tif (newGear.equals(this.gear)) return;\n\n\t\tthis.gear = newGear;\n\t\tthis.gearChangeEmitter.emit(eventID);\n\t}\n\n\tgetEnableItemSwap(): boolean {\n\t\treturn this.enableItemSwap;\n\t}\n\n\tsetEnableItemSwap(eventID: EventID, newEnableItemSwap: boolean) {\n\t\tif (newEnableItemSwap == this.enableItemSwap) return;\n\n\t\tthis.enableItemSwap = newEnableItemSwap;\n\t\tthis.itemSwapChangeEmitter.emit(eventID);\n\t}\n\n\tequipItemSwapitem(eventID: EventID, slot: ItemSlot, newItem: EquippedItem | null) {\n\t\tthis.setItemSwapGear(eventID, this.itemSwapGear.withEquippedItem(slot, newItem, this.canDualWield2H()));\n\t}\n\n\tgetItemSwapItem(slot: ItemSlot): EquippedItem | null {\n\t\treturn this.itemSwapGear.getEquippedItem(slot);\n\t}\n\n\tgetItemSwapGear(): ItemSwapGear {\n\t\treturn this.itemSwapGear;\n\t}\n\n\tsetItemSwapGear(eventID: EventID, newItemSwapGear: ItemSwapGear) {\n\t\tif (newItemSwapGear.equals(this.itemSwapGear)) return;\n\n\t\tthis.itemSwapGear = newItemSwapGear;\n\t\tthis.itemSwapChangeEmitter.emit(eventID);\n\t}\n\n\t/*\n\tsetBulkEquipmentSpec(eventID: EventID, newBulkEquipmentSpec: BulkEquipmentSpec) {\n\t\tif (BulkEquipmentSpec.equals(this.bulkEquipmentSpec, newBulkEquipmentSpec))\n\t\t\treturn;\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.bulkEquipmentSpec = newBulkEquipmentSpec;\n\t\t\tthis.bulkGearChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tgetBulkEquipmentSpec(): BulkEquipmentSpec {\n\t\treturn BulkEquipmentSpec.clone(this.bulkEquipmentSpec);\n\t}\n\t*/\n\n\tgetBonusStats(): Stats {\n\t\treturn this.bonusStats;\n\t}\n\n\tsetBonusStats(eventID: EventID, newBonusStats: Stats) {\n\t\tif (newBonusStats.equals(this.bonusStats)) return;\n\n\t\tthis.bonusStats = newBonusStats;\n\t\tthis.bonusStatsChangeEmitter.emit(eventID);\n\t}\n\n\tgetMeleeCritCapInfo(): MeleeCritCapInfo {\n\t\tconst meleeCrit = (this.currentStats.finalStats?.stats[Stat.StatMeleeCrit] || 0.0) / Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE;\n\t\tconst meleeHit = (this.currentStats.finalStats?.stats[Stat.StatMeleeHit] || 0.0) / Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE;\n\t\tconst expertise = (this.currentStats.finalStats?.stats[Stat.StatExpertise] || 0.0) / Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION / 4;\n\t\tconst suppression = 4.8;\n\t\tconst glancing = 24.0;\n\n\t\tconst hasOffhandWeapon = this.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed !== undefined;\n\t\t// Due to warrior HS bug, hit cap for crit cap calculation should be 8% instead of 27%\n\t\tconst meleeHitCap = hasOffhandWeapon && this.spec != Spec.SpecWarrior ? 27.0 : 8.0;\n\t\tconst dodgeCap = 6.5;\n\t\tconst parryCap = this.getInFrontOfTarget() ? 14.0 : 0;\n\t\tconst expertiseCap = dodgeCap + parryCap;\n\n\t\tconst remainingMeleeHitCap = Math.max(meleeHitCap - meleeHit, 0.0);\n\t\tconst remainingDodgeCap = Math.max(dodgeCap - expertise, 0.0);\n\t\tconst remainingParryCap = Math.max(parryCap - expertise, 0.0);\n\t\tconst remainingExpertiseCap = remainingDodgeCap + remainingParryCap;\n\n\t\tlet specSpecificOffset = 0.0;\n\n\t\tif (this.spec === Spec.SpecEnhancementShaman) {\n\t\t\t// Elemental Devastation uptime is near 100%\n\t\t\tconst ranks = (this as Player<Spec.SpecEnhancementShaman>).getTalents().elementalDevastation;\n\t\t\tspecSpecificOffset = 3.0 * ranks;\n\t\t}\n\n\t\tconst debuffCrit = 0.0;\n\n\t\tthis.sim.raid.getDebuffs();\n\n\t\tconst baseCritCap = 100.0 - glancing + suppression - remainingMeleeHitCap - remainingExpertiseCap - specSpecificOffset;\n\t\tconst playerCritCapDelta = meleeCrit - baseCritCap + debuffCrit;\n\n\t\treturn {\n\t\t\tmeleeCrit,\n\t\t\tmeleeHit,\n\t\t\texpertise,\n\t\t\tsuppression,\n\t\t\tglancing,\n\t\t\tdebuffCrit,\n\t\t\thasOffhandWeapon,\n\t\t\tmeleeHitCap,\n\t\t\texpertiseCap,\n\t\t\tremainingMeleeHitCap,\n\t\t\tremainingExpertiseCap,\n\t\t\tbaseCritCap,\n\t\t\tspecSpecificOffset,\n\t\t\tplayerCritCapDelta,\n\t\t};\n\t}\n\n\tgetMeleeCritCap() {\n\t\treturn this.getMeleeCritCapInfo().playerCritCapDelta;\n\t}\n\n\tgetSimpleRotation(): SpecRotation<SpecType> {\n\t\tconst jsonStr = this.aplRotation.simple?.specRotationJson || '';\n\t\tif (!jsonStr) {\n\t\t\treturn this.specTypeFunctions.rotationCreate();\n\t\t}\n\n\t\ttry {\n\t\t\tconst json = JSON.parse(jsonStr);\n\t\t\treturn this.specTypeFunctions.rotationFromJson(json);\n\t\t} catch (e) {\n\t\t\tconsole.warn(`Error parsing rotation spec options: ${e}\\n\\nSpec options: '${jsonStr}'`);\n\t\t\treturn this.specTypeFunctions.rotationCreate();\n\t\t}\n\t}\n\n\tsetSimpleRotation(eventID: EventID, newRotation: SpecRotation<SpecType>) {\n\t\tif (this.specTypeFunctions.rotationEquals(newRotation, this.getSimpleRotation())) return;\n\n\t\tif (!this.aplRotation.simple) {\n\t\t\tthis.aplRotation.simple = SimpleRotation.create();\n\t\t}\n\t\tthis.aplRotation.simple.specRotationJson = JSON.stringify(this.specTypeFunctions.rotationToJson(newRotation));\n\n\t\tthis.rotationChangeEmitter.emit(eventID);\n\t}\n\n\tgetSimpleCooldowns(): Cooldowns {\n\t\t// Make a defensive copy\n\t\treturn Cooldowns.clone(this.aplRotation.simple?.cooldowns || Cooldowns.create());\n\t}\n\n\tsetSimpleCooldowns(eventID: EventID, newCooldowns: Cooldowns) {\n\t\tif (Cooldowns.equals(this.getSimpleCooldowns(), newCooldowns)) return;\n\n\t\tif (!this.aplRotation.simple) {\n\t\t\tthis.aplRotation.simple = SimpleRotation.create();\n\t\t}\n\t\tthis.aplRotation.simple.cooldowns = newCooldowns;\n\t\tthis.rotationChangeEmitter.emit(eventID);\n\t}\n\n\tsetAplRotation(eventID: EventID, newRotation: APLRotation) {\n\t\tif (APLRotation.equals(newRotation, this.aplRotation)) return;\n\n\t\tthis.aplRotation = APLRotation.clone(newRotation);\n\t\tthis.rotationChangeEmitter.emit(eventID);\n\t}\n\n\tgetRotationType(): APLRotationType {\n\t\tif (this.aplRotation.type == APLRotationType.TypeUnknown) {\n\t\t\treturn APLRotationType.TypeAPL;\n\t\t} else {\n\t\t\treturn this.aplRotation.type;\n\t\t}\n\t}\n\n\thasSimpleRotationGenerator(): boolean {\n\t\treturn this.simpleRotationGenerator != null;\n\t}\n\n\tgetResolvedAplRotation(): APLRotation {\n\t\tconst type = this.getRotationType();\n\t\tif (type == APLRotationType.TypeAuto && this.autoRotationGenerator) {\n\t\t\t// Clone to avoid modifying preset rotations, which are often returned directly.\n\t\t\tconst rot = APLRotation.clone(this.autoRotationGenerator(this));\n\t\t\trot.type = APLRotationType.TypeAuto;\n\t\t\treturn rot;\n\t\t} else if (type == APLRotationType.TypeSimple && this.simpleRotationGenerator) {\n\t\t\t// Clone to avoid modifying preset rotations, which are often returned directly.\n\t\t\tconst simpleRot = this.getSimpleRotation();\n\t\t\tconst rot = APLRotation.clone(this.simpleRotationGenerator(this, simpleRot, this.getSimpleCooldowns()));\n\t\t\trot.simple = this.aplRotation.simple;\n\t\t\trot.type = APLRotationType.TypeSimple;\n\t\t\treturn rot;\n\t\t} else {\n\t\t\treturn this.aplRotation;\n\t\t}\n\t}\n\n\tgetTalents(): SpecTalents<SpecType> {\n\t\tif (this.talents == null) {\n\t\t\tthis.talents = playerTalentStringToProto(this.spec, this.talentsString) as SpecTalents<SpecType>;\n\t\t}\n\t\treturn this.talents!;\n\t}\n\n\tgetTalentsString(): string {\n\t\treturn this.talentsString;\n\t}\n\n\tsetTalentsString(eventID: EventID, newTalentsString: string) {\n\t\tif (newTalentsString == this.talentsString) return;\n\n\t\tthis.talentsString = newTalentsString;\n\t\tthis.talents = null;\n\t\tthis.talentsChangeEmitter.emit(eventID);\n\t}\n\n\tgetTalentTree(): number {\n\t\treturn getTalentTree(this.getTalentsString());\n\t}\n\n\tgetTalentTreePoints(): Array<number> {\n\t\treturn getTalentTreePoints(this.getTalentsString());\n\t}\n\n\tgetTalentTreeIcon(): string {\n\t\treturn getTalentTreeIcon(this.spec, this.getTalentsString());\n\t}\n\n\tgetSpecOptions(): SpecOptions<SpecType> {\n\t\treturn this.specTypeFunctions.optionsCopy(this.specOptions);\n\t}\n\n\tsetSpecOptions(eventID: EventID, newSpecOptions: SpecOptions<SpecType>) {\n\t\tif (this.specTypeFunctions.optionsEquals(newSpecOptions, this.specOptions)) return;\n\n\t\tthis.specOptions = this.specTypeFunctions.optionsCopy(newSpecOptions);\n\t\tthis.specOptionsChangeEmitter.emit(eventID);\n\t}\n\n\tgetReactionTime(): number {\n\t\treturn this.reactionTime;\n\t}\n\n\tsetReactionTime(eventID: EventID, newReactionTime: number) {\n\t\tif (newReactionTime == this.reactionTime) return;\n\n\t\tthis.reactionTime = newReactionTime;\n\t\tthis.miscOptionsChangeEmitter.emit(eventID);\n\t}\n\n\tgetChannelClipDelay(): number {\n\t\treturn this.channelClipDelay;\n\t}\n\n\tsetChannelClipDelay(eventID: EventID, newChannelClipDelay: number) {\n\t\tif (newChannelClipDelay == this.channelClipDelay) return;\n\n\t\tthis.channelClipDelay = newChannelClipDelay;\n\t\tthis.miscOptionsChangeEmitter.emit(eventID);\n\t}\n\n\tgetInFrontOfTarget(): boolean {\n\t\treturn this.inFrontOfTarget;\n\t}\n\n\tsetInFrontOfTarget(eventID: EventID, newInFrontOfTarget: boolean) {\n\t\tif (newInFrontOfTarget == this.inFrontOfTarget) return;\n\n\t\tthis.inFrontOfTarget = newInFrontOfTarget;\n\t\tthis.inFrontOfTargetChangeEmitter.emit(eventID);\n\t}\n\n\tgetDistanceFromTarget(): number {\n\t\treturn this.distanceFromTarget;\n\t}\n\n\tsetDistanceFromTarget(eventID: EventID, newDistanceFromTarget: number) {\n\t\tif (newDistanceFromTarget == this.distanceFromTarget) return;\n\n\t\tthis.distanceFromTarget = newDistanceFromTarget;\n\t\tthis.distanceFromTargetChangeEmitter.emit(eventID);\n\t}\n\n\tsetDefaultHealingParams(hm: HealingModel) {\n\t\tconst boss = this.sim.encounter.primaryTarget;\n\t\tconst dualWield = boss.dualWield;\n\t\tif (hm.cadenceSeconds == 0) {\n\t\t\thm.cadenceSeconds = 1.5 * boss.swingSpeed;\n\t\t\tif (dualWield) {\n\t\t\t\thm.cadenceSeconds /= 2;\n\t\t\t}\n\t\t}\n\t\tif (hm.hps == 0) {\n\t\t\thm.hps = (0.175 * boss.minBaseDamage) / boss.swingSpeed;\n\t\t\tif (dualWield) {\n\t\t\t\thm.hps *= 1.5;\n\t\t\t}\n\t\t}\n\t}\n\n\tenableHealing() {\n\t\tthis.healingEnabled = true;\n\t\tconst hm = this.getHealingModel();\n\t\tif (hm.cadenceSeconds == 0 || hm.hps == 0) {\n\t\t\tthis.setDefaultHealingParams(hm);\n\t\t\tthis.setHealingModel(0, hm);\n\t\t}\n\t}\n\n\tgetHealingModel(): HealingModel {\n\t\t// Make a defensive copy\n\t\treturn HealingModel.clone(this.healingModel);\n\t}\n\n\tsetHealingModel(eventID: EventID, newHealingModel: HealingModel) {\n\t\tif (HealingModel.equals(this.healingModel, newHealingModel)) return;\n\n\t\t// Make a defensive copy\n\t\tthis.healingModel = HealingModel.clone(newHealingModel);\n\t\t// If we have enabled healing model and try to set 0s cadence or 0 incoming HPS, then set intelligent defaults instead based on boss parameters.\n\t\tif (this.healingEnabled) {\n\t\t\tthis.setDefaultHealingParams(this.healingModel);\n\t\t}\n\t\tthis.healingModelChangeEmitter.emit(eventID);\n\t}\n\n\tgetIsbSbFrequency(): number {\n\t\treturn this.isbSbFrequency;\n\t}\n\n\tsetIsbSbFrequency(eventID: EventID, newIsbSbFrequency: number) {\n\t\tif (newIsbSbFrequency == this.isbSbFrequency) return;\n\n\t\tthis.isbSbFrequency = newIsbSbFrequency;\n\t\tthis.changeEmitter.emit(eventID);\n\t}\n\n\tgetIsbCrit(): number {\n\t\treturn this.isbCrit;\n\t}\n\n\tsetIsbCrit(eventID: EventID, newIsbCrit: number) {\n\t\tif (newIsbCrit == this.isbCrit) return;\n\n\t\tthis.isbCrit = newIsbCrit;\n\t\tthis.changeEmitter.emit(eventID);\n\t}\n\n\tgetIsbWarlocks(): number {\n\t\treturn this.isbWarlocks;\n\t}\n\n\tsetIsbWarlocks(eventID: EventID, newIsbWarlocks: number) {\n\t\tif (newIsbWarlocks == this.isbWarlocks) return;\n\n\t\tthis.isbWarlocks = newIsbWarlocks;\n\t\tthis.changeEmitter.emit(eventID);\n\t}\n\n\tgetIsbSpriests(): number {\n\t\treturn this.isbSpriests;\n\t}\n\n\tsetIsbSpriests(eventID: EventID, newIsbSpriests: number) {\n\t\tif (newIsbSpriests == this.isbSpriests) return;\n\n\t\tthis.isbSpriests = newIsbSpriests;\n\t\tthis.changeEmitter.emit(eventID);\n\t}\n\n\tcomputeStatsEP(stats?: Stats): number {\n\t\tif (stats == undefined) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn stats.computeEP(this.epWeights);\n\t}\n\n\tcomputeEnchantEP(enchant: Enchant): number {\n\t\tif (this.enchantEPCache.has(enchant.effectId)) {\n\t\t\treturn this.enchantEPCache.get(enchant.effectId)!;\n\t\t}\n\n\t\tconst ep = this.computeStatsEP(new Stats(enchant.stats));\n\t\tthis.enchantEPCache.set(enchant.effectId, ep);\n\t\treturn ep;\n\t}\n\n\tcomputeRandomSuffixEP(randomSuffix: ItemRandomSuffix): number {\n\t\tif (this.randomSuffixEPCache.has(randomSuffix.id)) {\n\t\t\treturn this.randomSuffixEPCache.get(randomSuffix.id)!;\n\t\t}\n\n\t\tconst ep = this.computeStatsEP(new Stats(randomSuffix.stats));\n\t\tthis.randomSuffixEPCache.set(randomSuffix.id, ep);\n\t\treturn ep;\n\t}\n\n\tcomputeItemEP(item: Item, slot: ItemSlot): number {\n\t\tif (item == null) return 0;\n\n\t\tconst cached = this.itemEPCache[slot].get(item.id);\n\t\tif (cached !== undefined) return cached;\n\n\t\tlet itemStats = new Stats(item.stats);\n\t\tif (item.weaponSpeed > 0) {\n\t\t\tconst weaponDps = getWeaponDPS(item);\n\t\t\tif (slot == ItemSlot.ItemSlotMainHand) {\n\t\t\t\titemStats = itemStats.withPseudoStat(PseudoStat.PseudoStatMainHandDps, weaponDps);\n\t\t\t} else if (slot == ItemSlot.ItemSlotOffHand) {\n\t\t\t\titemStats = itemStats.withPseudoStat(PseudoStat.PseudoStatOffHandDps, weaponDps);\n\t\t\t} else if (slot == ItemSlot.ItemSlotRanged) {\n\t\t\t\titemStats = itemStats.withPseudoStat(PseudoStat.PseudoStatRangedDps, weaponDps);\n\t\t\t}\n\t\t}\n\n\t\t// For random suffix items, use the suffix option with the highest EP for the purposes of ranking items in the picker.\n\t\tlet maxSuffixEP = 0;\n\n\t\tif (item.randomSuffixOptions.length > 0) {\n\t\t\tconst suffixEPs = item.randomSuffixOptions.map(id => this.computeRandomSuffixEP(this.sim.db.getRandomSuffixById(id)!));\n\t\t\tmaxSuffixEP = Math.max(...suffixEPs);\n\t\t}\n\n\t\tlet ep = itemStats.computeEP(this.epWeights) + maxSuffixEP;\n\n\t\t// unique items are slightly worse than non-unique because you can have only one.\n\t\tif (item.unique) {\n\t\t\tep -= 0.01;\n\t\t}\n\n\t\tthis.itemEPCache[slot].set(item.id, ep);\n\t\treturn ep;\n\t}\n\n\tsetWowheadData(equippedItem: EquippedItem, elem: HTMLElement) {\n\t\tconst parts = [];\n\n\t\tconst lang = getLanguageCode();\n\t\tconst langPrefix = lang ? lang + '.' : '';\n\t\tparts.push(`domain=${langPrefix}classic`);\n\n\t\tif (equippedItem.enchant != null) {\n\t\t\tparts.push('ench=' + equippedItem.enchant.effectId);\n\t\t}\n\t\tparts.push(\n\t\t\t'pcs=' +\n\t\t\t\tthis.gear\n\t\t\t\t\t.asArray()\n\t\t\t\t\t.filter(ei => ei != null)\n\t\t\t\t\t.map(ei => ei!.item.id)\n\t\t\t\t\t.join(':'),\n\t\t);\n\n\t\telem.dataset.wowhead = parts.join('&');\n\t\telem.dataset.whtticon = 'false';\n\t}\n\n\tstatic ARMOR_SLOTS: Array<ItemSlot> = [\n\t\tItemSlot.ItemSlotHead,\n\t\tItemSlot.ItemSlotShoulder,\n\t\tItemSlot.ItemSlotChest,\n\t\tItemSlot.ItemSlotWrist,\n\t\tItemSlot.ItemSlotHands,\n\t\tItemSlot.ItemSlotLegs,\n\t\tItemSlot.ItemSlotWaist,\n\t\tItemSlot.ItemSlotFeet,\n\t];\n\n\tstatic WEAPON_SLOTS: Array<ItemSlot> = [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand];\n\n\tfilterItemData<T>(itemData: Array<T>, getItemFunc: (val: T) => Item, slot: ItemSlot): Array<T> {\n\t\tconst filters = this.sim.getFilters();\n\n\t\tconst filterItems = (itemData: Array<T>, filterFunc: (item: Item) => boolean) => {\n\t\t\treturn itemData.filter(itemElem => filterFunc(getItemFunc(itemElem)));\n\t\t};\n\n\t\tif (filters.factionRestriction != UIItem_FactionRestriction.UNSPECIFIED) {\n\t\t\titemData = filterItems(\n\t\t\t\titemData,\n\t\t\t\titem => item.factionRestriction == filters.factionRestriction || item.factionRestriction == UIItem_FactionRestriction.UNSPECIFIED,\n\t\t\t);\n\t\t}\n\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceCrafting)) {\n\t\t\titemData = filterItems(itemData, item => !item.sources.some(itemSrc => itemSrc.source.oneofKind == 'crafted'));\n\t\t}\n\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceQuest)) {\n\t\t\titemData = filterItems(itemData, item => !item.sources.some(itemSrc => itemSrc.source.oneofKind == 'quest'));\n\t\t}\n\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceReputation)) {\n\t\t\titemData = filterItems(itemData, item => !item.sources.some(itemSrc => itemSrc.source.oneofKind == 'rep'));\n\t\t}\n\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceDungeon)) {\n\t\t\tfor (const zoneName in DungeonFilterOption) {\n\t\t\t\tconst zoneId = DungeonFilterOption[zoneName];\n\n\t\t\t\tif (typeof zoneId == 'number') {\n\t\t\t\t\titemData = filterItems(\n\t\t\t\t\t\titemData,\n\t\t\t\t\t\titem => !item.sources.some(itemSrc => itemSrc.source.oneofKind == 'drop' && itemSrc.source.drop.zoneId == zoneId),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceRaid)) {\n\t\t\tfor (const zoneName in RaidFilterOption) {\n\t\t\t\tconst zoneId = RaidFilterOption[zoneName];\n\n\t\t\t\tif (typeof zoneId == 'number') {\n\t\t\t\t\titemData = filterItems(\n\t\t\t\t\t\titemData,\n\t\t\t\t\t\titem => !item.sources.some(itemSrc => itemSrc.source.oneofKind == 'drop' && itemSrc.source.drop.zoneId == zoneId),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!filters.sources.includes(SourceFilterOption.SourceWorldBOE)) {\n\t\t\tfor (const zoneName in RaidFilterOption) {\n\t\t\t\tconst zoneId = RaidFilterOption[zoneName];\n\n\t\t\t\tif (typeof zoneId == 'number') {\n\t\t\t\t\titemData = filterItems(itemData, item => item.randomSuffixOptions.length == 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Player.ARMOR_SLOTS.includes(slot)) {\n\t\t\titemData = filterItems(itemData, item => {\n\t\t\t\tif (!filters.armorTypes.includes(item.armorType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t} else if (Player.WEAPON_SLOTS.includes(slot)) {\n\t\t\titemData = filterItems(itemData, item => {\n\t\t\t\tif (!filters.weaponTypes.includes(item.weaponType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!filters.oneHandedWeapons && item.handType != HandType.HandTypeTwoHand) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!filters.twoHandedWeapons && item.handType == HandType.HandTypeTwoHand) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst minSpeed = slot == ItemSlot.ItemSlotMainHand ? filters.minMhWeaponSpeed : filters.minOhWeaponSpeed;\n\t\t\t\tconst maxSpeed = slot == ItemSlot.ItemSlotMainHand ? filters.maxMhWeaponSpeed : filters.maxOhWeaponSpeed;\n\t\t\t\tif (minSpeed > 0 && item.weaponSpeed < minSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (maxSpeed > 0 && item.weaponSpeed > maxSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t} else if (slot == ItemSlot.ItemSlotRanged) {\n\t\t\titemData = filterItems(itemData, item => {\n\t\t\t\tif (!filters.rangedWeaponTypes.includes(item.rangedWeaponType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst minSpeed = filters.minRangedWeaponSpeed;\n\t\t\t\tconst maxSpeed = filters.maxRangedWeaponSpeed;\n\t\t\t\tif (minSpeed > 0 && item.weaponSpeed < minSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (maxSpeed > 0 && item.weaponSpeed > maxSpeed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t\treturn itemData;\n\t}\n\n\tfilterEnchantData<T>(enchantData: Array<T>, getEnchantFunc: (val: T) => Enchant, slot: ItemSlot, currentEquippedItem: EquippedItem | null): Array<T> {\n\t\tif (!currentEquippedItem) {\n\t\t\treturn enchantData;\n\t\t}\n\n\t\t//const filters = this.sim.getFilters();\n\n\t\treturn enchantData.filter(enchantElem => {\n\t\t\tconst enchant = getEnchantFunc(enchantElem);\n\n\t\t\tif (!enchantAppliesToItem(enchant, currentEquippedItem.item)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tmakeUnitReference(): UnitReference {\n\t\tif (this.party == null) {\n\t\t\treturn emptyUnitReference();\n\t\t} else {\n\t\t\treturn newUnitReference(this.getRaidIndex());\n\t\t}\n\t}\n\n\tprivate toDatabase(): SimDatabase {\n\t\tconst dbGear = this.getGear().toDatabase();\n\t\tconst dbItemSwapGear = this.getItemSwapGear().toDatabase();\n\t\treturn Database.mergeSimDatabases(dbGear, dbItemSwapGear);\n\t}\n\n\ttoProto(forExport?: boolean, forSimming?: boolean, exportCategories?: Array<SimSettingCategories>): PlayerProto {\n\t\tconst exportCategory = (cat: SimSettingCategories) => !exportCategories || exportCategories.length == 0 || exportCategories.includes(cat);\n\n\t\tconst gear = this.getGear();\n\t\tconst aplRotation = forSimming ? this.getResolvedAplRotation() : this.aplRotation;\n\n\t\tlet player = PlayerProto.create({\n\t\t\tclass: this.getClass(),\n\t\t\tdatabase: forExport ? undefined : this.toDatabase(),\n\t\t});\n\t\tif (exportCategory(SimSettingCategories.Gear)) {\n\t\t\tPlayerProto.mergePartial(player, {\n\t\t\t\tequipment: gear.asSpec(),\n\t\t\t\tbonusStats: this.getBonusStats().toProto(),\n\t\t\t\tenableItemSwap: this.getEnableItemSwap(),\n\t\t\t\titemSwap: this.getItemSwapGear().toProto(),\n\t\t\t});\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.Talents)) {\n\t\t\tPlayerProto.mergePartial(player, {\n\t\t\t\ttalentsString: this.getTalentsString(),\n\t\t\t});\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.Rotation)) {\n\t\t\tPlayerProto.mergePartial(player, {\n\t\t\t\tcooldowns: Cooldowns.create({ hpPercentForDefensives: this.getSimpleCooldowns().hpPercentForDefensives }),\n\t\t\t\trotation: aplRotation,\n\t\t\t});\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.Consumes)) {\n\t\t\tPlayerProto.mergePartial(player, {\n\t\t\t\tconsumes: this.getConsumes(),\n\t\t\t});\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.Miscellaneous)) {\n\t\t\tPlayerProto.mergePartial(player, {\n\t\t\t\tname: this.getName(),\n\t\t\t\trace: this.getRace(),\n\t\t\t\tlevel: this.getLevel(),\n\t\t\t\tprofession1: this.getProfession1(),\n\t\t\t\tprofession2: this.getProfession2(),\n\t\t\t\treactionTimeMs: this.getReactionTime(),\n\t\t\t\tchannelClipDelayMs: this.getChannelClipDelay(),\n\t\t\t\tinFrontOfTarget: this.getInFrontOfTarget(),\n\t\t\t\tdistanceFromTarget: this.getDistanceFromTarget(),\n\t\t\t\thealingModel: this.getHealingModel(),\n\t\t\t\tisbSbFrequency: this.getIsbSbFrequency(),\n\t\t\t\tisbCrit: this.getIsbCrit(),\n\t\t\t\tisbWarlocks: this.getIsbWarlocks(),\n\t\t\t\tisbSpriests: this.getIsbSpriests(),\n\t\t\t});\n\t\t\tplayer = withSpecProto(this.spec, player, this.getSpecOptions());\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.External)) {\n\t\t\tPlayerProto.mergePartial(player, {\n\t\t\t\tbuffs: this.getBuffs(),\n\t\t\t});\n\t\t}\n\t\treturn player;\n\t}\n\n\tfromProto(eventID: EventID, proto: PlayerProto, includeCategories?: Array<SimSettingCategories>) {\n\t\tconst loadCategory = (cat: SimSettingCategories) => !includeCategories || includeCategories.length == 0 || includeCategories.includes(cat);\n\n\t\t// For backwards compatibility with legacy rotations (removed on 2024/01/15).\n\t\tif (proto.rotation?.type == APLRotationType.TypeLegacy) {\n\t\t\tproto.rotation.type = APLRotationType.TypeAuto;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (loadCategory(SimSettingCategories.Gear)) {\n\t\t\t\tthis.setGear(eventID, proto.equipment ? this.sim.db.lookupEquipmentSpec(proto.equipment) : new Gear({}));\n\t\t\t\tthis.setEnableItemSwap(eventID, proto.enableItemSwap);\n\t\t\t\tthis.setItemSwapGear(eventID, proto.itemSwap ? this.sim.db.lookupItemSwap(proto.itemSwap) : new ItemSwapGear({}));\n\t\t\t\tthis.setBonusStats(eventID, Stats.fromProto(proto.bonusStats || UnitStats.create()));\n\t\t\t\t//this.setBulkEquipmentSpec(eventID, BulkEquipmentSpec.create()); // Do not persist the bulk equipment settings.\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.Talents)) {\n\t\t\t\tthis.setTalentsString(eventID, proto.talentsString);\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.Rotation)) {\n\t\t\t\tif (proto.rotation?.type == APLRotationType.TypeUnknown || proto.rotation?.type == APLRotationType.TypeLegacy) {\n\t\t\t\t\tif (!proto.rotation) {\n\t\t\t\t\t\tproto.rotation = APLRotation.create();\n\t\t\t\t\t}\n\t\t\t\t\tproto.rotation.type = APLRotationType.TypeAuto;\n\t\t\t\t}\n\t\t\t\tthis.setAplRotation(eventID, proto.rotation || APLRotation.create());\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.Consumes)) {\n\t\t\t\tthis.setConsumes(eventID, proto.consumes || Consumes.create());\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.Miscellaneous)) {\n\t\t\t\tthis.setSpecOptions(eventID, this.specTypeFunctions.optionsFromPlayer(proto));\n\t\t\t\tthis.setName(eventID, proto.name);\n\t\t\t\tthis.setLevel(eventID, proto.level);\n\t\t\t\tthis.setRace(eventID, proto.race);\n\t\t\t\tthis.setProfession1(eventID, proto.profession1);\n\t\t\t\tthis.setProfession2(eventID, proto.profession2);\n\t\t\t\tthis.setReactionTime(eventID, proto.reactionTimeMs);\n\t\t\t\tthis.setChannelClipDelay(eventID, proto.channelClipDelayMs);\n\t\t\t\tthis.setInFrontOfTarget(eventID, proto.inFrontOfTarget);\n\t\t\t\tthis.setDistanceFromTarget(eventID, proto.distanceFromTarget);\n\t\t\t\tthis.setHealingModel(eventID, proto.healingModel || HealingModel.create());\n\t\t\t\tthis.setIsbSbFrequency(eventID, proto.isbSbFrequency);\n\t\t\t\tthis.setIsbCrit(eventID, proto.isbCrit);\n\t\t\t\tthis.setIsbWarlocks(eventID, proto.isbWarlocks);\n\t\t\t\tthis.setIsbSpriests(eventID, proto.isbSpriests);\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.External)) {\n\t\t\t\tthis.setBuffs(eventID, proto.buffs || IndividualBuffs.create());\n\t\t\t}\n\t\t});\n\t}\n\n\tclone(eventID: EventID): Player<SpecType> {\n\t\tconst newPlayer = new Player<SpecType>(this.spec, this.sim);\n\t\tnewPlayer.fromProto(eventID, this.toProto());\n\t\treturn newPlayer;\n\t}\n\n\tapplySharedDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setEnableItemSwap(eventID, false);\n\t\t\tthis.setItemSwapGear(eventID, new ItemSwapGear({}));\n\t\t\tthis.setReactionTime(eventID, 200);\n\t\t\tthis.setInFrontOfTarget(eventID, isTankSpec(this.spec));\n\t\t\tthis.setHealingModel(\n\t\t\t\teventID,\n\t\t\t\tHealingModel.create({\n\t\t\t\t\tburstWindow: isTankSpec(this.spec) ? 6 : 0,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.setSimpleCooldowns(\n\t\t\t\teventID,\n\t\t\t\tCooldowns.create({\n\t\t\t\t\thpPercentForDefensives: isTankSpec(this.spec) ? 0.35 : 0,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.setBonusStats(eventID, new Stats());\n\t\t\tthis.setAplRotation(\n\t\t\t\teventID,\n\t\t\t\tAPLRotation.create({\n\t\t\t\t\ttype: APLRotationType.TypeAuto,\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}\n\n\t// Filter a matrix of spell IDs, min and max levels for a matching spell ID\n\tgetMatchingSpellActionId(src: ActionIdConfig[]): ActionId | null {\n\t\tconst match = src.find(config => (!config.minLevel || config.minLevel <= this.getLevel()) && (!config.maxLevel || config.maxLevel >= this.getLevel()));\n\n\t\tif (match) return ActionId.fromSpellId(match.id);\n\t\treturn null;\n\t}\n\n\t// Filter a matrix of item IDs, min and max levels for a matching item ID\n\tgetMatchingItemActionId(src: ActionIdConfig[]): ActionId | null {\n\t\tconst match = src.find(config => (!config.minLevel || config.minLevel <= this.getLevel()) && (!config.maxLevel || config.maxLevel >= this.getLevel()));\n\n\t\tif (match) return ActionId.fromItemId(match.id);\n\t\treturn null;\n\t}\n}\n","import { UnitMetadataList } from './player.js';\nimport {\n\tEncounter as EncounterProto,\n\tTarget as TargetProto,\n\tPresetEncounter,\n\tPresetTarget,\n} from './proto/common.js';\nimport { Sim } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\nimport * as Mechanics from './constants/mechanics.js';\n\n// Manages all the settings for an Encounter.\nexport class Encounter {\n\treadonly sim: Sim;\n\n\tprivate duration: number = 60;\n\tprivate durationVariation: number = 5;\n\tprivate executeProportion20: number = 0.2;\n\tprivate executeProportion25: number = 0.25;\n\tprivate executeProportion35: number = 0.35;\n\tprivate useHealth: boolean = false;\n\n\ttargets!: Array<TargetProto>;\n\ttargetsMetadata: UnitMetadataList;\n\tpresetTargets!: Array<PresetTarget>;\n\n\treadonly targetsChangeEmitter = new TypedEvent<void>();\n\treadonly durationChangeEmitter = new TypedEvent<void>();\n\treadonly executeProportionChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter = new TypedEvent<void>();\n\n\tconstructor(sim: Sim) {\n\t\tthis.sim = sim;\n\t\tthis.targetsMetadata = new UnitMetadataList();\n\n\t\tsim.waitForInit().then(() => {\n\t\t\tconst level = sim.raid.getPlayer(0)?.getLevel() ?? Mechanics.CURRENT_LEVEL_CAP;\n\t\t\tconst presetTarget = Encounter.getPresetTargetForLevel(level, sim)\n\n\t\t\tthis.targets = [presetTarget.target!];\n\n\t\t\t[\n\t\t\t\tthis.targetsChangeEmitter,\n\t\t\t\tthis.durationChangeEmitter,\n\t\t\t\tthis.executeProportionChangeEmitter,\n\t\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\n\t\t})\n\t}\n\n\tget primaryTarget(): TargetProto {\n\t\treturn TargetProto.clone(this.targets[0]);\n\t}\n\n\tgetDurationVariation(): number {\n\t\treturn this.durationVariation;\n\t}\n\tsetDurationVariation(eventID: EventID, newDuration: number) {\n\t\tif (newDuration == this.durationVariation)\n\t\t\treturn;\n\n\t\tthis.durationVariation = newDuration;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t}\n\n\tgetDuration(): number {\n\t\treturn this.duration;\n\t}\n\tsetDuration(eventID: EventID, newDuration: number) {\n\t\tif (newDuration == this.duration)\n\t\t\treturn;\n\n\t\tthis.duration = newDuration;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t}\n\n\tgetExecuteProportion20(): number {\n\t\treturn this.executeProportion20;\n\t}\n\tsetExecuteProportion20(eventID: EventID, newExecuteProportion20: number) {\n\t\tif (newExecuteProportion20 == this.executeProportion20)\n\t\t\treturn;\n\n\t\tthis.executeProportion20 = newExecuteProportion20;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion25(): number {\n\t\treturn this.executeProportion25;\n\t}\n\tsetExecuteProportion25(eventID: EventID, newExecuteProportion25: number) {\n\t\tif (newExecuteProportion25 == this.executeProportion25)\n\t\t\treturn;\n\n\t\tthis.executeProportion25 = newExecuteProportion25;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\tgetExecuteProportion35(): number {\n\t\treturn this.executeProportion35;\n\t}\n\tsetExecuteProportion35(eventID: EventID, newExecuteProportion35: number) {\n\t\tif (newExecuteProportion35 == this.executeProportion35)\n\t\t\treturn;\n\n\t\tthis.executeProportion35 = newExecuteProportion35;\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\n\tgetUseHealth(): boolean {\n\t\treturn this.useHealth;\n\t}\n\tsetUseHealth(eventID: EventID, newUseHealth: boolean) {\n\t\tif (newUseHealth == this.useHealth)\n\t\t\treturn;\n\n\t\tthis.useHealth = newUseHealth;\n\t\tthis.durationChangeEmitter.emit(eventID);\n\t\tthis.executeProportionChangeEmitter.emit(eventID);\n\t}\n\n\tmatchesPreset(preset: PresetEncounter): boolean {\n\t\treturn preset.targets.length == this.targets.length && this.targets.every((t, i) => TargetProto.equals(t, preset.targets[i].target));\n\t}\n\n\tapplyPreset(eventID: EventID, preset: PresetEncounter) {\n\t\tthis.targets = preset.targets.map(presetTarget => presetTarget.target || TargetProto.create());\n\t\tthis.targetsChangeEmitter.emit(eventID);\n\t}\n\n\tapplyPresetTarget(eventID: EventID, preset: PresetTarget, index: number) {\n\t\tthis.targets[index] = preset.target || TargetProto.create();\n\t\tthis.targetsChangeEmitter.emit(eventID);\n\t}\n\n\ttoProto(): EncounterProto {\n\t\treturn EncounterProto.create({\n\t\t\tduration: this.duration,\n\t\t\tdurationVariation: this.durationVariation,\n\t\t\texecuteProportion20: this.executeProportion20,\n\t\t\texecuteProportion25: this.executeProportion25,\n\t\t\texecuteProportion35: this.executeProportion35,\n\t\t\tuseHealth: this.useHealth,\n\t\t\ttargets: this.targets,\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: EncounterProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setDuration(eventID, proto.duration);\n\t\t\tthis.setDurationVariation(eventID, proto.durationVariation);\n\t\t\tthis.setExecuteProportion20(eventID, proto.executeProportion20);\n\t\t\tthis.setExecuteProportion25(eventID, proto.executeProportion25);\n\t\t\tthis.setExecuteProportion35(eventID, proto.executeProportion35);\n\t\t\tthis.setUseHealth(eventID, proto.useHealth);\n\t\t\tthis.targets = proto.targets;\n\t\t\tthis.targetsChangeEmitter.emit(eventID);\n\t\t});\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tconst level = this.sim.raid.getPlayer(0)?.getLevel() ?? Mechanics.CURRENT_LEVEL_CAP;\n\t\tconst presetTarget = Encounter.getPresetTargetForLevel(level, this.sim)\n\t\tthis.fromProto(eventID, EncounterProto.create({\n\t\t\tduration: 60,\n\t\t\tdurationVariation: 5,\n\t\t\texecuteProportion20: 0.2,\n\t\t\texecuteProportion25: 0.25,\n\t\t\texecuteProportion35: 0.35,\n\t\t\ttargets: [presetTarget.target!],\n\t\t}));\n\t}\n\n\tstatic getPresetTargetForLevel(playerLevel: number, sim: Sim): PresetTarget {\n\t\tconst presetTargets = sim.db.getAllPresetTargets();\n\t\tconst target = presetTargets.find(target => target?.target?.level && target?.target?.level > playerLevel);\n\t\treturn target ?? presetTargets[0];\n\t}\n}\n","import { MAX_PARTY_SIZE,Party } from './party.js';\nimport { Player } from './player.js';\nimport { Raid as RaidProto } from './proto/api.js';\nimport {\n\tClass,\n\tDebuffs,\n\tRaidBuffs,\n\tTristateEffect,\n\tUnitReference,\n\tUnitReference_Type as UnitType,\n} from './proto/common.js';\nimport { Sim } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { sum } from './utils.js';\n\nexport const MAX_NUM_PARTIES = 8;\n\n// Manages all the settings for a single Raid.\nexport class Raid {\n\tprivate buffs: RaidBuffs = RaidBuffs.create();\n\tprivate debuffs: Debuffs = Debuffs.create();\n\tprivate tanks: Array<UnitReference> = [];\n\tprivate targetDummies = 0;\n\tprivate numActiveParties = 5;\n\n\t// Emits when a raid member is added/removed/moved.\n\treadonly compChangeEmitter = new TypedEvent<void>();\n\n\treadonly buffsChangeEmitter = new TypedEvent<void>();\n\treadonly debuffsChangeEmitter = new TypedEvent<void>();\n\treadonly tanksChangeEmitter = new TypedEvent<void>();\n\treadonly targetDummiesChangeEmitter = new TypedEvent<void>();\n\treadonly numActivePartiesChangeEmitter = new TypedEvent<void>();\n\n\t// Emits when anything in the raid changes.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Should always hold exactly MAX_NUM_PARTIES elements.\n\tprivate parties: Array<Party>;\n\n\t// Cached return value for getActivePlayers().\n\tprivate activePlayers: Array<Player<any>>;\n\n\treadonly sim: Sim;\n\n\tconstructor(sim: Sim) {\n\t\tthis.sim = sim;\n\n\t\tthis.parties = [...Array(MAX_NUM_PARTIES).keys()].map(_ => {\n\t\t\tconst newParty = new Party(this, sim);\n\t\t\tnewParty.compChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n\t\t\tnewParty.changeEmitter.on(eventID => this.changeEmitter.emit(eventID));\n\t\t\treturn newParty;\n\t\t});\n\t\tthis.activePlayers = [];\n\n\t\tthis.numActivePartiesChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\n\n\t\tthis.changeEmitter = TypedEvent.onAny([\n\t\t\tthis.compChangeEmitter,\n\t\t\tthis.buffsChangeEmitter,\n\t\t\tthis.debuffsChangeEmitter,\n\t\t\tthis.tanksChangeEmitter,\n\t\t\tthis.targetDummiesChangeEmitter,\n\t\t], 'RaidChange');\n\n\t\tthis.changeEmitter.on(() => {\n\t\t\tthis.activePlayers = [];\n\t\t});\n\t}\n\n\tsize(): number {\n\t\treturn sum(this.parties.map(party => party.size()));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.size() == 0;\n\t}\n\n\tgetParties(): Array<Party> {\n\t\t// Make defensive copy.\n\t\treturn this.parties.slice();\n\t}\n\n\tgetParty(index: number): Party {\n\t\treturn this.parties[index];\n\t}\n\n\tgetPlayers(): Array<Player<any> | null> {\n\t\treturn this.parties.map(party => party.getPlayers()).flat();\n\t}\n\n\tgetPlayer(index: number): Player<any> | null {\n\t\tif (index === -1) return null;\n\n\t\tconst party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n\t\treturn party.getPlayer(index % MAX_PARTY_SIZE);\n\t}\n\n\tgetPlayerFromUnitReference(raidTarget: UnitReference|undefined, contextPlayer?: Player<any>|null): Player<any> | null {\n\t\tif (!raidTarget || raidTarget.type == UnitType.Unknown) {\n\t\t\treturn null;\n\t\t} else if (raidTarget.type == UnitType.Player) {\n\t\t\treturn this.getPlayer(raidTarget.index);\n\t\t} else if (raidTarget.type == UnitType.Self) {\n\t\t\treturn contextPlayer || null;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetPlayer(eventID: EventID, index: number, newPlayer: Player<any> | null) {\n\t\tconst party = this.parties[Math.floor(index / MAX_PARTY_SIZE)];\n\t\tparty.setPlayer(eventID, index % MAX_PARTY_SIZE, newPlayer);\n\t}\n\n\tgetClassCount(playerClass: Class) {\n\t\treturn this.getPlayers().filter(player => player != null && player.getClass() == playerClass).length;\n\t}\n\n\tgetBuffs(): RaidBuffs {\n\t\t// Make a defensive copy\n\t\treturn RaidBuffs.clone(this.buffs);\n\t}\n\n\tsetBuffs(eventID: EventID, newBuffs: RaidBuffs) {\n\t\tif (RaidBuffs.equals(this.buffs, newBuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.buffs = RaidBuffs.clone(newBuffs);\n\n\t\tthis.buffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetDebuffs(): Debuffs {\n\t\t// Make a defensive copy\n\t\treturn Debuffs.clone(this.debuffs);\n\t}\n\n\tsetDebuffs(eventID: EventID, newDebuffs: Debuffs) {\n\t\tif (Debuffs.equals(this.debuffs, newDebuffs))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.debuffs = Debuffs.clone(newDebuffs);\n\t\tthis.debuffsChangeEmitter.emit(eventID);\n\t}\n\n\tgetTanks(): Array<UnitReference> {\n\t\t// Make a defensive copy\n\t\treturn this.tanks.map(tank => UnitReference.clone(tank));\n\t}\n\n\tsetTanks(eventID: EventID, newTanks: Array<UnitReference>) {\n\t\tif (this.tanks.length == newTanks.length && this.tanks.every((tank, i) => UnitReference.equals(tank, newTanks[i])))\n\t\t\treturn;\n\n\t\t// Make a defensive copy\n\t\tthis.tanks = newTanks.map(tank => UnitReference.clone(tank));\n\t\tthis.tanksChangeEmitter.emit(eventID);\n\t}\n\n\tgetTargetDummies(): number {\n\t\treturn this.targetDummies;\n\t}\n\n\tsetTargetDummies(eventID: EventID, newTargetDummies: number) {\n\t\tif (this.targetDummies == newTargetDummies)\n\t\t\treturn;\n\n\t\tthis.targetDummies = newTargetDummies;\n\t\tthis.targetDummiesChangeEmitter.emit(eventID);\n\t}\n\n\tgetNumActiveParties(): number {\n\t\treturn this.numActiveParties;\n\t}\n\tsetNumActiveParties(eventID: EventID, newNumActiveParties: number) {\n\t\tif (newNumActiveParties != this.numActiveParties && newNumActiveParties > 0) {\n\t\t\tthis.numActiveParties = newNumActiveParties;\n\t\t\tthis.numActivePartiesChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\tgetActivePlayers(): Array<Player<any>> {\n\t\tif (this.activePlayers.length == 0) {\n\t\t\tconst activeParties = this.getParties().filter((party, i) => i < this.numActiveParties);\n\t\t\tthis.activePlayers = activeParties\n\t\t\t\t.map(party => party.getPlayers())\n\t\t\t\t.flat()\n\t\t\t\t.filter(player => player != null) as Array<Player<any>>;\n\t\t}\n\t\treturn this.activePlayers;\n\t}\n\n\ttoProto(forExport?: boolean, forSimming?: boolean): RaidProto {\n\t\treturn RaidProto.create({\n\t\t\tparties: this.parties.map(party => party.toProto(forExport, forSimming)),\n\t\t\tbuffs: this.getBuffs(),\n\t\t\tdebuffs: this.getDebuffs(),\n\t\t\ttanks: this.getTanks(),\n\t\t\ttargetDummies: this.getTargetDummies(),\n\t\t\tnumActiveParties: this.getNumActiveParties(),\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: RaidProto) {\n\t\t// Backwards compatbility with old curses inputs\n\t\tif (proto.debuffs?.curseOfElements && proto.debuffs.curseOfElementsNew == TristateEffect.TristateEffectMissing) {\n\t\t\tproto.debuffs.curseOfElementsNew = TristateEffect.TristateEffectRegular;\n\t\t\tproto.debuffs.curseOfElements = false;\n\t\t}\n\t\tif (proto.debuffs?.curseOfShadow && proto.debuffs.curseOfShadowNew == TristateEffect.TristateEffectMissing) {\n\t\t\tproto.debuffs.curseOfShadowNew = TristateEffect.TristateEffectRegular;\n\t\t\tproto.debuffs.curseOfShadow = false;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setBuffs(eventID, proto.buffs || RaidBuffs.create());\n\t\t\tthis.setDebuffs(eventID, proto.debuffs || Debuffs.create());\n\t\t\tthis.setTanks(eventID, proto.tanks);\n\t\t\tthis.setTargetDummies(eventID, proto.targetDummies);\n\t\t\tthis.setNumActiveParties(eventID, proto.numActiveParties || 5);\n\n\t\t\tfor (let i = 0; i < MAX_NUM_PARTIES; i++) {\n\t\t\t\tif (proto.parties[i]) {\n\t\t\t\t\tthis.parties[i].fromProto(eventID, proto.parties[i]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.parties[i].clear(eventID);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tclear(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tfor (let i = 0; i < MAX_NUM_PARTIES; i++) {\n\t\t\t\tthis.parties[i].clear(eventID);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { REPO_NAME } from './constants/other.js';\n\nimport { BulkSimRequest, BulkSimResult, ComputeStatsRequest, ComputeStatsResult, ProgressMetrics, RaidSimRequest, RaidSimResult, StatWeightsRequest, StatWeightsResult } from './proto/api.js';\n\n\nconst SIM_WORKER_URL = `/${REPO_NAME}/sim_worker.js`;\n\nexport class WorkerPool {\n\tprivate workers: Array<SimWorker>;\n\n\tconstructor(numWorkers: number) {\n\t\tthis.workers = [];\n\t\tfor (let i = 0; i < numWorkers; i++) {\n\t\t\tthis.workers.push(new SimWorker());\n\t\t}\n\t}\n\n\tprivate getLeastBusyWorker(): SimWorker {\n\t\treturn this.workers.reduce(\n\t\t\t(curMinWorker, nextWorker) => curMinWorker.numTasksRunning < nextWorker.numTasksRunning ?\n\t\t\t\tcurMinWorker : nextWorker);\n\t}\n\n\tasync makeApiCall(requestName: string, request: Uint8Array): Promise<Uint8Array> {\n\t\treturn await this.getLeastBusyWorker().doApiCall(requestName, request, \"\");\n\t}\n\n\tasync computeStats(request: ComputeStatsRequest): Promise<ComputeStatsResult> {\n\t\tconst result = await this.makeApiCall('computeStats', ComputeStatsRequest.toBinary(request));\n\t\treturn ComputeStatsResult.fromBinary(result);\n\t}\n\n\tasync statWeightsAsync(request: StatWeightsRequest, onProgress: Function): Promise<StatWeightsResult> {\n\t\tconsole.log('Stat weights request: ' + StatWeightsRequest.toJsonString(request));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (_err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('statWeightsAsync', StatWeightsRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\t\tconsole.log('Stat weights result: ' + StatWeightsResult.toJsonString(result.finalWeightResult!));\n\t\treturn result.finalWeightResult!;\n\t}\n\n\tasync bulkSimAsync(request: BulkSimRequest, onProgress: Function): Promise<BulkSimResult> {\n\t\tconsole.log('bulk sim request: ' + BulkSimRequest.toJsonString(request, { enumAsInteger: true }));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (_err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('bulkSimAsync', BulkSimRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\t\tconst resultJson = BulkSimResult.toJson(result.finalBulkResult!) as any;\n\t\tconsole.log('bulk sim result: ' + JSON.stringify(resultJson));\n\t\treturn result.finalBulkResult!;\n\t}\n\n\tasync raidSimAsync(request: RaidSimRequest, onProgress: Function): Promise<RaidSimResult> {\n\t\tconsole.log('Raid sim request: ' + RaidSimRequest.toJsonString(request));\n\t\tconst worker = this.getLeastBusyWorker();\n\t\tconst id = worker.makeTaskId();\n\t\t// Add handler for the progress events\n\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (_err) => { })\n\n\t\t// Now start the async sim\n\t\tconst resultData = await worker.doApiCall('raidSimAsync', RaidSimRequest.toBinary(request), id);\n\t\tconst result = ProgressMetrics.fromBinary(resultData)\n\n\t\t// Don't print the logs because it just clogs the console.\n\t\tconst resultJson = RaidSimResult.toJson(result.finalRaidResult!) as any;\n\t\tdelete resultJson!['logs'];\n\t\tconsole.log('Raid sim result: ' + JSON.stringify(resultJson));\n\t\treturn result.finalRaidResult!;\n\t}\n\n\tnewProgressHandler(id: string, worker: SimWorker, onProgress: Function): (progressData: any) => void {\n\t\treturn (progressData: any) => {\n\t\t\tvar progress = ProgressMetrics.fromBinary(progressData);\n\t\t\tonProgress(progress);\n\t\t\t// If we are done, stop adding the handler.\n\t\t\tif (progress.finalRaidResult != null || progress.finalWeightResult != null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tworker.addPromiseFunc(id + \"progress\", this.newProgressHandler(id, worker, onProgress), (_err) => { });\n\t\t};\n\t}\n}\n\nclass SimWorker {\n\tnumTasksRunning: number;\n\tprivate taskIdsToPromiseFuncs: Record<string, [(result: any) => void, (error: any) => void]>;\n\tprivate worker: Worker;\n\tprivate onReady: Promise<void>;\n\n\tconstructor() {\n\t\tthis.numTasksRunning = 0;\n\t\tthis.taskIdsToPromiseFuncs = {};\n\t\tthis.worker = new window.Worker(SIM_WORKER_URL);\n\n\t\tlet resolveReady: (() => void) | null = null;\n\t\tthis.onReady = new Promise((_resolve, _reject) => {\n\t\t\tresolveReady = _resolve;\n\t\t});\n\n\t\tthis.worker.onmessage = event => {\n\t\t\tif (event.data.msg == 'ready') {\n\t\t\t\tthis.worker.postMessage({ msg: 'setID', id: '1' });\n\t\t\t\tresolveReady!();\n\t\t\t} else if (event.data.msg == 'idconfirm') {\n\t\t\t\t// Do nothing\n\t\t\t} else {\n\t\t\t\tconst id = event.data.id;\n\t\t\t\tif (!this.taskIdsToPromiseFuncs[id]) {\n\t\t\t\t\tconsole.warn('Unrecognized result id: ' + id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst promiseFuncs = this.taskIdsToPromiseFuncs[id];\n\t\t\t\tdelete this.taskIdsToPromiseFuncs[id];\n\t\t\t\tthis.numTasksRunning--;\n\n\t\t\t\tpromiseFuncs[0](event.data.outputData);\n\t\t\t}\n\t\t};\n\t}\n\n\taddPromiseFunc(id: string, callback: (result: any) => void, onError: (error: any) => void) {\n\t\tthis.taskIdsToPromiseFuncs[id] = [callback, onError];\n\t}\n\n\tmakeTaskId(): string {\n\t\tlet id = '';\n\t\tconst characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tid += characters.charAt(Math.floor(Math.random() * characters.length));\n\t\t}\n\t\treturn id;\n\t}\n\n\tasync doApiCall(requestName: string, request: Uint8Array, id: string): Promise<Uint8Array> {\n\t\tthis.numTasksRunning++;\n\t\tawait this.onReady;\n\n\t\tconst taskPromise = new Promise<Uint8Array>((resolve, reject) => {\n\t\t\tif (!id) {\n\t\t\t\tid = this.makeTaskId();\n\t\t\t}\n\t\t\tthis.taskIdsToPromiseFuncs[id] = [resolve, reject];\n\n\t\t\tthis.worker.postMessage({\n\t\t\t\tmsg: requestName,\n\t\t\t\tid: id,\n\t\t\t\tinputData: request,\n\t\t\t});\n\t\t});\n\t\treturn await taskPromise;\n\t}\n}\n","import { getBrowserLanguageCode, setLanguageCode } from './constants/lang.js';\nimport * as OtherConstants from './constants/other.js';\nimport { Encounter } from './encounter.js';\nimport { Player, UnitMetadata } from './player.js';\nimport {\n\tBulkSettings,\n\tBulkSimRequest,\n\tBulkSimResult,\n\tComputeStatsRequest,\n\tRaid as RaidProto,\n\tRaidSimRequest,\n\tRaidSimResult,\n\tSimOptions,\n\tStatWeightsRequest,\n\tStatWeightsResult,\n} from './proto/api.js';\nimport {\n\tArmorType,\n\tFaction,\n\tPseudoStat,\n\tRangedWeaponType,\n\tSimDatabase,\n\tStat,\n\tUnitReference,\n\tUnitReference_Type as UnitType,\n\tWeaponType,\n} from './proto/common.js';\nimport { DatabaseFilters, RaidFilterOption, SimSettings as SimSettingsProto, SourceFilterOption } from './proto/ui.js';\nimport { Database } from './proto_utils/database.js';\nimport { SimResult } from './proto_utils/sim_result.js';\nimport { Raid } from './raid.js';\nimport { EventID, TypedEvent } from './typed_event.js';\nimport { getEnumValues } from './utils.js';\nimport { WorkerPool } from './worker_pool.js';\n\nexport type RaidSimData = {\n\trequest: RaidSimRequest;\n\tresult: RaidSimResult;\n};\n\nexport type StatWeightsData = {\n\trequest: StatWeightsRequest;\n\tresult: StatWeightsResult;\n};\n\nexport enum SimSettingCategories {\n\tGear = 0,\n\tTalents,\n\tRotation,\n\tConsumes,\n\tMiscellaneous, // Spec-specific settings, Distance from target, tank status, etc\n\tExternal, // Buffs and debuffs\n\tEncounter,\n\tUISettings, // # iterations, EP weights, filters, etc\n}\n\n// Core Sim module which deals only with api types, no UI-related stuff.\nexport class Sim {\n\tprivate readonly workerPool: WorkerPool;\n\n\tprivate iterations = 3000;\n\tprivate phase: number = OtherConstants.CURRENT_PHASE;\n\tprivate faction: Faction = Faction.Alliance;\n\tprivate fixedRngSeed = 0;\n\tprivate filters: DatabaseFilters = Sim.defaultFilters();\n\tprivate showDamageMetrics = true;\n\tprivate showThreatMetrics = false;\n\tprivate showHealingMetrics = false;\n\tprivate showExperimental = false;\n\tprivate showEPValues = false;\n\tprivate language = '';\n\n\treadonly raid: Raid;\n\treadonly encounter: Encounter;\n\n\tprivate db_: Database | null = null;\n\n\treadonly iterationsChangeEmitter = new TypedEvent<void>();\n\treadonly phaseChangeEmitter = new TypedEvent<void>();\n\treadonly factionChangeEmitter = new TypedEvent<void>();\n\treadonly fixedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly lastUsedRngSeedChangeEmitter = new TypedEvent<void>();\n\treadonly filtersChangeEmitter = new TypedEvent<void>();\n\treadonly showDamageMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showThreatMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showHealingMetricsChangeEmitter = new TypedEvent<void>();\n\treadonly showExperimentalChangeEmitter = new TypedEvent<void>();\n\treadonly showEPValuesChangeEmitter = new TypedEvent<void>();\n\treadonly languageChangeEmitter = new TypedEvent<void>();\n\treadonly crashEmitter = new TypedEvent<SimError>();\n\n\t// Emits when any of the settings change (but not the raid / encounter).\n\treadonly settingsChangeEmitter: TypedEvent<void>;\n\n\t// Emits when any player, target, or pet has metadata changes (spells or auras).\n\treadonly unitMetadataEmitter = new TypedEvent<void>('UnitMetadata');\n\n\t// Emits when any of the above emitters emit.\n\treadonly changeEmitter: TypedEvent<void>;\n\n\t// Fires when a raid sim API call completes.\n\treadonly simResultEmitter = new TypedEvent<SimResult>();\n\n\t// Fires when a bulk sim API call starts.\n\treadonly bulkSimStartEmitter = new TypedEvent<BulkSimRequest>();\n\t// Fires when a bulk sim API call completes..\n\treadonly bulkSimResultEmitter = new TypedEvent<BulkSimResult>();\n\n\tprivate readonly _initPromise: Promise<any>;\n\tprivate lastUsedRngSeed = 0;\n\n\t// These callbacks are needed so we can apply BuffBot modifications automatically before sending requests.\n\tprivate modifyRaidProto: (raidProto: RaidProto) => void = () => {\n\t\treturn;\n\t};\n\n\tconstructor() {\n\t\tthis.workerPool = new WorkerPool(1);\n\t\tthis._initPromise = Database.get().then(db => {\n\t\t\tthis.db_ = db;\n\t\t});\n\n\t\tthis.raid = new Raid(this);\n\t\tthis.encounter = new Encounter(this);\n\n\t\tthis.settingsChangeEmitter = TypedEvent.onAny([\n\t\t\tthis.iterationsChangeEmitter,\n\t\t\tthis.phaseChangeEmitter,\n\t\t\tthis.fixedRngSeedChangeEmitter,\n\t\t\tthis.filtersChangeEmitter,\n\t\t\tthis.showDamageMetricsChangeEmitter,\n\t\t\tthis.showThreatMetricsChangeEmitter,\n\t\t\tthis.showHealingMetricsChangeEmitter,\n\t\t\tthis.showExperimentalChangeEmitter,\n\t\t\tthis.showEPValuesChangeEmitter,\n\t\t\tthis.languageChangeEmitter,\n\t\t]);\n\n\t\tthis.changeEmitter = TypedEvent.onAny([this.settingsChangeEmitter, this.raid.changeEmitter, this.encounter.changeEmitter]);\n\n\t\tTypedEvent.onAny([this.raid.changeEmitter, this.encounter.changeEmitter]).on(eventID => this.updateCharacterStats(eventID));\n\t}\n\n\twaitForInit(): Promise<void> {\n\t\treturn this._initPromise;\n\t}\n\n\tget db(): Database {\n\t\treturn this.db_!;\n\t}\n\n\tsetModifyRaidProto(newModFn: (raidProto: RaidProto) => void) {\n\t\tthis.modifyRaidProto = newModFn;\n\t}\n\tgetModifiedRaidProto(): RaidProto {\n\t\tconst raidProto = this.raid.toProto(false, true);\n\t\tthis.modifyRaidProto(raidProto);\n\n\t\traidProto.parties.forEach(party => {\n\t\t\tparty.players.forEach(player => {\n\t\t\t\tif (!player.equipment) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst gear = this.db.lookupEquipmentSpec(player.equipment);\n\t\t\t\tconst gearChanged = false;\n\n\t\t\t\tif (gearChanged) {\n\t\t\t\t\tplayer.equipment = gear.asSpec();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn raidProto;\n\t}\n\n\tmakeRaidSimRequest(debug: boolean): RaidSimRequest {\n\t\tconst raid = this.getModifiedRaidProto();\n\t\tconst encounter = this.encounter.toProto();\n\n\t\t// TODO: remove any replenishment from sim request here? probably makes more sense to do it inside the sim to protect against accidents\n\n\t\treturn RaidSimRequest.create({\n\t\t\traid: raid,\n\t\t\tencounter: encounter,\n\t\t\tsimOptions: SimOptions.create({\n\t\t\t\titerations: debug ? 1 : this.getIterations(),\n\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\tdebugFirstIteration: true,\n\t\t\t}),\n\t\t});\n\t}\n\n\tasync runBulkSim(bulkSettings: BulkSettings, bulkItemsDb: SimDatabase, onProgress: (_?: any) => void): Promise<BulkSimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = BulkSimRequest.create({\n\t\t\tbaseSettings: this.makeRaidSimRequest(false),\n\t\t\tbulkSettings: bulkSettings,\n\t\t});\n\n\t\tif (request.baseSettings != null && request.baseSettings.simOptions != null) {\n\t\t\trequest.baseSettings.simOptions.debugFirstIteration = false;\n\t\t}\n\n\t\tif (!request.baseSettings?.raid || request.baseSettings?.raid?.parties.length == 0 || request.baseSettings?.raid?.parties[0].players.length == 0) {\n\t\t\tthrow new Error('Raid must contain exactly 1 player for bulk sim.');\n\t\t}\n\n\t\t// Attach the extra database to the player.\n\t\tconst playerDatabase = request.baseSettings.raid.parties[0].players[0].database;\n\t\tplayerDatabase?.items.push(...bulkItemsDb.items);\n\t\tplayerDatabase?.enchants.push(...bulkItemsDb.enchants);\n\n\t\tthis.bulkSimStartEmitter.emit(TypedEvent.nextEventID(), request);\n\n\t\tconst result = await this.workerPool.bulkSimAsync(request, onProgress);\n\t\tif (result.errorResult != '') {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\n\t\tthis.bulkSimResultEmitter.emit(TypedEvent.nextEventID(), result);\n\t\treturn result;\n\t}\n\n\tasync runRaidSim(eventID: EventID, onProgress: (_?: any) => void): Promise<SimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(false);\n\n\t\tconst result = await this.workerPool.raidSimAsync(request, onProgress);\n\t\tif (result.errorResult != '') {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t\treturn simResult;\n\t}\n\n\tasync runRaidSimWithLogs(eventID: EventID): Promise<SimResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tconst request = this.makeRaidSimRequest(true);\n\t\tconst result = await this.workerPool.raidSimAsync(request, () => {\n\t\t\treturn;\n\t\t});\n\t\tif (result.errorResult != '') {\n\t\t\tthrow new SimError(result.errorResult);\n\t\t}\n\t\tconst simResult = await SimResult.makeNew(request, result);\n\t\tthis.simResultEmitter.emit(eventID, simResult);\n\t\treturn simResult;\n\t}\n\n\t// This should be invoked internally whenever stats might have changed.\n\tasync updateCharacterStats(eventID: EventID) {\n\t\tif (eventID == 0) {\n\t\t\t// Skip the first event ID because it interferes with the loaded stats.\n\t\t\treturn;\n\t\t}\n\t\teventID = TypedEvent.nextEventID();\n\n\t\tawait this.waitForInit();\n\n\t\t// Capture the current players so we avoid issues if something changes while\n\t\t// request is in-flight.\n\t\tconst players = this.raid.getPlayers();\n\n\t\tconst req = ComputeStatsRequest.create({\n\t\t\traid: this.getModifiedRaidProto(),\n\t\t\tencounter: this.encounter.toProto(),\n\t\t});\n\t\tconst result = await this.workerPool.computeStats(req);\n\n\t\tif (result.errorResult != '') {\n\t\t\tthis.crashEmitter.emit(eventID, new SimError(result.errorResult));\n\t\t\treturn;\n\t\t}\n\n\t\tTypedEvent.freezeAllAndDo(async () => {\n\t\t\tconst playerUpdatePromises = result\n\t\t\t\t.raidStats!.parties.map((partyStats, partyIndex) =>\n\t\t\t\t\tpartyStats.players.map((playerStats, playerIndex) => {\n\t\t\t\t\t\tconst player = players[partyIndex * 5 + playerIndex];\n\t\t\t\t\t\tif (player) {\n\t\t\t\t\t\t\tplayer.setCurrentStats(eventID, playerStats);\n\t\t\t\t\t\t\treturn player.updateMetadata();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\t.flat()\n\t\t\t\t.filter(p => p != null) as Array<Promise<boolean>>;\n\n\t\t\tconst targetUpdatePromise = this.encounter.targetsMetadata.update(result.encounterStats!.targets.map(t => t.metadata!));\n\n\t\t\tconst anyUpdates = await Promise.all(playerUpdatePromises.concat([targetUpdatePromise]));\n\t\t\tif (anyUpdates.some(v => v)) {\n\t\t\t\tthis.unitMetadataEmitter.emit(eventID);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync statWeights(\n\t\tplayer: Player<any>,\n\t\tepStats: Array<Stat>,\n\t\tepPseudoStats: Array<PseudoStat>,\n\t\tepReferenceStat: Stat,\n\t\tonProgress: (_?: any) => void,\n\t): Promise<StatWeightsResult> {\n\t\tif (this.raid.isEmpty()) {\n\t\t\tthrow new Error('Raid is empty! Try adding some players first.');\n\t\t} else if (this.encounter.targets.length < 1) {\n\t\t\tthrow new Error('Encounter has no targets! Try adding some targets first.');\n\t\t}\n\n\t\tawait this.waitForInit();\n\n\t\tif (player.getParty() == null) {\n\t\t\tconsole.warn('Trying to get stat weights without a party!');\n\t\t\treturn StatWeightsResult.create();\n\t\t} else {\n\t\t\tconst tanks = this.raid\n\t\t\t\t.getTanks()\n\t\t\t\t.map(tank => tank.index)\n\t\t\t\t.includes(player.getRaidIndex())\n\t\t\t\t? [UnitReference.create({ type: UnitType.Player, index: 0 })]\n\t\t\t\t: [];\n\t\t\tconst request = StatWeightsRequest.create({\n\t\t\t\tplayer: player.toProto(false, true),\n\t\t\t\traidBuffs: this.raid.getBuffs(),\n\t\t\t\tpartyBuffs: player.getParty()!.getBuffs(),\n\t\t\t\tdebuffs: this.raid.getDebuffs(),\n\t\t\t\tencounter: this.encounter.toProto(),\n\t\t\t\tsimOptions: SimOptions.create({\n\t\t\t\t\titerations: this.getIterations(),\n\t\t\t\t\trandomSeed: BigInt(this.nextRngSeed()),\n\t\t\t\t\tdebug: false,\n\t\t\t\t}),\n\t\t\t\ttanks: tanks,\n\n\t\t\t\tstatsToWeigh: epStats,\n\t\t\t\tpseudoStatsToWeigh: epPseudoStats,\n\t\t\t\tepReferenceStat: epReferenceStat,\n\t\t\t});\n\t\t\tconst result = await this.workerPool.statWeightsAsync(request, onProgress);\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tgetUnitMetadata(ref: UnitReference | undefined, contextPlayer: Player<any> | null, defaultRef: UnitReference): UnitMetadata | undefined {\n\t\tif (!ref || ref.type == UnitType.Unknown) {\n\t\t\treturn this.getUnitMetadata(defaultRef, contextPlayer, defaultRef);\n\t\t} else if (ref.type == UnitType.Player) {\n\t\t\treturn this.raid.getPlayerFromUnitReference(ref)?.getMetadata();\n\t\t} else if (ref.type == UnitType.Target) {\n\t\t\treturn this.encounter.targetsMetadata.asList()[ref.index];\n\t\t} else if (ref.type == UnitType.Pet) {\n\t\t\tconst owner = this.raid.getPlayerFromUnitReference(ref.owner, contextPlayer);\n\t\t\tif (owner) {\n\t\t\t\treturn owner.getPetMetadatas().asList()[ref.index];\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else if (ref.type == UnitType.Self) {\n\t\t\treturn contextPlayer?.getMetadata();\n\t\t} else if (ref.type == UnitType.CurrentTarget) {\n\t\t\treturn this.encounter.targetsMetadata.asList()[0];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetPhase(): number {\n\t\treturn this.phase;\n\t}\n\tsetPhase(eventID: EventID, newPhase: number) {\n\t\tif (newPhase != this.phase && newPhase > 0) {\n\t\t\tthis.phase = newPhase;\n\t\t\tthis.phaseChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFaction(): Faction {\n\t\treturn this.faction;\n\t}\n\tsetFaction(eventID: EventID, newFaction: Faction) {\n\t\tif (newFaction != this.faction && !!newFaction) {\n\t\t\tthis.faction = newFaction;\n\t\t\tthis.factionChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetFixedRngSeed(): number {\n\t\treturn this.fixedRngSeed;\n\t}\n\tsetFixedRngSeed(eventID: EventID, newFixedRngSeed: number) {\n\t\tif (newFixedRngSeed != this.fixedRngSeed) {\n\t\t\tthis.fixedRngSeed = newFixedRngSeed;\n\t\t\tthis.fixedRngSeedChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tstatic MAX_RNG_SEED = Math.pow(2, 32) - 1;\n\tprivate nextRngSeed(): number {\n\t\tlet rngSeed = 0;\n\t\tif (this.fixedRngSeed) {\n\t\t\trngSeed = this.fixedRngSeed;\n\t\t} else {\n\t\t\trngSeed = Math.floor(Math.random() * Sim.MAX_RNG_SEED);\n\t\t}\n\n\t\tthis.lastUsedRngSeed = rngSeed;\n\t\tthis.lastUsedRngSeedChangeEmitter.emit(TypedEvent.nextEventID());\n\t\treturn rngSeed;\n\t}\n\tgetLastUsedRngSeed(): number {\n\t\treturn this.lastUsedRngSeed;\n\t}\n\n\tgetFilters(): DatabaseFilters {\n\t\t// Make a defensive copy\n\t\treturn DatabaseFilters.clone(this.filters);\n\t}\n\tsetFilters(eventID: EventID, newFilters: DatabaseFilters) {\n\t\tif (DatabaseFilters.equals(newFilters, this.filters)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make a defensive copy\n\t\tthis.filters = DatabaseFilters.clone(newFilters);\n\t\tthis.filtersChangeEmitter.emit(eventID);\n\t}\n\n\tgetShowDamageMetrics(): boolean {\n\t\treturn this.showDamageMetrics;\n\t}\n\tsetShowDamageMetrics(eventID: EventID, newShowDamageMetrics: boolean) {\n\t\tif (newShowDamageMetrics != this.showDamageMetrics) {\n\t\t\tthis.showDamageMetrics = newShowDamageMetrics;\n\t\t\tthis.showDamageMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowThreatMetrics(): boolean {\n\t\treturn this.showThreatMetrics;\n\t}\n\tsetShowThreatMetrics(eventID: EventID, newShowThreatMetrics: boolean) {\n\t\tif (newShowThreatMetrics != this.showThreatMetrics) {\n\t\t\tthis.showThreatMetrics = newShowThreatMetrics;\n\t\t\tthis.showThreatMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowHealingMetrics(): boolean {\n\t\treturn this.showHealingMetrics;\n\t}\n\tsetShowHealingMetrics(eventID: EventID, newShowHealingMetrics: boolean) {\n\t\tif (newShowHealingMetrics != this.showHealingMetrics) {\n\t\t\tthis.showHealingMetrics = newShowHealingMetrics;\n\t\t\tthis.showHealingMetricsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowExperimental(): boolean {\n\t\treturn this.showExperimental;\n\t}\n\tsetShowExperimental(eventID: EventID, newShowExperimental: boolean) {\n\t\tif (newShowExperimental != this.showExperimental) {\n\t\t\tthis.showExperimental = newShowExperimental;\n\t\t\tthis.showExperimentalChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetShowEPValues(): boolean {\n\t\treturn this.showEPValues;\n\t}\n\tsetShowEPValues(eventID: EventID, newShowEPValues: boolean) {\n\t\tif (newShowEPValues != this.showEPValues) {\n\t\t\tthis.showEPValues = newShowEPValues;\n\t\t\tthis.showEPValuesChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetLanguage(): string {\n\t\treturn this.language;\n\t}\n\tsetLanguage(eventID: EventID, newLanguage: string) {\n\t\tnewLanguage = newLanguage || getBrowserLanguageCode();\n\t\tif (newLanguage != this.language) {\n\t\t\tthis.language = newLanguage;\n\t\t\tsetLanguageCode(this.language);\n\t\t\tthis.languageChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tgetIterations(): number {\n\t\treturn this.iterations;\n\t}\n\tsetIterations(eventID: EventID, newIterations: number) {\n\t\tif (newIterations != this.iterations) {\n\t\t\tthis.iterations = newIterations;\n\t\t\tthis.iterationsChangeEmitter.emit(eventID);\n\t\t}\n\t}\n\n\tstatic readonly ALL_ARMOR_TYPES = (getEnumValues(ArmorType) as Array<ArmorType>).filter(v => v != 0);\n\tstatic readonly ALL_WEAPON_TYPES = (getEnumValues(WeaponType) as Array<WeaponType>).filter(v => v != 0);\n\tstatic readonly ALL_RANGED_WEAPON_TYPES = (getEnumValues(RangedWeaponType) as Array<RangedWeaponType>).filter(v => v != 0);\n\tstatic readonly ALL_SOURCES = (getEnumValues(SourceFilterOption) as Array<SourceFilterOption>).filter(v => v != 0);\n\tstatic readonly ALL_RAIDS = (getEnumValues(RaidFilterOption) as Array<RaidFilterOption>).filter(v => v != 0);\n\n\ttoProto(): SimSettingsProto {\n\t\tconst filters = this.getFilters();\n\t\tif (filters.armorTypes.length == Sim.ALL_ARMOR_TYPES.length) {\n\t\t\tfilters.armorTypes = [];\n\t\t}\n\t\tif (filters.weaponTypes.length == Sim.ALL_WEAPON_TYPES.length) {\n\t\t\tfilters.weaponTypes = [];\n\t\t}\n\t\tif (filters.rangedWeaponTypes.length == Sim.ALL_RANGED_WEAPON_TYPES.length) {\n\t\t\tfilters.rangedWeaponTypes = [];\n\t\t}\n\t\tif (filters.sources.length == Sim.ALL_SOURCES.length) {\n\t\t\tfilters.sources = [];\n\t\t}\n\t\tif (filters.raids.length == Sim.ALL_RAIDS.length) {\n\t\t\tfilters.raids = [];\n\t\t}\n\n\t\treturn SimSettingsProto.create({\n\t\t\titerations: this.getIterations(),\n\t\t\tphase: this.getPhase(),\n\t\t\tfixedRngSeed: BigInt(this.getFixedRngSeed()),\n\t\t\tshowDamageMetrics: this.getShowDamageMetrics(),\n\t\t\tshowThreatMetrics: this.getShowThreatMetrics(),\n\t\t\tshowHealingMetrics: this.getShowHealingMetrics(),\n\t\t\tshowExperimental: this.getShowExperimental(),\n\t\t\tshowEpValues: this.getShowEPValues(),\n\t\t\tlanguage: this.getLanguage(),\n\t\t\tfaction: this.getFaction(),\n\t\t\tfilters: filters,\n\t\t});\n\t}\n\n\tfromProto(eventID: EventID, proto: SimSettingsProto) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.setIterations(eventID, proto.iterations || 3000);\n\t\t\tthis.setPhase(eventID, proto.phase || OtherConstants.CURRENT_PHASE);\n\t\t\tthis.setFixedRngSeed(eventID, Number(proto.fixedRngSeed));\n\t\t\tthis.setShowDamageMetrics(eventID, proto.showDamageMetrics);\n\t\t\tthis.setShowThreatMetrics(eventID, proto.showThreatMetrics);\n\t\t\tthis.setShowHealingMetrics(eventID, proto.showHealingMetrics);\n\t\t\tthis.setShowExperimental(eventID, proto.showExperimental);\n\t\t\tthis.setShowEPValues(eventID, proto.showEpValues);\n\t\t\tthis.setLanguage(eventID, proto.language);\n\t\t\tthis.setFaction(eventID, proto.faction || Faction.Alliance);\n\n\t\t\tconst filters = proto.filters || Sim.defaultFilters();\n\t\t\tif (filters.armorTypes.length == 0) {\n\t\t\t\tfilters.armorTypes = Sim.ALL_ARMOR_TYPES.slice();\n\t\t\t}\n\t\t\tif (filters.weaponTypes.length == 0) {\n\t\t\t\tfilters.weaponTypes = Sim.ALL_WEAPON_TYPES.slice();\n\t\t\t}\n\t\t\tif (filters.rangedWeaponTypes.length == 0) {\n\t\t\t\tfilters.rangedWeaponTypes = Sim.ALL_RANGED_WEAPON_TYPES.slice();\n\t\t\t}\n\t\t\tif (filters.sources.length == 0) {\n\t\t\t\tfilters.sources = Sim.ALL_SOURCES.slice();\n\t\t\t}\n\t\t\tif (filters.raids.length == 0) {\n\t\t\t\tfilters.raids = Sim.ALL_RAIDS.slice();\n\t\t\t}\n\t\t\tthis.setFilters(eventID, filters);\n\t\t});\n\t}\n\n\tapplyDefaults(eventID: EventID, isTankSim: boolean, isHealingSim: boolean) {\n\t\tthis.fromProto(\n\t\t\teventID,\n\t\t\tSimSettingsProto.create({\n\t\t\t\titerations: 3000,\n\t\t\t\tphase: OtherConstants.CURRENT_PHASE,\n\t\t\t\tfaction: Faction.Alliance,\n\t\t\t\tshowDamageMetrics: !isHealingSim,\n\t\t\t\tshowThreatMetrics: isTankSim,\n\t\t\t\tshowHealingMetrics: isHealingSim,\n\t\t\t\tlanguage: this.getLanguage(), // Don't change language.\n\t\t\t\tfilters: Sim.defaultFilters(),\n\t\t\t\tshowEpValues: false,\n\t\t\t}),\n\t\t);\n\t}\n\n\tstatic defaultFilters(): DatabaseFilters {\n\t\treturn DatabaseFilters.create({\n\t\t\toneHandedWeapons: true,\n\t\t\ttwoHandedWeapons: true,\n\t\t});\n\t}\n}\n\nexport class SimError extends Error {\n\treadonly errorStr: string;\n\n\tconstructor(errorStr: string) {\n\t\tsuper(errorStr);\n\t\tthis.errorStr = errorStr;\n\t}\n}\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, ref } from 'tsx-vanilla';\n\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { TypedEvent } from '../typed_event.js';\nimport { isRightClick } from '../utils.js';\nimport { Input, InputConfig } from './input.js';\n\nexport enum IconPickerDirection {\n\tVertical = 'vertical',\n\tHorizontal = 'Horizontal',\n}\n\n// Data for creating an icon-based input component.\n//\n// E.g. one of these for arcane brilliance, another for kings, etc.\n// ModObject is the object being modified (Sim, Player, or Target).\n// ValueType is either number or boolean.\nexport interface IconPickerConfig<ModObject, ValueType> extends InputConfig<ModObject, ValueType> {\n\tactionId: (modObj: ModObject) => ActionId | null;\n\n\t// The number of possible 'states' this icon can have. Most inputs will use 2\n\t// for a bi-state icon (on or off). 0 indicates an unlimited number of states.\n\tstates: number;\n\t// Only used if states >= 3.\n\timprovedId?: ActionId;\n\t// Only used if states >= 4.\n\timprovedId2?: ActionId;\n\t// Allows you to reverse the direction of increments, e.g. left clicking starts at the maximum value. Defaults to false\n\treverse?: boolean;\n\t// The value increment per state change. Defaults to 1.\n\tstep?: number;\n}\n\n// Icon-based UI for picking buffs / consumes / etc\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconPicker<ModObject, ValueType> extends Input<ModObject, ValueType> {\n\tactive: boolean;\n\n\tprivate readonly config: IconPickerConfig<ModObject, ValueType>;\n\n\tprivate readonly rootAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor: HTMLAnchorElement;\n\tprivate readonly improvedAnchor2: HTMLAnchorElement;\n\tprivate readonly counterElem: HTMLElement;\n\n\tprivate currentValue: number;\n\tprivate storedValue: ValueType | undefined;\n\tprivate step: number;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconPickerConfig<ModObject, ValueType>) {\n\t\tsuper(parent, 'icon-picker-root', modObj, config);\n\t\tthis.rootElem.classList.add('icon-picker');\n\t\tthis.active = false;\n\t\tthis.config = config;\n\t\tthis.currentValue = 0;\n\t\tthis.step = config.step ?? 1;\n\n\t\tthis.rootAnchor = document.createElement('a');\n\t\tthis.rootAnchor.classList.add('icon-picker-button');\n\t\tthis.rootAnchor.dataset.whtticon = 'false';\n\t\tthis.rootAnchor.dataset.disableWowheadTouchTooltip = 'true';\n\t\tthis.rootAnchor.target = '_blank';\n\t\tthis.rootElem.prepend(this.rootAnchor);\n\n\t\tconst useImprovedIcons = Boolean(this.config.improvedId);\n\t\tif (useImprovedIcons) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons');\n\t\t}\n\t\tif (this.config.improvedId2) {\n\t\t\tthis.rootAnchor.classList.add('use-improved-icons2');\n\t\t}\n\t\tif (!useImprovedIcons && this.config.states > 2) {\n\t\t\tthis.rootAnchor.classList.add('use-counter');\n\t\t}\n\n\t\tconst ia = ref<HTMLAnchorElement>();\n\t\tconst ia2 = ref<HTMLAnchorElement>();\n\t\tconst ce = ref<HTMLSpanElement>();\n\t\tthis.rootAnchor.appendChild(\n\t\t\t<div className=\"icon-input-level-container\">\n\t\t\t\t<a\n\t\t\t\t\tref={ia}\n\t\t\t\t\tclassName=\"icon-picker-button icon-input-improved icon-input-improved1\"\n\t\t\t\t\tdataset={{ whtticon: 'false', disableWowheadTouchTooltip: 'true' }}></a>\n\t\t\t\t<a\n\t\t\t\t\tref={ia2}\n\t\t\t\t\tclassName=\"icon-picker-button icon-input-improved icon-input-improved2\"\n\t\t\t\t\tdataset={{ whtticon: 'false', disableWowheadTouchTooltip: 'true' }}></a>\n\t\t\t\t<span ref={ce} className={`icon-picker-label ${this.config.states > 2 ? '' : 'hide'}`}></span>\n\t\t\t</div>,\n\t\t);\n\n\t\tthis.improvedAnchor = ia.value!;\n\t\tthis.improvedAnchor2 = ia2.value!;\n\t\tthis.counterElem = ce.value!;\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tthis.config.improvedId.fillAndSet(this.improvedAnchor, true, true);\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tthis.config.improvedId2.fillAndSet(this.improvedAnchor2, true, true);\n\t\t}\n\n\t\tthis.init();\n\n\t\t// This must occur after this.init() else the state will not be handled correctly\n\t\tconst updateState = () => {\n\t\t\tthis.config.actionId(this.modObject)?.fillAndSet(this.rootAnchor, true, true);\n\n\t\t\tif (this.showWhen()) {\n\t\t\t\tthis.rootElem.classList.remove('hide');\n\t\t\t\tthis.restoreValue();\n\t\t\t} else {\n\t\t\t\tthis.storeValue();\n\t\t\t\tthis.rootElem.classList.add('hide');\n\t\t\t}\n\t\t};\n\t\tupdateState();\n\t\tthis.config.changedEvent(this.modObject).on(updateState);\n\n\t\tconst leftClickFn = config.reverse ? this.decrementValue : this.incrementValue;\n\t\tconst rightClickFn = config.reverse ? this.incrementValue : this.decrementValue;\n\n\t\tthis.rootAnchor.addEventListener('click', event => {\n\t\t\tevent.preventDefault();\n\t\t\tleftClickFn();\n\t\t});\n\t\tthis.rootAnchor.addEventListener('mousedown', event => {\n\t\t\tif (isRightClick(event)) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\trightClickFn();\n\t\t\t}\n\t\t});\n\t\tthis.rootAnchor.addEventListener('contextmenu', event => event.preventDefault());\n\t}\n\n\tincrementValue = () => {\n\t\tif (this.config.states == 0 || this.currentValue + this.step < this.config.states * this.step) {\n\t\t\tthis.currentValue += this.step;\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t} else if (this.currentValue > 0) {\n\t\t\t// roll over\n\t\t\tthis.currentValue = 0;\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t}\n\t};\n\n\tdecrementValue = () => {\n\t\tif (this.currentValue > 0) {\n\t\t\tthis.currentValue -= this.step;\n\t\t} else {\n\t\t\t// roll over\n\t\t\tif (this.config.states === 0) {\n\t\t\t\tthis.currentValue = this.step;\n\t\t\t} else {\n\t\t\t\tthis.currentValue = (this.config.states - 1) * this.step;\n\t\t\t}\n\t\t}\n\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t};\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootAnchor;\n\t}\n\n\tgetInputValue(): ValueType {\n\t\tif (this.config.states == 2) {\n\t\t\treturn Boolean(this.currentValue) as unknown as ValueType;\n\t\t} else {\n\t\t\treturn this.currentValue as unknown as ValueType;\n\t\t}\n\t}\n\n\t// Returns the ActionId of the currently selected value, or null if none selected.\n\tgetActionId(): ActionId | null {\n\t\t// Go directly to source because during event propogation\n\t\t//  the internal `this.currentValue` may not yet have been updated.\n\t\tconst v = Number(this.config.getValue(this.modObject));\n\t\tif (v == 0) {\n\t\t\treturn null;\n\t\t} else if (v == 1) {\n\t\t\treturn this.config.actionId(this.modObject);\n\t\t} else if (v == 2 && this.config.improvedId) {\n\t\t\treturn this.config.improvedId;\n\t\t} else if (v == 3 && this.config.improvedId2) {\n\t\t\treturn this.config.improvedId2;\n\t\t} else {\n\t\t\treturn this.config.actionId(this.modObject);\n\t\t}\n\t}\n\n\tsetInputValue(newValue: ValueType) {\n\t\tthis.currentValue = Number(newValue);\n\n\t\tif (this.currentValue > 0) {\n\t\t\tthis.active = true;\n\t\t\tthis.rootAnchor.classList.add('active');\n\t\t\tthis.counterElem.classList.add('active');\n\t\t} else {\n\t\t\tthis.active = false;\n\t\t\tthis.rootAnchor.classList.remove('active');\n\t\t\tthis.counterElem.classList.remove('active');\n\t\t}\n\n\t\tif (this.config.states >= 3 && this.config.improvedId) {\n\t\t\tif (this.currentValue > 1) {\n\t\t\t\tthis.improvedAnchor.classList.add('active');\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor.classList.remove('active');\n\t\t\t}\n\t\t}\n\t\tif (this.config.states >= 4 && this.config.improvedId2) {\n\t\t\tif (this.currentValue > 2) {\n\t\t\t\tthis.improvedAnchor2.classList.add('active');\n\t\t\t\tthis.improvedAnchor.hidden = true;\n\t\t\t\tthis.improvedAnchor2.hidden = false;\n\t\t\t} else {\n\t\t\t\tthis.improvedAnchor2.classList.remove('active');\n\t\t\t\tthis.improvedAnchor.hidden = false;\n\t\t\t\tthis.improvedAnchor2.hidden = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.config.improvedId && (this.config.states > 3 || this.config.states == 0)) {\n\t\t\tthis.counterElem.textContent = String(this.currentValue);\n\t\t}\n\t}\n\n\t/**\n\t * Stores value of current input and hides the element for later\n\t * restoration. Useful for events which trigger the element\n\t * on and off.\n\t */\n\tstoreValue() {\n\t\tif (typeof this.storedValue !== 'undefined') return;\n\n\t\tthis.storedValue = this.getInputValue();\n\t\tthis.setInputValue(0 as ValueType);\n\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t}\n\n\t/**\n\t * Restores value of current input and shows the element.\n\t */\n\trestoreValue() {\n\t\tif (typeof this.storedValue === 'undefined') return;\n\n\t\tthis.setInputValue(this.storedValue);\n\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\tthis.storedValue = undefined;\n\t}\n\n\tshowWhen() {\n\t\treturn this.config.actionId(this.modObject) != null && (!this.config.showWhen || this.config.showWhen(this.modObject));\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment } from 'tsx-vanilla';\n\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { TypedEvent } from '../typed_event.js';\nimport { IconPickerDirection } from './icon_picker.jsx';\nimport { Input, InputConfig } from './input.js';\n\nexport interface IconEnumValueConfig<ModObject, T> {\n\tvalue: T;\n\t// One of these should be set.\n\t// If actionId is set, shows the icon for that id.\n\t// If color is set, shows that color.\n\t// If iconUrl is set, shows that icon as grayscale\n\tactionId?: (modObj: ModObject) => ActionId | null;\n\tcolor?: string;\n\ticonUrl?: string;\n\t// Text to be displayed on the icon.\n\ttext?: string;\n\t// Hover tooltip.\n\ttooltip?: string;\n\n\tshowWhen?: (obj: ModObject) => boolean;\n}\n\nexport interface IconEnumPickerConfig<ModObject, T> extends InputConfig<ModObject, T> {\n\tnumColumns?: number;\n\tvalues: Array<IconEnumValueConfig<ModObject, T>>;\n\t// Value that will be considered inactive.\n\tzeroValue: T;\n\t// Function for comparing two values.\n\t// Tooltip that will be shown whne hovering over the icon-picker-button\n\ttooltip?: string;\n\t// The direction the menu will open in relative to the root element\n\tdirection?: IconPickerDirection;\n\tequals: (a: T, b: T) => boolean;\n\tbackupIconUrl?: (value: T) => ActionId;\n\tshowWhen?: (obj: ModObject) => boolean;\n}\n\n// Icon-based UI for picking enum values.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class IconEnumPicker<ModObject, T> extends Input<ModObject, T> {\n\tprivate readonly config: IconEnumPickerConfig<ModObject, T>;\n\n\tprivate currentValue: T;\n\tprivate storedValue: T | undefined;\n\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\tprivate readonly buttonText: HTMLElement;\n\tprivate readonly dropdownMenu: HTMLElement;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: IconEnumPickerConfig<ModObject, T>) {\n\t\tsuper(parent, 'icon-enum-picker-root', modObj, config);\n\t\tthis.rootElem.classList.add('icon-picker', (config.direction ?? IconPickerDirection.Vertical) === 'vertical' ? 'dropdown' : 'dropend');\n\t\tthis.config = config;\n\t\tthis.currentValue = this.config.zeroValue;\n\n\t\tif (config.tooltip) {\n\t\t\tTooltip.getOrCreateInstance(this.rootElem, {\n\t\t\t\thtml: true,\n\t\t\t\ttitle: config.tooltip,\n\t\t\t});\n\t\t}\n\n\t\tthis.rootElem.appendChild(\n\t\t\t<>\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclassName=\"icon-picker-button\"\n\t\t\t\t\tattributes={{\n\t\t\t\t\t\t'aria-expanded': 'false',\n\t\t\t\t\t\trole: 'button',\n\t\t\t\t\t}}\n\t\t\t\t\tdataset={{\n\t\t\t\t\t\tbsToggle: 'dropdown',\n\t\t\t\t\t\twhtticon: 'false',\n\t\t\t\t\t\tdisableWowheadTouchTooltip: 'true',\n\t\t\t\t\t}}></a>\n\t\t\t\t<ul className=\"dropdown-menu\"></ul>\n\t\t\t\t<label className=\"form-label\"></label>\n\t\t\t</>,\n\t\t);\n\n\t\tthis.buttonElem = this.rootElem.querySelector('.icon-picker-button') as HTMLAnchorElement;\n\t\tthis.buttonText = this.rootElem.querySelector('label') as HTMLElement;\n\t\tthis.dropdownMenu = this.rootElem.querySelector('.dropdown-menu') as HTMLElement;\n\n\t\tif (this.config.numColumns) {\n\t\t\tthis.dropdownMenu.style.gridTemplateColumns = `repeat(${this.config.numColumns}, 1fr)`;\n\t\t}\n\n\t\tif (this.config.direction == IconPickerDirection.Horizontal) {\n\t\t\tthis.dropdownMenu.style.gridAutoFlow = 'column';\n\t\t}\n\n\t\tthis.config.values.forEach((valueConfig, _) => {\n\t\t\tconst optionContainer = document.createElement('li');\n\t\t\toptionContainer.classList.add('icon-dropdown-option', 'dropdown-option');\n\t\t\tthis.dropdownMenu.appendChild(optionContainer);\n\n\t\t\tconst option = document.createElement('a');\n\t\t\toption.classList.add('icon-picker-button');\n\t\t\toption.dataset.whtticon = 'false';\n\t\t\toption.dataset.disableWowheadTouchTooltip = 'true';\n\t\t\toptionContainer.appendChild(option);\n\n\t\t\tconst updateOption = () => {\n\t\t\t\tthis.setImage(option, valueConfig);\n\t\t\t\tif (this.showValueWhen(valueConfig)) {\n\t\t\t\t\toptionContainer.classList.remove('hide');\n\t\t\t\t} else {\n\t\t\t\t\toptionContainer.classList.add('hide');\n\t\t\t\t\t// Zero out the picker if the selected option is hidden\n\t\t\t\t\tif (this.currentValue == valueConfig.value) {\n\t\t\t\t\t\tthis.setInputValue(this.config.zeroValue);\n\t\t\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.config.changedEvent(this.modObject).on(updateOption);\n\t\t\tupdateOption();\n\n\t\t\toption.addEventListener('click', event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.currentValue = valueConfig.value;\n\t\t\t\tthis.storedValue = undefined;\n\t\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t\t});\n\n\t\t\tif (valueConfig.tooltip) {\n\t\t\t\tTooltip.getOrCreateInstance(option, {\n\t\t\t\t\thtml: true,\n\t\t\t\t\ttitle: valueConfig.tooltip,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.init();\n\n\t\t// This must occur after this.init() else the state will not be handled correctly\n\t\tconst updateState = () => {\n\t\t\tif (this.showWhen()) {\n\t\t\t\tthis.restoreValue();\n\t\t\t\tthis.rootElem.classList.remove('hide');\n\t\t\t} else {\n\t\t\t\tthis.storeValue();\n\t\t\t\tthis.rootElem.classList.add('hide');\n\t\t\t}\n\t\t};\n\t\tupdateState();\n\t\tthis.config.changedEvent(this.modObject).on(updateState);\n\t}\n\n\t/**\n\t * Stores value of current input and hides the element for later\n\t * restoration. Useful for events which trigger the element\n\t * on and off.\n\t */\n\tstoreValue() {\n\t\tif (typeof this.storedValue !== 'undefined') return;\n\n\t\tthis.storedValue = this.getInputValue();\n\t\tthis.setInputValue(this.config.zeroValue);\n\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t}\n\n\t/**\n\t * Restores value of current input and shows the element.\n\t */\n\trestoreValue() {\n\t\tif (typeof this.storedValue === 'undefined') return;\n\n\t\tthis.setInputValue(this.storedValue);\n\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\tthis.storedValue = undefined;\n\t}\n\n\tprivate setActionImage(elem: HTMLAnchorElement, actionId: ActionId) {\n\t\tactionId.fillAndSet(elem, true, true);\n\t}\n\n\tprivate setImage(elem: HTMLAnchorElement, valueConfig: IconEnumValueConfig<ModObject, T>) {\n\t\tif (valueConfig.showWhen && !valueConfig.showWhen(this.modObject)) {\n\t\t\telem.removeAttribute('href');\n\t\t\treturn;\n\t\t}\n\n\t\tconst actionId = valueConfig.actionId?.(this.modObject);\n\t\tif (actionId) {\n\t\t\tthis.setActionImage(elem, actionId);\n\t\t\telem.style.filter = '';\n\t\t} else if (valueConfig.iconUrl) {\n\t\t\telem.style.backgroundImage = `url(${valueConfig.iconUrl})`;\n\t\t\telem.style.filter = 'grayscale(1)';\n\t\t} else {\n\t\t\telem.style.backgroundImage = '';\n\t\t\telem.style.filter = '';\n\t\t\telem.style.backgroundColor = valueConfig.color!;\n\t\t}\n\t}\n\n\tupdate() {\n\t\tsuper.update();\n\t\tthis.setActive(this.enabled && !this.config.equals(this.currentValue, this.config.zeroValue));\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.buttonElem;\n\t}\n\n\tgetInputValue(): T {\n\t\treturn this.currentValue;\n\t}\n\n\tsetInputValue(newValue: T) {\n\t\tthis.currentValue = newValue;\n\t\tthis.setActive(this.enabled && !this.config.equals(this.currentValue, this.config.zeroValue));\n\n\t\tthis.buttonText.textContent = '';\n\t\tthis.buttonText.style.display = 'none';\n\n\t\tconst valueConfig = this.config.values.find(valueConfig => this.config.equals(valueConfig.value, this.currentValue))!;\n\t\tif (valueConfig) {\n\t\t\tthis.setImage(this.buttonElem, valueConfig);\n\t\t\tif (valueConfig.text != undefined) {\n\t\t\t\tthis.buttonText.style.display = 'block';\n\t\t\t\tthis.buttonText.textContent = valueConfig.text;\n\t\t\t}\n\t\t} else if (this.config.backupIconUrl) {\n\t\t\tconst backupId = this.config.backupIconUrl(this.currentValue);\n\t\t\tthis.setActionImage(this.buttonElem, backupId);\n\t\t\tthis.setActive(false);\n\t\t}\n\t}\n\n\tsetActive(active: boolean) {\n\t\tif (active) this.buttonElem.classList.add('active');\n\t\telse this.buttonElem.classList.remove('active');\n\t}\n\n\tshowWhen(): boolean {\n\t\treturn (\n\t\t\t(!this.config.showWhen || this.config.showWhen(this.modObject)) &&\n\t\t\t!!this.config.values.find(\n\t\t\t\tvalueConfig =>\n\t\t\t\t\tvalueConfig.actionId && valueConfig.actionId(this.modObject) != null && (!valueConfig.showWhen || valueConfig.showWhen(this.modObject)),\n\t\t\t)\n\t\t);\n\t}\n\n\tshowValueWhen(valueConfig: IconEnumValueConfig<ModObject, T>): boolean {\n\t\treturn (!valueConfig.actionId || valueConfig.actionId?.(this.modObject) != null) && (!valueConfig.showWhen || valueConfig.showWhen(this.modObject));\n\t}\n}\n","import { Player } from '../player.js';\nimport { Spec } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { SpecOptions, SpecRotation } from '../proto_utils/utils.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BooleanPickerConfig } from './boolean_picker.js';\nimport { EnumPickerConfig, EnumValueConfig } from './enum_picker.js';\nimport { IconEnumPickerConfig, IconEnumValueConfig } from './icon_enum_picker.js';\nimport { IconPickerConfig, IconPickerDirection } from './icon_picker.js';\nimport { MultiIconPickerConfig } from './multi_icon_picker.js';\nimport { NumberPickerConfig } from './number_picker.js';\n\nexport function makeMultiIconInput<ModObject>(\n\tinputs: Array<IconPickerConfig<ModObject, any>>,\n\tlabel: string,\n\tdirection?: IconPickerDirection,\n): MultiIconPickerConfig<ModObject> {\n\treturn {\n\t\tinputs: inputs,\n\t\tlabel: label,\n\t\tdirection: direction,\n\t\tshowWhen: p => inputs.filter(i => !i.showWhen || i.showWhen(p as ModObject)).length > 0,\n\t};\n}\n\n// Extend this to add player callbacks as optional config fields.\ninterface BasePlayerConfig<SpecType extends Spec, T> {\n\tgetValue?: (player: Player<SpecType>) => T;\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newVal: T) => void;\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>;\n\textraCssClasses?: Array<string>;\n\tshowWhen?: (player: Player<SpecType>) => boolean;\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    BOOLEAN\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedBooleanPickerConfig<ModObject> extends BooleanPickerConfig<ModObject> {\n\ttype: 'boolean';\n}\n\ninterface WrappedBooleanInputConfig<SpecType extends Spec, ModObject> extends BooleanPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject;\n}\nfunction makeWrappedBooleanInput<SpecType extends Spec, ModObject>(\n\tconfig: WrappedBooleanInputConfig<SpecType, ModObject>,\n): TypedBooleanPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'boolean',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: boolean) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n}\nexport interface PlayerBooleanInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, boolean> {\n\tfieldName: keyof Message;\n\tlabel: string;\n\tlabelTooltip?: string;\n\tenableWhen?: (player: Player<SpecType>) => boolean;\n\tshowWhen?: (player: Player<SpecType>) => boolean;\n}\nexport function makeSpecOptionsBooleanInput<SpecType extends Spec>(\n\tconfig: PlayerBooleanInputConfig<SpecType, SpecOptions<SpecType>>,\n): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as boolean),\n\t\tsetValue:\n\t\t\tconfig.setValue ||\n\t\t\t((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\nexport function makeRotationBooleanInput<SpecType extends Spec>(\n\tconfig: PlayerBooleanInputConfig<SpecType, SpecRotation<SpecType>>,\n): TypedBooleanPickerConfig<Player<SpecType>> {\n\treturn makeWrappedBooleanInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSimpleRotation()[config.fieldName] as unknown as boolean),\n\t\tsetValue:\n\t\t\tconfig.setValue ||\n\t\t\t((eventID: EventID, player: Player<SpecType>, newVal: boolean) => {\n\t\t\t\tconst newMessage = player.getSimpleRotation();\n\t\t\t\t(newMessage[config.fieldName] as unknown as boolean) = newVal;\n\t\t\t\tplayer.setSimpleRotation(eventID, newMessage);\n\t\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    NUMBER\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedNumberPickerConfig<ModObject> extends NumberPickerConfig<ModObject> {\n\ttype: 'number';\n}\n\ninterface WrappedNumberInputConfig<SpecType extends Spec, ModObject> extends NumberPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject;\n}\nfunction makeWrappedNumberInput<SpecType extends Spec, ModObject>(\n\tconfig: WrappedNumberInputConfig<SpecType, ModObject>,\n): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'number',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tdefaultValue: config.defaultValue,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n}\nexport interface PlayerNumberInputConfig<SpecType extends Spec, Message> extends BasePlayerConfig<SpecType, number> {\n\tfieldName: keyof Message;\n\tlabel: string;\n\tlabelTooltip?: string;\n\tpercent?: boolean;\n\tfloat?: boolean;\n\tpositive?: boolean;\n\tenableWhen?: (player: Player<SpecType>) => boolean;\n\tshowWhen?: (player: Player<SpecType>) => boolean;\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>;\n}\nexport function makeSpecOptionsNumberInput<SpecType extends Spec>(\n\tconfig: PlayerNumberInputConfig<SpecType, SpecOptions<SpecType>>,\n): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue:\n\t\t\tconfig.setValue ||\n\t\t\t((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal / 100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\nexport function makeRotationNumberInput<SpecType extends Spec>(\n\tconfig: PlayerNumberInputConfig<SpecType, SpecRotation<SpecType>>,\n): TypedNumberPickerConfig<Player<SpecType>> {\n\tconst internalConfig = {\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tfloat: config.float,\n\t\tpositive: config.positive,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSimpleRotation()[config.fieldName] as unknown as number),\n\t\tsetValue:\n\t\t\tconfig.setValue ||\n\t\t\t((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\t\tconst newMessage = player.getSimpleRotation();\n\t\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\t\tplayer.setSimpleRotation(eventID, newMessage);\n\t\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n\tif (config.percent) {\n\t\tconst getValue = internalConfig.getValue;\n\t\tinternalConfig.getValue = (player: Player<SpecType>) => getValue(player) * 100;\n\t\tconst setValue = internalConfig.setValue;\n\t\tinternalConfig.setValue = (eventID: EventID, player: Player<SpecType>, newVal: number) => setValue(eventID, player, newVal / 100);\n\t}\n\treturn makeWrappedNumberInput<SpecType, Player<SpecType>>(internalConfig);\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                    ENUM\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedEnumPickerConfig<ModObject> extends EnumPickerConfig<ModObject> {\n\ttype: 'enum';\n}\n\ninterface WrappedEnumInputConfig<SpecType extends Spec, ModObject> extends EnumPickerConfig<ModObject> {\n\tgetModObject: (player: Player<SpecType>) => ModObject;\n}\nfunction makeWrappedEnumInput<SpecType extends Spec, ModObject>(config: WrappedEnumInputConfig<SpecType, ModObject>): TypedEnumPickerConfig<Player<SpecType>> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'enum',\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: number) => config.setValue(eventID, getModObject(player), newValue),\n\t\tenableWhen: config.enableWhen ? (player: Player<SpecType>) => config.enableWhen!(getModObject(player)) : undefined,\n\t\tshowWhen: config.showWhen ? (player: Player<SpecType>) => config.showWhen!(getModObject(player)) : undefined,\n\t};\n}\n\nexport interface PlayerEnumInputConfig<SpecType extends Spec, Message> {\n\tfieldName: keyof Message;\n\tlabel: string;\n\tlabelTooltip?: string;\n\tvalues: Array<EnumValueConfig>;\n\tgetValue?: (player: Player<SpecType>) => number;\n\tsetValue?: (eventID: EventID, player: Player<SpecType>, newValue: number) => void;\n\tenableWhen?: (player: Player<SpecType>) => boolean;\n\tshowWhen?: (player: Player<SpecType>) => boolean;\n\tchangeEmitter?: (player: Player<SpecType>) => TypedEvent<any>;\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeSpecOptionsEnumInput<SpecType extends Spec>(\n\tconfig: PlayerEnumInputConfig<SpecType, SpecOptions<SpecType>>,\n): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSpecOptions()[config.fieldName] as unknown as number),\n\t\tsetValue:\n\t\t\tconfig.setValue ||\n\t\t\t((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\t\tconst newMessage = player.getSpecOptions();\n\t\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\t\tplayer.setSpecOptions(eventID, newMessage);\n\t\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n// T is unused, but kept to have the same interface as the icon enum inputs.\nexport function makeRotationEnumInput<SpecType extends Spec>(\n\tconfig: PlayerEnumInputConfig<SpecType, SpecRotation<SpecType>>,\n): TypedEnumPickerConfig<Player<SpecType>> {\n\treturn makeWrappedEnumInput<SpecType, Player<SpecType>>({\n\t\tlabel: config.label,\n\t\tlabelTooltip: config.labelTooltip,\n\t\tvalues: config.values,\n\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\tgetValue: config.getValue || ((player: Player<SpecType>) => player.getSimpleRotation()[config.fieldName] as unknown as number),\n\t\tsetValue:\n\t\t\tconfig.setValue ||\n\t\t\t((eventID: EventID, player: Player<SpecType>, newVal: number) => {\n\t\t\t\tconst newMessage = player.getSimpleRotation();\n\t\t\t\t(newMessage[config.fieldName] as unknown as number) = newVal;\n\t\t\t\tplayer.setSimpleRotation(eventID, newMessage);\n\t\t\t}),\n\t\tchangedEvent: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\tenableWhen: config.enableWhen,\n\t\tshowWhen: config.showWhen,\n\t});\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                  ICON\n/////////////////////////////////////////////////////////////////////////////////\nexport interface TypedIconPickerConfig<ModObject, T> extends IconPickerConfig<ModObject, T> {\n\ttype: 'icon';\n}\n\ninterface WrappedIconInputConfig<SpecType extends Spec, ModObject, T> extends IconPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject;\n}\nfunction makeWrappedIconInput<SpecType extends Spec, ModObject, T>(\n\tconfig: WrappedIconInputConfig<SpecType, ModObject, T>,\n): TypedIconPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'icon',\n\t\tactionId: (player: Player<SpecType>) => config.actionId(getModObject(player)),\n\t\tstates: config.states,\n\t\tshowWhen: config.showWhen as any,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n}\n\ninterface WrappedTypedInputConfig<Message, ModObject, T> {\n\tgetModObject: (player: Player<any>) => ModObject;\n\tgetValue: (modObj: ModObject) => Message;\n\tsetValue: (eventID: EventID, modObj: ModObject, messageVal: Message) => void;\n\tchangeEmitter: (modObj: ModObject) => TypedEvent<any>;\n\textraCssClasses?: Array<string>;\n\n\tshowWhen?: (obj: ModObject) => boolean;\n\tgetFieldValue?: (modObj: ModObject) => T;\n\tsetFieldValue?: (eventID: EventID, modObj: ModObject, newValue: T) => void;\n}\n\nexport function makeBooleanIconInput<SpecType extends Spec, Message, ModObject>(\n\tconfig: WrappedTypedInputConfig<Message, ModObject, boolean>,\n\tactionId: (modObj: ModObject) => ActionId | null,\n\tfieldName: keyof Message,\n\tvalue?: number,\n): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeWrappedIconInput<SpecType, ModObject, boolean>({\n\t\tgetModObject: config.getModObject,\n\t\tactionId: actionId,\n\t\tstates: 2,\n\t\tchangedEvent: config.changeEmitter,\n\t\tshowWhen: config.showWhen,\n\t\tgetValue:\n\t\t\tconfig.getFieldValue ||\n\t\t\t((modObj: ModObject) =>\n\t\t\t\tvalue ? (config.getValue(modObj)[fieldName] as unknown as number) == value : (config.getValue(modObj)[fieldName] as unknown as boolean)),\n\t\tsetValue:\n\t\t\tconfig.setFieldValue ||\n\t\t\t((eventID: EventID, modObj: ModObject, newValue: boolean) => {\n\t\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\t\tif (value) {\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t(newMessage[fieldName] as unknown as number) = value;\n\t\t\t\t\t} else if ((newMessage[fieldName] as unknown as number) == value) {\n\t\t\t\t\t\t(newMessage[fieldName] as unknown as number) = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t(newMessage[fieldName] as unknown as boolean) = newValue;\n\t\t\t\t}\n\t\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t\t}),\n\t\textraCssClasses: config.extraCssClasses,\n\t});\n}\n\nexport interface PlayerBooleanIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message;\n\tactionId: (player: Player<SpecType>) => ActionId | null;\n\tvalue?: number;\n}\nexport function makeSpecOptionsBooleanIconInput<SpecType extends Spec>(\n\tconfig: PlayerBooleanIconInputConfig<SpecType, SpecOptions<SpecType>, boolean>,\n): TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn makeBooleanIconInput<SpecType, SpecOptions<SpecType>, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tgetValue: (player: Player<SpecType>) => player.getSpecOptions(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: SpecOptions<SpecType>) => player.setSpecOptions(eventID, newVal),\n\t\t\tchangeEmitter: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\t\textraCssClasses: config.extraCssClasses,\n\t\t\tgetFieldValue: config.getValue,\n\t\t\tsetFieldValue: config.setValue,\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.fieldName,\n\t\tconfig.value,\n\t);\n}\n\nfunction makeNumberIconInput<SpecType extends Spec, Message, ModObject>(\n\tconfig: WrappedTypedInputConfig<Message, ModObject, number>,\n\tactionId: (modObj: ModObject) => ActionId | null,\n\tfieldName: keyof Message,\n): TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn makeWrappedIconInput<SpecType, ModObject, number>({\n\t\tgetModObject: config.getModObject,\n\t\tactionId: actionId,\n\t\tstates: 0, // Must be assigned externally.\n\t\tstep: 1, // Must be assigned a different value externally.\n\t\tchangedEvent: config.changeEmitter,\n\t\tshowWhen: config.showWhen,\n\t\tgetValue: (modObj: ModObject) => config.getValue(modObj)[fieldName] as unknown as number,\n\t\tsetValue: (eventID: EventID, modObj: ModObject, newValue: number) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\tif (newValue < 0) {\n\t\t\t\tnewValue = 0;\n\t\t\t}\n\t\t\t(newMessage[fieldName] as unknown as number) = newValue;\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t},\n\t});\n}\nexport function makeTristateIconInput<SpecType extends Spec, Message, ModObject>(\n\tconfig: WrappedTypedInputConfig<Message, ModObject, number>,\n\tactionId: (modObj: ModObject) => ActionId | null,\n\timpId: ActionId,\n\tfieldName: keyof Message,\n): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, actionId, fieldName);\n\tinput.states = 3;\n\tinput.improvedId = impId;\n\treturn input;\n}\nexport function makeQuadstateIconInput<SpecType extends Spec, Message, ModObject>(\n\tconfig: WrappedTypedInputConfig<Message, ModObject, number>,\n\tactionId: (modObj: ModObject) => ActionId | null,\n\timpId: ActionId,\n\timpId2: ActionId,\n\tfieldName: keyof Message,\n): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, actionId, fieldName);\n\tinput.states = 4;\n\tinput.improvedId = impId;\n\tinput.improvedId2 = impId2;\n\treturn input;\n}\nexport function makeMultistateIconInput<SpecType extends Spec, Message, ModObject>(\n\tconfig: WrappedTypedInputConfig<Message, ModObject, number>,\n\tactionId: (modObj: ModObject) => ActionId | null,\n\tnumStates: number,\n\tfieldName: keyof Message,\n\tmultiplier?: number,\n\treverse?: boolean,\n): TypedIconPickerConfig<Player<SpecType>, number> {\n\tconst input = makeNumberIconInput(config, actionId, fieldName);\n\tinput.states = numStates;\n\tinput.step = multiplier;\n\tinput.reverse = reverse;\n\treturn input;\n}\n\nexport interface TypedIconEnumPickerConfig<ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\ttype: 'iconEnum';\n}\n\ninterface WrappedEnumIconInputConfig<SpecType extends Spec, ModObject, T> extends IconEnumPickerConfig<ModObject, T> {\n\tgetModObject: (player: Player<SpecType>) => ModObject;\n}\n\nfunction makeWrappedEnumIconInput<SpecType extends Spec, ModObject, T>(\n\tconfig: WrappedEnumIconInputConfig<SpecType, ModObject, T>,\n): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\tconst getModObject = config.getModObject;\n\treturn {\n\t\ttype: 'iconEnum',\n\t\tnumColumns: config.numColumns,\n\t\tdirection: config.direction,\n\t\tvalues: config.values.map(value => {\n\t\t\tif (value.showWhen) {\n\t\t\t\tconst showWhen = value.showWhen;\n\t\t\t\tvalue.showWhen = ((player: Player<SpecType>) => showWhen(getModObject(player))) as any;\n\t\t\t}\n\t\t\treturn value as unknown as IconEnumValueConfig<Player<SpecType>, T>;\n\t\t}),\n\t\tequals: config.equals,\n\t\tshowWhen: (player: Player<SpecType>): boolean => !config.showWhen || (config.showWhen(getModObject(player)) as any),\n\t\tzeroValue: config.zeroValue,\n\t\tchangedEvent: (player: Player<SpecType>) => config.changedEvent(getModObject(player)),\n\t\tgetValue: (player: Player<SpecType>) => config.getValue(getModObject(player)),\n\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newValue: T) => config.setValue(eventID, getModObject(player), newValue),\n\t\textraCssClasses: config.extraCssClasses,\n\t};\n}\n\nexport function makeEnumIconInput<SpecType extends Spec, Message, ModObject, T>(\n\tconfig: WrappedTypedInputConfig<Message, ModObject, T>,\n\tfieldName: keyof Message,\n\tvalues: Array<IconEnumValueConfig<ModObject, T>>,\n\tnumColumns?: number,\n\tdirection?: IconPickerDirection,\n): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeWrappedEnumIconInput<SpecType, ModObject, T>({\n\t\tdirection: direction || IconPickerDirection.Vertical,\n\t\tnumColumns: numColumns,\n\t\tvalues: values,\n\t\tzeroValue: 0 as unknown as T,\n\t\tequals: (a: T, b: T) => a == b,\n\t\tgetModObject: config.getModObject,\n\t\tchangedEvent: config.changeEmitter,\n\t\tshowWhen: config.showWhen,\n\t\tgetValue: (modObj: ModObject) => config.getValue(modObj)[fieldName] as unknown as T,\n\t\tsetValue: (eventID: EventID, modObj: ModObject, newValue: T) => {\n\t\t\tconst newMessage = config.getValue(modObj);\n\t\t\t(newMessage[fieldName] as unknown as T) = newValue;\n\t\t\tconfig.setValue(eventID, modObj, newMessage);\n\t\t},\n\t});\n}\n\nexport interface PlayerEnumIconInputConfig<SpecType extends Spec, Message, T> extends BasePlayerConfig<SpecType, T> {\n\tfieldName: keyof Message;\n\tvalues: Array<IconEnumValueConfig<Player<SpecType>, T>>;\n\tnumColumns?: number;\n}\nexport function makeSpecOptionsEnumIconInput<SpecType extends Spec, T>(\n\tconfig: PlayerEnumIconInputConfig<SpecType, SpecOptions<SpecType>, T>,\n): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeEnumIconInput<SpecType, SpecOptions<SpecType>, Player<SpecType>, T>(\n\t\t{\n\t\t\tshowWhen: config.showWhen,\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tgetValue: (player: Player<SpecType>) => player.getSpecOptions(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: SpecOptions<SpecType>) => player.setSpecOptions(eventID, newVal),\n\t\t\tgetFieldValue: config.getValue,\n\t\t\tsetFieldValue: config.setValue,\n\t\t\tchangeEmitter: config.changeEmitter || ((player: Player<SpecType>) => player.specOptionsChangeEmitter),\n\t\t\textraCssClasses: config.extraCssClasses,\n\t\t},\n\t\tconfig.fieldName,\n\t\tconfig.values,\n\t\tconfig.numColumns,\n\t);\n}\nexport function makeRotationEnumIconInput<SpecType extends Spec, T>(\n\tconfig: PlayerEnumIconInputConfig<SpecType, SpecRotation<SpecType>, T>,\n): TypedIconEnumPickerConfig<Player<SpecType>, T> {\n\treturn makeEnumIconInput<SpecType, SpecRotation<SpecType>, Player<SpecType>, T>(\n\t\t{\n\t\t\tshowWhen: config.showWhen,\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tgetValue: (player: Player<SpecType>) => player.getSimpleRotation(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: SpecRotation<SpecType>) => player.setSimpleRotation(eventID, newVal),\n\t\t\tgetFieldValue: config.getValue,\n\t\t\tsetFieldValue: config.setValue,\n\t\t\tchangeEmitter: config.changeEmitter || ((player: Player<SpecType>) => player.rotationChangeEmitter),\n\t\t\textraCssClasses: config.extraCssClasses,\n\t\t},\n\t\tconfig.fieldName,\n\t\tconfig.values,\n\t\tconfig.numColumns,\n\t);\n}\n","import { Player } from '../player';\nimport { MiscConsumes, Spec } from '../proto/common';\nimport { Consumes, Debuffs, Faction, IndividualBuffs, RaidBuffs } from '../proto/common.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { Raid } from '../raid';\nimport { EventID, TypedEvent } from '../typed_event';\nimport { IconEnumPicker, IconEnumValueConfig } from './icon_enum_picker';\nimport { IconPicker, IconPickerDirection } from './icon_picker';\nimport * as InputHelpers from './input_helpers';\n\n// Component Functions\n\nexport type IconInputConfig<ModObject, T> = InputHelpers.TypedIconPickerConfig<ModObject, T> | InputHelpers.TypedIconEnumPickerConfig<ModObject, T>;\n\nexport const buildIconInput = (parent: HTMLElement, player: Player<Spec>, inputConfig: IconInputConfig<Player<Spec>, any>) => {\n\tif (inputConfig.type == 'icon') {\n\t\treturn new IconPicker<Player<Spec>, any>(parent, player, inputConfig);\n\t} else {\n\t\treturn new IconEnumPicker<Player<Spec>, any>(parent, player, inputConfig);\n\t}\n};\n\nexport function withLabel<ModObject, T>(config: IconInputConfig<ModObject, T>, label: string): IconInputConfig<ModObject, T> {\n\tconfig.label = label;\n\treturn config;\n}\n\ninterface BooleanInputConfig<T> {\n\tactionId: (player: Player<Spec>) => ActionId | null;\n\tfieldName: keyof T;\n\tvalue?: number;\n\tshowWhen?: (player: Player<Spec>) => boolean;\n}\n\nexport function makeBooleanRaidBuffInput<SpecType extends Spec>(\n\tconfig: BooleanInputConfig<RaidBuffs>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, RaidBuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.showWhen || config.showWhen(player),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getRaid()!.getBuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: RaidBuffs) => player.getRaid()!.setBuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) =>\n\t\t\t\tTypedEvent.onAny([player.getRaid()!.buffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.fieldName,\n\t\tconfig.value,\n\t);\n}\n// export function makeBooleanPartyBuffInput<SpecType extends Spec>(config: BooleanInputConfig<PartyBuffs>): InputHelpers.TypedIconPickerConfig<Player<SpecType>, boolean> {\n// \treturn InputHelpers.makeBooleanIconInput<any, PartyBuffs, Party>({\n// \t\tgetModObject: (player: Player<SpecType>) => player.getParty()!,\n// \t\tgetValue: (party: Party) => party.getBuffs(),\n// \t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n// \t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n// \t}, config.actionId, config.fieldName, config.value);\n// }\n\nexport function makeBooleanIndividualBuffInput<SpecType extends Spec>(\n\tconfig: BooleanInputConfig<IndividualBuffs>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, IndividualBuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.showWhen || config.showWhen(player),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getBuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) => TypedEvent.onAny([player.buffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.fieldName,\n\t\tconfig.value,\n\t);\n}\n\nexport function makeBooleanConsumeInput<SpecType extends Spec>(\n\tconfig: BooleanInputConfig<Consumes>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Consumes, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.showWhen || config.showWhen(player),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getConsumes(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: Consumes) => player.setConsumes(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) =>\n\t\t\t\tTypedEvent.onAny([player.consumesChangeEmitter, player.levelChangeEmitter, player.professionChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.fieldName,\n\t\tconfig.value,\n\t);\n}\nexport function makeBooleanMiscConsumeInput<SpecType extends Spec>(\n\tconfig: BooleanInputConfig<MiscConsumes>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, MiscConsumes, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.showWhen || config.showWhen(player),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getConsumes().miscConsumes ?? MiscConsumes.create(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: MiscConsumes) => {\n\t\t\t\tconst consumes = player.getConsumes();\n\t\t\t\tconsumes.miscConsumes = newVal;\n\t\t\t\tplayer.setConsumes(eventID, consumes);\n\t\t\t},\n\t\t\tchangeEmitter: (player: Player<SpecType>) =>\n\t\t\t\tTypedEvent.onAny([player.consumesChangeEmitter, player.levelChangeEmitter, player.professionChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.fieldName,\n\t\tconfig.value,\n\t);\n}\nexport function makeBooleanDebuffInput<SpecType extends Spec>(\n\tconfig: BooleanInputConfig<Debuffs>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, boolean> {\n\treturn InputHelpers.makeBooleanIconInput<any, Debuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.showWhen || config.showWhen(player),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getRaid()!.getDebuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: Debuffs) => player.getRaid()!.setDebuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) =>\n\t\t\t\tTypedEvent.onAny([player.getRaid()!.debuffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.fieldName,\n\t\tconfig.value,\n\t);\n}\n\ninterface TristateInputConfig<T, ModObject> {\n\tactionId: (modObj: ModObject) => ActionId | null;\n\timpId: ActionId;\n\tfieldName: keyof T;\n\tshowWhen?: (modObj: ModObject) => boolean;\n}\n\nexport function makeTristateRaidBuffInput<SpecType extends Spec>(\n\tconfig: TristateInputConfig<RaidBuffs, Player<SpecType>>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, RaidBuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.showWhen || config.showWhen(player),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getRaid()!.getBuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: RaidBuffs) => player.getRaid()!.setBuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) =>\n\t\t\t\tTypedEvent.onAny([player.getRaid()!.buffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.impId,\n\t\tconfig.fieldName,\n\t);\n}\n\nexport function makeTristateIndividualBuffInput<SpecType extends Spec>(\n\tconfig: TristateInputConfig<IndividualBuffs, Player<SpecType>>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, IndividualBuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.showWhen || config.showWhen(player),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getBuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) => TypedEvent.onAny([player.buffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.impId,\n\t\tconfig.fieldName,\n\t);\n}\n\nexport function makeTristateDebuffInput<SpecType extends Spec>(\n\tconfig: TristateInputConfig<Debuffs, Player<SpecType>>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn InputHelpers.makeTristateIconInput<any, Debuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tgetValue: (player: Player<SpecType>) => player.getRaid()!.getDebuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: Debuffs) => player.getRaid()!.setDebuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) => TypedEvent.onAny([player.getRaid()!.debuffsChangeEmitter, player.levelChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.impId,\n\t\tconfig.fieldName,\n\t);\n}\n\n// function makeQuadstateDebuffInput(actionId: ActionId, impId: ActionId, impId2: ActionId, fieldName: keyof Debuffs): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n// \treturn InputHelpers.makeQuadstateIconInput<any, Debuffs, Raid>({\n// \t\tgetModObject: (player: Player<SpecType>) => player.getRaid()!,\n// \t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n// \t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n// \t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n// \t}, actionId, impId, impId2, fieldName);\n// }\n\ninterface MultiStateInputConfig<T, ModObject> {\n\tactionId: (modObj: ModObject) => ActionId | null;\n\tnumStates: number;\n\tfieldName: keyof T;\n\tmultiplier?: number;\n\treverse?: boolean;\n\tfaction?: Faction;\n}\n\nexport function makeMultistateRaidBuffInput<SpecType extends Spec>(\n\tconfig: MultiStateInputConfig<RaidBuffs, Player<SpecType>>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, RaidBuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.faction || config.faction == player.getFaction(),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getRaid()!.getBuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: RaidBuffs) => player.getRaid()!.setBuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) =>\n\t\t\t\tTypedEvent.onAny([player.getRaid()!.buffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.numStates,\n\t\tconfig.fieldName,\n\t\tconfig.multiplier,\n\t\tconfig.reverse,\n\t);\n}\n// function makeMultistatePartyBuffInput(actionId: ActionId, numStates: number, fieldName: keyof PartyBuffs): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n// \treturn InputHelpers.makeMultistateIconInput<any, PartyBuffs, Party>({\n// \t\tgetModObject: (player: Player<SpecType>) => player.getParty()!,\n// \t\tgetValue: (party: Party) => party.getBuffs(),\n// \t\tsetValue: (eventID: EventID, party: Party, newVal: PartyBuffs) => party.setBuffs(eventID, newVal),\n// \t\tchangeEmitter: (party: Party) => party.buffsChangeEmitter,\n// \t}, actionId, numStates, fieldName);\n// }\nexport function makeMultistateIndividualBuffInput<SpecType extends Spec>(\n\tconfig: MultiStateInputConfig<IndividualBuffs, Player<SpecType>>,\n): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<SpecType>>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.faction || config.faction == player.getFaction(),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getBuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) => TypedEvent.onAny([player.buffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.numStates,\n\t\tconfig.fieldName,\n\t\tconfig.multiplier,\n\t\tconfig.reverse,\n\t);\n}\n// function makeMultistateMultiplierIndividualBuffInput(actionId: ActionId, numStates: number, multiplier: number, fieldName: keyof IndividualBuffs): InputHelpers.TypedIconPickerConfig<Player<SpecType>, number> {\n// \treturn InputHelpers.makeMultistateIconInput<any, IndividualBuffs, Player<SpecType>>({\n// \t\tgetModObject: (player: Player<SpecType>) => player,\n// \t\tgetValue: (player: Player<SpecType>) => player.getBuffs(),\n// \t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n// \t\tchangeEmitter: (player: Player<SpecType>) => player.buffsChangeEmitter,\n// \t}, actionId, numStates, fieldName, multiplier);\n// }\n\nexport function makeMultistateMultiplierDebuffInput(config: MultiStateInputConfig<Debuffs, Raid>): InputHelpers.TypedIconPickerConfig<Player<any>, number> {\n\treturn InputHelpers.makeMultistateIconInput<any, Debuffs, Raid>(\n\t\t{\n\t\t\tgetModObject: (player: Player<any>) => player.getRaid()!,\n\t\t\tgetValue: (raid: Raid) => raid.getDebuffs(),\n\t\t\tsetValue: (eventID: EventID, raid: Raid, newVal: Debuffs) => raid.setDebuffs(eventID, newVal),\n\t\t\tchangeEmitter: (raid: Raid) => raid.debuffsChangeEmitter,\n\t\t},\n\t\tconfig.actionId,\n\t\tconfig.numStates,\n\t\tconfig.fieldName,\n\t\tconfig.multiplier,\n\t\tconfig.reverse,\n\t);\n}\n\ninterface EnumInputConfig<ModObject, Message, T> {\n\tfieldName: keyof Message;\n\tvalues: Array<IconEnumValueConfig<ModObject, T>>;\n\tdirection?: IconPickerDirection;\n\tnumColumns?: number;\n\tfaction?: Faction;\n}\n\nexport function makeEnumIndividualBuffInput<SpecType extends Spec>(\n\tconfig: EnumInputConfig<Player<SpecType>, IndividualBuffs, number>,\n): InputHelpers.TypedIconEnumPickerConfig<Player<SpecType>, number> {\n\treturn InputHelpers.makeEnumIconInput<any, IndividualBuffs, Player<SpecType>, number>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tshowWhen: (player: Player<SpecType>) => !config.faction || config.faction == player.getFaction(),\n\t\t\tgetValue: (player: Player<SpecType>) => player.getBuffs(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: IndividualBuffs) => player.setBuffs(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) => TypedEvent.onAny([player.buffsChangeEmitter, player.levelChangeEmitter, player.raceChangeEmitter]),\n\t\t},\n\t\tconfig.fieldName,\n\t\tconfig.values,\n\t\tconfig.numColumns,\n\t\tconfig.direction || IconPickerDirection.Vertical,\n\t);\n}\n\nexport function makeEnumConsumeInput<SpecType extends Spec>(\n\tconfig: EnumInputConfig<Player<SpecType>, Consumes, number>,\n): InputHelpers.TypedIconEnumPickerConfig<Player<SpecType>, number> {\n\treturn InputHelpers.makeEnumIconInput<any, Consumes, Player<SpecType>, number>(\n\t\t{\n\t\t\tgetModObject: (player: Player<SpecType>) => player,\n\t\t\tgetValue: (player: Player<SpecType>) => player.getConsumes(),\n\t\t\tsetValue: (eventID: EventID, player: Player<SpecType>, newVal: Consumes) => player.setConsumes(eventID, newVal),\n\t\t\tchangeEmitter: (player: Player<SpecType>) => TypedEvent.onAny([player.consumesChangeEmitter, player.levelChangeEmitter]),\n\t\t},\n\t\tconfig.fieldName,\n\t\tconfig.values,\n\t\tconfig.numColumns,\n\t\tconfig.direction || IconPickerDirection.Vertical,\n\t);\n}\n","import { Player } from '../player.js';\nimport { ActionId } from '../proto_utils/action_id.js';\nimport { SimUI } from '../sim_ui.js';\nimport { TypedEvent } from '../typed_event.js';\nimport { isRightClick } from '../utils.js';\nimport { Component } from './component.js';\nimport { IconPicker, IconPickerConfig, IconPickerDirection } from './icon_picker.js';\n\nexport interface MultiIconPickerItemConfig<ModObject> extends IconPickerConfig<ModObject, any> {}\n\nexport interface MultiIconPickerConfig<ModObject> {\n\tinputs: Array<MultiIconPickerItemConfig<ModObject>>;\n\tlabel?: string;\n\tcategoryId?: ActionId;\n\t// The direction the menu will open in relative to the root element\n\tdirection?: IconPickerDirection;\n\tshowWhen?: (obj: Player<any>) => boolean;\n}\n\n// Icon-based UI for a dropdown with multiple icon pickers.\n// ModObject is the object being modified (Sim, Player, or Target).\nexport class MultiIconPicker<ModObject> extends Component {\n\tprotected simUI: SimUI;\n\n\tprivate readonly config: MultiIconPickerConfig<ModObject>;\n\tprivate readonly pickers: Array<IconPicker<ModObject, any>>;\n\tprivate currentValue: ActionId | null;\n\n\tprivate readonly buttonElem: HTMLAnchorElement;\n\tprivate readonly dropdownMenu: HTMLElement;\n\n\tconstructor(parent: HTMLElement, modObj: ModObject, config: MultiIconPickerConfig<ModObject>, simUI: SimUI) {\n\t\tsuper(parent, 'multi-icon-picker-root');\n\t\tthis.rootElem.classList.add('icon-picker', (config.direction ?? IconPickerDirection.Horizontal) === 'vertical' ? 'dropdown' : 'dropend');\n\n\t\tthis.simUI = simUI;\n\t\tthis.config = config;\n\t\tthis.currentValue = null;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<a\n\t\t\t\tclass=\"icon-picker-button\"\n\t\t\t\trole=\"button\"\n\t\t\t\tdata-bs-toggle=\"dropdown\"\n\t\t\t\taria-expanded=\"false\"\n\t\t\t\tdata-disable-wowhead-touch-tooltip=\"true\"\n\t\t\t\tdata-whtticon=\"false\"\n\t\t\t></a>\n\t\t\t<ul class=\"dropdown-menu\"></ul>\n\t\t\t<label class=\"multi-icon-picker-label form-label\"></label>\n\t    `;\n\n\t\tconst labelElem = this.rootElem.querySelector('.multi-icon-picker-label') as HTMLElement;\n\t\tif (config.label) {\n\t\t\tlabelElem.textContent = config.label;\n\t\t} else {\n\t\t\tlabelElem.remove();\n\t\t}\n\n\t\tthis.buttonElem = this.rootElem.querySelector('.icon-picker-button') as HTMLAnchorElement;\n\t\tthis.dropdownMenu = this.rootElem.querySelector('.dropdown-menu') as HTMLElement;\n\n\t\tif (this.config.direction == IconPickerDirection.Horizontal) {\n\t\t\tthis.dropdownMenu.style.gridAutoFlow = 'column';\n\t\t}\n\n\t\tthis.buttonElem.addEventListener('hide.bs.dropdown', event => {\n\t\t\tif (event.hasOwnProperty('clickEvent')) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t});\n\n\t\tthis.buttonElem.addEventListener('contextmenu', event => event.preventDefault());\n\n\t\tthis.buttonElem.addEventListener('mousedown', event => {\n\t\t\tif (isRightClick(event)) {\n\t\t\t\tthis.clearPicker();\n\t\t\t}\n\t\t});\n\n\t\tthis.buildBlankOption();\n\n\t\tthis.pickers = this.config.inputs.map((pickerConfig, _) => {\n\t\t\tconst optionContainer = document.createElement('li');\n\t\t\toptionContainer.classList.add('icon-picker-option', 'dropdown-option');\n\t\t\tthis.dropdownMenu.appendChild(optionContainer);\n\n\t\t\treturn new IconPicker(optionContainer, modObj, pickerConfig);\n\t\t});\n\t\tsimUI.sim.waitForInit().then(() => this.updateButtonImage());\n\t\tsimUI.changeEmitter.on(() => {\n\t\t\tthis.updateButtonImage();\n\n\t\t\tif (this.showWhen()) {\n\t\t\t\tthis.rootElem.classList.remove('hide');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide');\n\t\t\t}\n\t\t});\n\t}\n\n\tshowWhen(): boolean {\n\t\treturn !this.config.showWhen || (this.config.showWhen(this.simUI.sim.raid.getPlayer(0)!) && !!this.pickers.find(p => p.showWhen()));\n\t}\n\n\tprivate buildBlankOption() {\n\t\tconst listItem = document.createElement('li');\n\t\tthis.dropdownMenu.appendChild(listItem);\n\n\t\tconst option = document.createElement('a');\n\t\toption.classList.add('icon-dropdown-option', 'dropdown-option');\n\t\tlistItem.appendChild(option);\n\n\t\toption.addEventListener('click', () => this.clearPicker());\n\t}\n\n\tprivate clearPicker() {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.pickers.forEach(picker => {\n\t\t\t\tpicker.setInputValue(null);\n\t\t\t\tpicker.inputChanged(TypedEvent.nextEventID());\n\t\t\t});\n\t\t\tthis.updateButtonImage();\n\t\t});\n\t}\n\n\tprivate updateButtonImage() {\n\t\tthis.currentValue = this.getMaxValue();\n\n\t\tif (this.currentValue) {\n\t\t\tthis.buttonElem.classList.add('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.currentValue.fillAndSet(this.buttonElem, false, true);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.buttonElem.classList.remove('active');\n\t\t\tif (this.config.categoryId != null) {\n\t\t\t\tthis.config.categoryId.fillAndSet(this.buttonElem, false, true);\n\t\t\t} else {\n\t\t\t\tthis.buttonElem.style.backgroundImage = '';\n\t\t\t}\n\t\t\tthis.buttonElem.removeAttribute('href');\n\t\t}\n\t}\n\n\tprivate getMaxValue(): ActionId | null {\n\t\treturn this.pickers.map(picker => picker.getActionId()).filter(id => id != null)[0] || null;\n\t}\n}\n","import { Faction, SaygesFortune, Stat } from '../../proto/common';\nimport { ActionId } from '../../proto_utils/action_id';\nimport {\n\tmakeBooleanDebuffInput,\n\tmakeBooleanIndividualBuffInput,\n\tmakeBooleanRaidBuffInput,\n\tmakeEnumIndividualBuffInput,\n\tmakeMultistateIndividualBuffInput,\n\tmakeMultistateMultiplierDebuffInput,\n\tmakeMultistateRaidBuffInput,\n\tmakeTristateDebuffInput,\n\tmakeTristateIndividualBuffInput,\n\tmakeTristateRaidBuffInput,\n\twithLabel,\n} from '../icon_inputs';\nimport { IconPicker, IconPickerDirection } from '../icon_picker';\nimport * as InputHelpers from '../input_helpers';\nimport { MultiIconPicker } from '../multi_icon_picker';\nimport { ItemStatOption, PickerStatOptions } from './stat_options';\n\n///////////////////////////////////////////////////////////////////////////\n//                                 RAID BUFFS\n///////////////////////////////////////////////////////////////////////////\n\nexport const AllStatsBuff = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 1126, maxLevel: 9 },\n\t\t\t\t{ id: 5232, minLevel: 10, maxLevel: 19 },\n\t\t\t\t{ id: 6756, minLevel: 20, maxLevel: 29 },\n\t\t\t\t{ id: 5234, minLevel: 30, maxLevel: 39 },\n\t\t\t\t{ id: 8907, minLevel: 40, maxLevel: 49 },\n\t\t\t\t{ id: 9884, minLevel: 50, maxLevel: 59 },\n\t\t\t\t{ id: 9885, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(17055),\n\t\tfieldName: 'giftOfTheWild',\n\t}),\n\t'Mark of the Wild',\n);\n\n// Separate Strength buffs allow us to use a boolean pickers for Horde specifically\nexport const AllStatsPercentBuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeBooleanIndividualBuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(20217),\n\t\t\tfieldName: 'blessingOfKings',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(409580),\n\t\t\tfieldName: 'aspectOfTheLion',\n\t\t}),\n\t],\n\t'Stats %',\n);\n\nexport const ArmorBuff = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 465, maxLevel: 9 },\n\t\t\t\t{ id: 10290, minLevel: 10, maxLevel: 19 },\n\t\t\t\t{ id: 643, minLevel: 20, maxLevel: 29 },\n\t\t\t\t{ id: 10291, minLevel: 30, maxLevel: 39 },\n\t\t\t\t{ id: 1032, minLevel: 40, maxLevel: 49 },\n\t\t\t\t{ id: 10292, minLevel: 50, maxLevel: 59 },\n\t\t\t\t{ id: 10293, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(20142),\n\t\tfieldName: 'devotionAura',\n\t}),\n\t'Armor',\n);\n\nexport const StaminaBuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeTristateRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 1243, maxLevel: 11 },\n\t\t\t\t\t{ id: 1244, minLevel: 12, maxLevel: 23 },\n\t\t\t\t\t{ id: 1245, minLevel: 24, maxLevel: 35 },\n\t\t\t\t\t{ id: 2791, minLevel: 36, maxLevel: 47 },\n\t\t\t\t\t{ id: 10937, minLevel: 48, maxLevel: 60 },\n\t\t\t\t\t{ id: 10938, minLevel: 60 },\n\t\t\t\t]),\n\t\t\timpId: ActionId.fromSpellId(14767),\n\t\t\tfieldName: 'powerWordFortitude',\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingItemActionId([\n\t\t\t\t\t{ id: 1180, minLevel: 5, maxLevel: 19 },\n\t\t\t\t\t{ id: 1711, minLevel: 20, maxLevel: 34 },\n\t\t\t\t\t{ id: 4422, minLevel: 35, maxLevel: 49 },\n\t\t\t\t\t{ id: 10307, minLevel: 50 },\n\t\t\t\t]),\n\t\t\tfieldName: 'scrollOfStamina',\n\t\t}),\n\t],\n\t'Stamina',\n);\n\nexport const BloodPactBuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeTristateRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 6307, minLevel: 4, maxLevel: 13 },\n\t\t\t\t\t{ id: 7804, minLevel: 14, maxLevel: 25 },\n\t\t\t\t\t{ id: 7805, minLevel: 26, maxLevel: 37 },\n\t\t\t\t\t{ id: 11766, minLevel: 38, maxLevel: 49 },\n\t\t\t\t\t{ id: 11767, minLevel: 50 },\n\t\t\t\t]),\n\t\t\timpId: ActionId.fromSpellId(18696),\n\t\t\tfieldName: 'bloodPact',\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(403215),\n\t\t\tfieldName: 'commandingShout',\n\t\t}),\n\t],\n\t'BloodPact',\n);\n\n// Separate Strength buffs allow us to use boolean pickers for each\nexport const PaladinPhysicalBuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeTristateIndividualBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 19740, minLevel: 4, maxLevel: 11 },\n\t\t\t\t\t{ id: 19834, minLevel: 12, maxLevel: 21 },\n\t\t\t\t\t{ id: 19835, minLevel: 22, maxLevel: 31 },\n\t\t\t\t\t{ id: 19836, minLevel: 32, maxLevel: 41 },\n\t\t\t\t\t{ id: 19837, minLevel: 42, maxLevel: 51 },\n\t\t\t\t\t{ id: 19838, minLevel: 52, maxLevel: 59 },\n\t\t\t\t\t{ id: 25291, minLevel: 60 },\n\t\t\t\t]),\n\t\t\timpId: ActionId.fromSpellId(20048),\n\t\t\tfieldName: 'blessingOfMight',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(425600),\n\t\t\tfieldName: 'hornOfLordaeron',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t\t}),\n\t],\n\t'Paladin Physical',\n);\n\nexport const StrengthBuffHorde = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 8075, minLevel: 10, maxLevel: 23 },\n\t\t\t\t{ id: 8160, minLevel: 24, maxLevel: 37 },\n\t\t\t\t{ id: 8161, minLevel: 38, maxLevel: 51 },\n\t\t\t\t{ id: 10442, minLevel: 52, maxLevel: 59 },\n\t\t\t\t{ id: 25361, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(16295),\n\t\tfieldName: 'strengthOfEarthTotem',\n\t\tshowWhen: player => player.getFaction() == Faction.Horde,\n\t}),\n\t'Strength',\n);\n\nexport const GraceOfAir = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 8835, minLevel: 42, maxLevel: 55 },\n\t\t\t\t{ id: 10627, minLevel: 56, maxLevel: 59 },\n\t\t\t\t{ id: 25359, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(16295),\n\t\tfieldName: 'graceOfAirTotem',\n\t\tshowWhen: player => player.getFaction() == Faction.Horde,\n\t}),\n\t'Agility',\n);\n\nexport const IntellectBuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 1459, maxLevel: 13 },\n\t\t\t\t\t{ id: 1460, minLevel: 14, maxLevel: 27 },\n\t\t\t\t\t{ id: 1461, minLevel: 28, maxLevel: 41 },\n\t\t\t\t\t{ id: 10156, minLevel: 42, maxLevel: 55 },\n\t\t\t\t\t{ id: 10157, minLevel: 56 },\n\t\t\t\t]),\n\t\t\tfieldName: 'arcaneBrilliance',\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingItemActionId([\n\t\t\t\t\t{ id: 955, minLevel: 5, maxLevel: 19 },\n\t\t\t\t\t{ id: 2290, minLevel: 20, maxLevel: 34 },\n\t\t\t\t\t{ id: 4419, minLevel: 35, maxLevel: 49 },\n\t\t\t\t\t{ id: 10308, minLevel: 50 },\n\t\t\t\t]),\n\t\t\tfieldName: 'scrollOfIntellect',\n\t\t}),\n\t],\n\t'Intellect',\n);\n\nexport const SpiritBuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 14752, minLevel: 30, maxLevel: 39 },\n\t\t\t\t\t{ id: 14818, minLevel: 40, maxLevel: 49 },\n\t\t\t\t\t{ id: 14819, minLevel: 50, maxLevel: 59 },\n\t\t\t\t\t{ id: 27841, minLevel: 60 },\n\t\t\t\t]),\n\t\t\tfieldName: 'divineSpirit',\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingItemActionId([\n\t\t\t\t\t{ id: 1181, maxLevel: 14 },\n\t\t\t\t\t{ id: 1712, minLevel: 15, maxLevel: 29 },\n\t\t\t\t\t{ id: 4424, minLevel: 30, maxLevel: 44 },\n\t\t\t\t\t{ id: 10306, minLevel: 45 },\n\t\t\t\t]),\n\t\t\tfieldName: 'scrollOfSpirit',\n\t\t}),\n\t],\n\t'Spirit',\n);\n\nexport const BattleShoutBuff = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 6673, maxLevel: 11 },\n\t\t\t\t{ id: 5242, minLevel: 12, maxLevel: 21 },\n\t\t\t\t{ id: 6192, minLevel: 22, maxLevel: 31 },\n\t\t\t\t{ id: 11549, minLevel: 32, maxLevel: 41 },\n\t\t\t\t{ id: 11550, minLevel: 42, maxLevel: 51 },\n\t\t\t\t{ id: 11551, minLevel: 52, maxLevel: 59 },\n\t\t\t\t{ id: 25289, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(12861),\n\t\tfieldName: 'battleShout',\n\t}),\n\t'Battle Shout',\n);\n\nexport const TrueshotAuraBuff = withLabel(\n\tmakeBooleanRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 19506, minLevel: 40, maxLevel: 49 },\n\t\t\t\t{ id: 20905, minLevel: 50, maxLevel: 59 },\n\t\t\t\t{ id: 20906, minLevel: 60 },\n\t\t\t]),\n\t\tfieldName: 'trueshotAura',\n\t}),\n\t'Trueshot Aura',\n);\n\nexport const BattleSquawkBuff = withLabel(\n\tmakeMultistateRaidBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 23060, minLevel: 40 }]),\n\t\tnumStates: 6,\n\t\tfieldName: 'battleSquawk',\n\t}),\n\t'Battle Squawk',\n);\n\n// export const AttackPowerPercentBuff = InputHelpers.makeMultiIconInput([\n// ], 'Attack Power %', 1, 40);\n\nexport const DamageReductionPercentBuff = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 20911, minLevel: 30, maxLevel: 39 },\n\t\t\t\t{ id: 20912, minLevel: 40, maxLevel: 49 },\n\t\t\t\t{ id: 20913, minLevel: 50, maxLevel: 59 },\n\t\t\t\t{ id: 20914, minLevel: 60 },\n\t\t\t]),\n\t\tfieldName: 'blessingOfSanctuary',\n\t}),\n\t'Blessing of Sanctuary',\n);\n\nexport const ResistanceBuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\t// Shadow\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 976, minLevel: 30, maxLevel: 41 },\n\t\t\t\t\t{ id: 10957, minLevel: 42, maxLevel: 55 },\n\t\t\t\t\t{ id: 10958, minLevel: 56 },\n\t\t\t\t]),\n\t\t\tfieldName: 'shadowProtection',\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 19876, minLevel: 28, maxLevel: 39 },\n\t\t\t\t\t{ id: 19895, minLevel: 40, maxLevel: 51 },\n\t\t\t\t\t{ id: 19896, minLevel: 52 },\n\t\t\t\t]),\n\t\t\tfieldName: 'shadowResistanceAura',\n\t\t}),\n\t\t// Nature\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 10595, minLevel: 30, maxLevel: 43 },\n\t\t\t\t\t{ id: 10600, minLevel: 44, maxLevel: 59 },\n\t\t\t\t\t{ id: 10601, minLevel: 60 },\n\t\t\t\t]),\n\t\t\tfieldName: 'natureResistanceTotem',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Horde,\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 20043, minLevel: 46, maxLevel: 55 },\n\t\t\t\t\t{ id: 20190, minLevel: 56 },\n\t\t\t\t]),\n\t\t\tfieldName: 'aspectOfTheWild',\n\t\t}),\n\t\t// Fire\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 19891, minLevel: 36, maxLevel: 47 },\n\t\t\t\t\t{ id: 19899, minLevel: 48, maxLevel: 59 },\n\t\t\t\t\t{ id: 19900, minLevel: 60 },\n\t\t\t\t]),\n\t\t\tfieldName: 'fireResistanceAura',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 8184, minLevel: 28, maxLevel: 41 },\n\t\t\t\t\t{ id: 10537, minLevel: 42, maxLevel: 57 },\n\t\t\t\t\t{ id: 10538, minLevel: 58 },\n\t\t\t\t]),\n\t\t\tfieldName: 'fireResistanceTotem',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Horde,\n\t\t}),\n\t\t// Frost\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 19888, minLevel: 32, maxLevel: 43 },\n\t\t\t\t\t{ id: 19897, minLevel: 44, maxLevel: 55 },\n\t\t\t\t\t{ id: 19898, minLevel: 56 },\n\t\t\t\t]),\n\t\t\tfieldName: 'frostResistanceAura',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t\t}),\n\t\tmakeBooleanRaidBuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 8181, minLevel: 24, maxLevel: 37 },\n\t\t\t\t\t{ id: 10478, minLevel: 38, maxLevel: 53 },\n\t\t\t\t\t{ id: 10479, minLevel: 54 },\n\t\t\t\t]),\n\t\t\tfieldName: 'frostResistanceTotem',\n\t\t\tshowWhen: player => player.getFaction() == Faction.Horde,\n\t\t}),\n\t],\n\t'Resistances',\n);\n\nexport const BlessingOfWisdom = withLabel(\n\tmakeTristateIndividualBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 19742, minLevel: 14, maxLevel: 23 },\n\t\t\t\t{ id: 19850, minLevel: 24, maxLevel: 33 },\n\t\t\t\t{ id: 19852, minLevel: 34, maxLevel: 43 },\n\t\t\t\t{ id: 19853, minLevel: 44, maxLevel: 53 },\n\t\t\t\t{ id: 19854, minLevel: 54, maxLevel: 59 },\n\t\t\t\t{ id: 25290, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(20245),\n\t\tfieldName: 'blessingOfWisdom',\n\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t}),\n\t'Blessing of Wisdom',\n);\n\nexport const ManaSpringTotem = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 5675, minLevel: 26, maxLevel: 35 },\n\t\t\t\t{ id: 10495, minLevel: 36, maxLevel: 45 },\n\t\t\t\t{ id: 10496, minLevel: 46, maxLevel: 55 },\n\t\t\t\t{ id: 10497, minLevel: 56 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(16208),\n\t\tfieldName: 'manaSpringTotem',\n\t\tshowWhen: player => player.getFaction() == Faction.Horde,\n\t}),\n\t'Mana Spring Totem',\n);\n\nexport const MeleeCritBuff = withLabel(\n\tmakeBooleanRaidBuffInput({ actionId: player => player.getMatchingSpellActionId([{ id: 17007, minLevel: 40 }]), fieldName: 'leaderOfThePack' }),\n\t'Leader of the Pack',\n);\n\nexport const SpellCritBuff = withLabel(\n\tmakeBooleanRaidBuffInput({ actionId: player => player.getMatchingSpellActionId([{ id: 24907, minLevel: 40 }]), fieldName: 'moonkinAura' }),\n\t'Moonkin Aura',\n);\n\nexport const SpellIncreaseBuff = withLabel(\n\tmakeMultistateRaidBuffInput({ actionId: () => ActionId.fromSpellId(425464), numStates: 21, fieldName: 'demonicPact', multiplier: 10 }),\n\t'Demonic Pact',\n);\n\n// export const DefensiveCooldownBuff = InputHelpers.makeMultiIconInput([\n// ], 'Defensive CDs');\n\n// Misc Buffs\nexport const RetributionAura = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 7294, minLevel: 16, maxLevel: 25 },\n\t\t\t\t{ id: 10298, minLevel: 26, maxLevel: 35 },\n\t\t\t\t{ id: 10299, minLevel: 36, maxLevel: 45 },\n\t\t\t\t{ id: 10300, minLevel: 46, maxLevel: 55 },\n\t\t\t\t{ id: 10301, minLevel: 56 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(20092),\n\t\tfieldName: 'retributionAura',\n\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t}),\n\t'Retribution Aura',\n);\nexport const SanctityAura = withLabel(\n\tmakeBooleanRaidBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 20218, minLevel: 30 }]),\n\t\tfieldName: 'sanctityAura',\n\t}),\n\t'Sanctity Aura',\n);\nexport const Thorns = withLabel(\n\tmakeTristateRaidBuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 467, minLevel: 6, maxLevel: 13 },\n\t\t\t\t{ id: 782, minLevel: 14, maxLevel: 23 },\n\t\t\t\t{ id: 1075, minLevel: 24, maxLevel: 33 },\n\t\t\t\t{ id: 8914, minLevel: 34, maxLevel: 43 },\n\t\t\t\t{ id: 9756, minLevel: 44, maxLevel: 53 },\n\t\t\t\t{ id: 9910, minLevel: 54 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(16840),\n\t\tfieldName: 'thorns',\n\t}),\n\t'Thorns',\n);\nexport const Innervate = withLabel(\n\tmakeMultistateIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 29166, minLevel: 40 }]),\n\t\tnumStates: 11,\n\t\tfieldName: 'innervates',\n\t}),\n\t'Innervate',\n);\nexport const PowerInfusion = withLabel(\n\tmakeMultistateIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 10060, minLevel: 40 }]),\n\t\tnumStates: 11,\n\t\tfieldName: 'powerInfusions',\n\t}),\n\t'Power Infusion',\n);\n\n///////////////////////////////////////////////////////////////////////////\n//                                 WORLD BUFFS\n///////////////////////////////////////////////////////////////////////////\n\nexport const RallyingCryOfTheDragonslayer = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 22888, minLevel: 51 }]),\n\t\tfieldName: 'rallyingCryOfTheDragonslayer',\n\t}),\n\t'Rallying Cry of the Dragonslayer',\n);\nexport const SpiritOfZandalar = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 24425, minLevel: 51 }]),\n\t\tfieldName: 'spiritOfZandalar',\n\t}),\n\t'Spirit of Zandalar',\n);\nexport const SongflowerSerenade = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 15366, minLevel: 50 }]),\n\t\tfieldName: 'songflowerSerenade',\n\t}),\n\t'Songflower Serenade',\n);\nexport const WarchiefsBlessing = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 16609, minLevel: 51 }]),\n\t\tfieldName: 'warchiefsBlessing',\n\t}),\n\t`Warchief's Blessing`,\n);\n\nexport const SaygesDarkFortune = (inputs: ItemStatOption<SaygesFortune>[]) =>\n\tmakeEnumIndividualBuffInput({\n\t\tdirection: IconPickerDirection.Horizontal,\n\t\tvalues: [\n\t\t\t{ iconUrl: 'https://wow.zamimg.com/images/wow/icons/large/inv_misc_orb_02.jpg', value: SaygesFortune.SaygesUnknown, text: `Sayge's Dark Fortune` },\n\t\t\t...inputs.map(input => input.config),\n\t\t],\n\t\tfieldName: 'saygesFortune',\n\t});\n\nexport const SaygesDamage = { actionId: () => ActionId.fromSpellId(23768), value: SaygesFortune.SaygesDamage, text: `Sayge's Damage` };\nexport const SaygesAgility = { actionId: () => ActionId.fromSpellId(23736), value: SaygesFortune.SaygesAgility, text: `Sayge's Agility` };\nexport const SaygesIntellect = { actionId: () => ActionId.fromSpellId(23766), value: SaygesFortune.SaygesIntellect, text: `Sayge's Intellect` };\nexport const SaygesSpirit = { actionId: () => ActionId.fromSpellId(23738), value: SaygesFortune.SaygesSpirit, text: `Sayge's Spirit` };\nexport const SaygesStamina = { actionId: () => ActionId.fromSpellId(23737), value: SaygesFortune.SaygesStamina, text: `Sayge's Stamina` };\n\n// Dire Maul Buffs\nexport const FengusFerocity = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 22817, minLevel: 51 }]),\n\t\tfieldName: 'fengusFerocity',\n\t}),\n\t`Fengus' Ferocity`,\n);\nexport const MoldarsMoxie = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 22818, minLevel: 51 }]),\n\t\tfieldName: 'moldarsMoxie',\n\t}),\n\t`Moldar's Moxie`,\n);\nexport const SlipKiksSavvy = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 22820, minLevel: 51 }]),\n\t\tfieldName: 'slipkiksSavvy',\n\t}),\n\t`Slip'kik's Savvy`,\n);\n\n// SoD World Buffs\nexport const BoonOfBlackfathom = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 430947, maxLevel: 39 }]),\n\t\tfieldName: 'boonOfBlackfathom',\n\t}),\n\t'Boon of Blackfathom',\n);\n\nexport const AshenvalePvpBuff = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 430352, maxLevel: 39 }]),\n\t\tfieldName: 'ashenvalePvpBuff',\n\t}),\n\t'Ashenvale PvP Buff',\n);\n\nexport const SparkOfInspiration = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 438536, maxLevel: 49 }]),\n\t\tfieldName: 'sparkOfInspiration',\n\t}),\n\t'Spark of Inspiration',\n);\n\nexport const FervorOfTheTempleExplorer = withLabel(\n\tmakeBooleanIndividualBuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 446695, maxLevel: 59 }]),\n\t\tfieldName: 'fervorOfTheTempleExplorer',\n\t}),\n\t'Fervor Of The Temple Explorer',\n);\n\n///////////////////////////////////////////////////////////////////////////\n//                                 DEBUFFS\n///////////////////////////////////////////////////////////////////////////\n\nexport const MajorArmorDebuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeBooleanDebuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 7386, minLevel: 10, maxLevel: 21 },\n\t\t\t\t\t{ id: 7405, minLevel: 22, maxLevel: 33 },\n\t\t\t\t\t{ id: 8380, minLevel: 34, maxLevel: 45 },\n\t\t\t\t\t{ id: 11596, minLevel: 46, maxLevel: 57 },\n\t\t\t\t\t{ id: 11597, minLevel: 58 },\n\t\t\t\t]),\n\t\t\tfieldName: 'sunderArmor',\n\t\t}),\n\t\tmakeTristateDebuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 8647, minLevel: 14, maxLevel: 25 },\n\t\t\t\t\t{ id: 8649, minLevel: 26, maxLevel: 35 },\n\t\t\t\t\t{ id: 8650, minLevel: 36, maxLevel: 45 },\n\t\t\t\t\t{ id: 11197, minLevel: 46, maxLevel: 55 },\n\t\t\t\t\t{ id: 11198, minLevel: 56 },\n\t\t\t\t]),\n\t\t\timpId: ActionId.fromSpellId(14169),\n\t\t\tfieldName: 'exposeArmor',\n\t\t}),\n\t\tmakeMultistateMultiplierDebuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(402818),\n\t\t\tnumStates: 11,\n\t\t\tmultiplier: 10,\n\t\t\treverse: true,\n\t\t\tfieldName: 'homunculi',\n\t\t}),\n\t],\n\t'Major Armor Penetration',\n);\n\nexport const CurseOfRecklessness = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 704, minLevel: 14, maxLevel: 27 },\n\t\t\t\t{ id: 7658, minLevel: 28, maxLevel: 41 },\n\t\t\t\t{ id: 7659, minLevel: 42, maxLevel: 55 },\n\t\t\t\t{ id: 11717, minLevel: 56 },\n\t\t\t]),\n\t\tfieldName: 'curseOfRecklessness',\n\t}),\n\t'Curse of Recklessness',\n);\n\nexport const FaerieFire = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 770, minLevel: 18, maxLevel: 29 },\n\t\t\t\t{ id: 778, minLevel: 30, maxLevel: 41 },\n\t\t\t\t{ id: 9749, minLevel: 42, maxLevel: 53 },\n\t\t\t\t{ id: 9907, minLevel: 54 },\n\t\t\t]),\n\t\tfieldName: 'faerieFire',\n\t}),\n\t'Faerie Fire',\n);\n\nexport const curseOfWeaknessDebuff = withLabel(\n\tmakeTristateDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 702, minLevel: 4, maxLevel: 11 },\n\t\t\t\t{ id: 1108, minLevel: 12, maxLevel: 21 },\n\t\t\t\t{ id: 6205, minLevel: 22, maxLevel: 31 },\n\t\t\t\t{ id: 6205, minLevel: 22, maxLevel: 31 },\n\t\t\t\t{ id: 7646, minLevel: 32, maxLevel: 41 },\n\t\t\t\t{ id: 11707, minLevel: 42, maxLevel: 51 },\n\t\t\t\t{ id: 11708, minLevel: 52 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(18181),\n\t\tfieldName: 'curseOfWeakness',\n\t}),\n\t'Curse of Weakness',\n);\n\nexport const AttackPowerDebuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeTristateDebuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 1160, minLevel: 14, maxLevel: 23 },\n\t\t\t\t\t{ id: 6190, minLevel: 24, maxLevel: 33 },\n\t\t\t\t\t{ id: 11554, minLevel: 34, maxLevel: 43 },\n\t\t\t\t\t{ id: 11555, minLevel: 44, maxLevel: 53 },\n\t\t\t\t\t{ id: 11556, minLevel: 54 },\n\t\t\t\t]),\n\t\t\timpId: ActionId.fromSpellId(12879),\n\t\t\tfieldName: 'demoralizingShout',\n\t\t}),\n\t\tmakeTristateDebuffInput({\n\t\t\tactionId: player =>\n\t\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t\t{ id: 99, minLevel: 10, maxLevel: 19 },\n\t\t\t\t\t{ id: 1735, minLevel: 20, maxLevel: 31 },\n\t\t\t\t\t{ id: 9490, minLevel: 32, maxLevel: 41 },\n\t\t\t\t\t{ id: 9747, minLevel: 42, maxLevel: 51 },\n\t\t\t\t\t{ id: 9898, minLevel: 52 },\n\t\t\t\t]),\n\t\t\timpId: ActionId.fromSpellId(16862),\n\t\t\tfieldName: 'demoralizingRoar',\n\t\t}),\n\t\tmakeMultistateMultiplierDebuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(402811),\n\t\t\tnumStates: 11,\n\t\t\tmultiplier: 10,\n\t\t\treverse: true,\n\t\t\tfieldName: 'homunculi',\n\t\t}),\n\t],\n\t'Attack Power',\n);\n\n// TODO: SoD Mangle\nexport const BleedDebuff = withLabel(makeBooleanDebuffInput({ actionId: () => ActionId.fromSpellId(409828), fieldName: 'mangle' }), 'Bleed');\n\nexport const MeleeAttackSpeedDebuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeTristateDebuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(6343),\n\t\t\timpId: ActionId.fromSpellId(12666),\n\t\t\tfieldName: 'thunderClap',\n\t\t}),\n\t\tmakeMultistateMultiplierDebuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(402808),\n\t\t\tnumStates: 11,\n\t\t\tmultiplier: 10,\n\t\t\treverse: true,\n\t\t\tfieldName: 'homunculi',\n\t\t}),\n\t\tmakeBooleanDebuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(408699),\n\t\t\tfieldName: 'waylay',\n\t\t}),\n\t],\n\t'Thunder Clap',\n);\n\nexport const MeleeHitDebuff = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 5570, minLevel: 20, maxLevel: 29 },\n\t\t\t\t{ id: 24974, minLevel: 30, maxLevel: 39 },\n\t\t\t\t{ id: 24975, minLevel: 40, maxLevel: 49 },\n\t\t\t\t{ id: 24976, minLevel: 50, maxLevel: 59 },\n\t\t\t\t{ id: 24977, minLevel: 60 },\n\t\t\t]),\n\t\tfieldName: 'insectSwarm',\n\t}),\n\t'Insect Swarm',\n);\n\n// TODO: Classic\nexport const SpellISBDebuff = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 17803, minLevel: 10 }]),\n\t\tfieldName: 'improvedShadowBolt',\n\t}),\n\t'Improved Shadow Bolt',\n);\n\nexport const SpellScorchDebuff = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 12873, minLevel: 40 }]),\n\t\tfieldName: 'improvedScorch',\n\t}),\n\t'Fire Damage',\n);\n\nexport const SpellWintersChillDebuff = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 12579, minLevel: 40 }]),\n\t\tfieldName: 'wintersChill',\n\t}),\n\t'Frost Damage',\n);\n\nexport const NatureSpellDamageDebuff = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeBooleanDebuffInput({\n\t\t\tactionId: player => player.getMatchingSpellActionId([{ id: 17364, minLevel: 40 }]),\n\t\t\tfieldName: 'stormstrike',\n\t\t}),\n\t\tmakeBooleanDebuffInput({\n\t\t\tactionId: () => ActionId.fromSpellId(408258),\n\t\t\tfieldName: 'dreamstate',\n\t\t}),\n\t],\n\t'Nature Damage',\n);\n\nexport const SpellShadowWeavingDebuff = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player => player.getMatchingSpellActionId([{ id: 15334, minLevel: 40 }]),\n\t\tfieldName: 'shadowWeaving',\n\t}),\n\t'Shadow Weaving',\n);\n\nexport const CurseOfElements = withLabel(\n\tmakeTristateDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 1490, minLevel: 32, maxLevel: 45 },\n\t\t\t\t{ id: 11721, minLevel: 46, maxLevel: 59 },\n\t\t\t\t{ id: 11722, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(402792),\n\t\tfieldName: 'curseOfElementsNew',\n\t}),\n\t'Curse of Elements',\n);\n\nexport const CurseOfShadow = withLabel(\n\tmakeTristateDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 17862, minLevel: 44, maxLevel: 59 },\n\t\t\t\t{ id: 17937, minLevel: 60 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(402791),\n\t\tfieldName: 'curseOfShadowNew',\n\t}),\n\t'Curse of Shadow',\n);\n\nexport const HuntersMark = withLabel(\n\tmakeTristateDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 1130, minLevel: 6, maxLevel: 21 },\n\t\t\t\t{ id: 14323, minLevel: 22, maxLevel: 39 },\n\t\t\t\t{ id: 14324, minLevel: 40, maxLevel: 57 },\n\t\t\t\t{ id: 14325, minLevel: 58 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(19425),\n\t\tfieldName: 'huntersMark',\n\t}),\n\t`Hunter's Mark`,\n);\nexport const JudgementOfWisdom = withLabel(\n\tmakeBooleanDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 20186, minLevel: 38, maxLevel: 57 },\n\t\t\t\t{ id: 20355, minLevel: 58 },\n\t\t\t]),\n\t\tfieldName: 'judgementOfWisdom',\n\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t}),\n\t'Judgement of Wisdom',\n);\nexport const JudgementOfTheCrusader = withLabel(\n\tmakeTristateDebuffInput({\n\t\tactionId: player =>\n\t\t\tplayer.getMatchingSpellActionId([\n\t\t\t\t{ id: 20300, minLevel: 22, maxLevel: 31 },\n\t\t\t\t{ id: 20301, minLevel: 32, maxLevel: 41 },\n\t\t\t\t{ id: 20302, minLevel: 42, maxLevel: 51 },\n\t\t\t\t{ id: 20303, minLevel: 52 },\n\t\t\t]),\n\t\timpId: ActionId.fromSpellId(20337),\n\t\tfieldName: 'judgementOfTheCrusader',\n\t\tshowWhen: player => player.getFaction() == Faction.Alliance,\n\t}),\n\t'Judgement of the Crusader',\n);\n\n// Misc Debuffs\nexport const MekkatorqueFistDebuff = makeBooleanDebuffInput({\n\tactionId: player => player.getMatchingItemActionId([{ id: 213409, minLevel: 40, maxLevel: 45 }]),\n\tfieldName: 'mekkatorqueFistDebuff',\n});\nexport const SerpentsStrikerFistDebuff = makeBooleanDebuffInput({\n\tactionId: player => player.getMatchingItemActionId([{ id: 220589, minLevel: 50, maxLevel: 55 }]),\n\tfieldName: 'serpentsStrikerFistDebuff',\n});\nexport const JudgementOfLight = makeBooleanDebuffInput({\n\tactionId: player =>\n\t\tplayer.getMatchingSpellActionId([\n\t\t\t{ id: 20185, minLevel: 30, maxLevel: 39 },\n\t\t\t{ id: 20344, minLevel: 40, maxLevel: 49 },\n\t\t\t{ id: 20345, minLevel: 50, maxLevel: 59 },\n\t\t\t{ id: 20346, minLevel: 60 },\n\t\t]),\n\tfieldName: 'judgementOfLight',\n\tshowWhen: player => player.getFaction() == Faction.Alliance,\n});\nexport const CurseOfVulnerability = makeBooleanDebuffInput({\n\tactionId: player => player.getMatchingSpellActionId([{ id: 427143, minLevel: 25 }]),\n\tfieldName: 'curseOfVulnerability',\n});\nexport const GiftOfArthas = makeBooleanDebuffInput({\n\tactionId: player =>\n\t\tplayer.getMatchingSpellActionId([\n\t\t\t// SoD Phase 3?\n\t\t\t{ id: 11374, minLevel: 41 },\n\t\t]),\n\tfieldName: 'giftOfArthas',\n});\nexport const CrystalYield = makeBooleanDebuffInput({\n\tactionId: player => player.getMatchingSpellActionId([{ id: 15235, minLevel: 47 }]),\n\tfieldName: 'crystalYield',\n});\nexport const AncientCorrosivePoison = makeMultistateMultiplierDebuffInput({\n\tactionId: () => ActionId.fromItemId(209562),\n\tnumStates: 11,\n\tmultiplier: 10,\n\treverse: true,\n\tfieldName: 'ancientCorrosivePoison',\n});\n\n///////////////////////////////////////////////////////////////////////////\n//                                 CONFIGS\n///////////////////////////////////////////////////////////////////////////\n\nexport const RAID_BUFFS_CONFIG = [\n\t// Standard buffs\n\t{\n\t\tconfig: AllStatsBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [],\n\t},\n\t{\n\t\tconfig: AllStatsPercentBuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [],\n\t},\n\t{\n\t\tconfig: ArmorBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatArmor],\n\t},\n\t{\n\t\tconfig: StaminaBuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatStamina],\n\t},\n\t{\n\t\tconfig: BloodPactBuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatStamina],\n\t},\n\t{\n\t\tconfig: PaladinPhysicalBuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatStrength, Stat.StatAgility, Stat.StatAttackPower],\n\t},\n\t{\n\t\tconfig: StrengthBuffHorde,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatStrength],\n\t},\n\t{\n\t\tconfig: GraceOfAir,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAgility],\n\t},\n\t{\n\t\tconfig: IntellectBuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatIntellect],\n\t},\n\t{\n\t\tconfig: SpiritBuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatSpirit],\n\t},\n\t{\n\t\tconfig: BattleShoutBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower],\n\t},\n\t{\n\t\tconfig: TrueshotAuraBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower, Stat.StatRangedAttackPower],\n\t},\n\t// {\n\t// \tconfig: AttackPowerPercentBuff,\n\t// \tpicker: MultiIconPicker,\n\t// \tstats: [Stat.StatAttackPower, Stat.StatRangedAttackPower]\n\t// },\n\t{\n\t\tconfig: MeleeCritBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatMeleeCrit],\n\t},\n\t{\n\t\tconfig: SpellIncreaseBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatSpellPower],\n\t},\n\t{\n\t\tconfig: SpellCritBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatSpellCrit],\n\t},\n\t{\n\t\tconfig: DamageReductionPercentBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatArmor],\n\t},\n\t{\n\t\tconfig: ResistanceBuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatNatureResistance, Stat.StatShadowResistance, Stat.StatFireResistance, Stat.StatFrostResistance],\n\t},\n\t// {\n\t// \tconfig: DefensiveCooldownBuff,\n\t// \tpicker: MultiIconPicker,\n\t// \tstats: [Stat.StatArmor]\n\t// },\n\t{\n\t\tconfig: BlessingOfWisdom,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatMP5],\n\t},\n\t{\n\t\tconfig: ManaSpringTotem,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatMP5],\n\t},\n\n\t// // Misc Buffs\n\t{\n\t\tconfig: Thorns,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatArmor],\n\t},\n\t{\n\t\tconfig: RetributionAura,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatArmor],\n\t\tfaction: Faction.Alliance,\n\t},\n\t{\n\t\tconfig: SanctityAura,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatHolyPower],\n\t\tfaction: Faction.Alliance,\n\t},\n\t{\n\t\tconfig: Innervate,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatMP5],\n\t},\n\t{\n\t\tconfig: PowerInfusion,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatMP5, Stat.StatSpellPower],\n\t},\n\t{\n\t\tconfig: BattleSquawkBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatMeleeHaste],\n\t},\n] as PickerStatOptions[];\n\nexport const WORLD_BUFFS_CONFIG = [\n\t{\n\t\tconfig: FervorOfTheTempleExplorer,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatSpellPower, Stat.StatAttackPower],\n\t},\n\t{\n\t\tconfig: SparkOfInspiration,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatSpellPower, Stat.StatMeleeHaste, Stat.StatRangedAttackPower],\n\t},\n\t{\n\t\tconfig: BoonOfBlackfathom,\n\t\tpicker: IconPicker,\n\t\tstats: [\n\t\t\tStat.StatMeleeCrit,\n\t\t\t// TODO: Stat.StatRangedCrit,\n\t\t\tStat.StatSpellCrit,\n\t\t\tStat.StatAttackPower,\n\t\t],\n\t},\n\t{\n\t\tconfig: AshenvalePvpBuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower, Stat.StatSpellPower],\n\t},\n\t{\n\t\tconfig: FengusFerocity,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower],\n\t},\n\t{\n\t\tconfig: MoldarsMoxie,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatStamina],\n\t},\n\t{\n\t\tconfig: RallyingCryOfTheDragonslayer,\n\t\tpicker: IconPicker,\n\t\tstats: [\n\t\t\tStat.StatMeleeCrit,\n\t\t\t// TODO: Stat.StatRangedCrit,\n\t\t\tStat.StatSpellCrit,\n\t\t\tStat.StatAttackPower,\n\t\t],\n\t},\n\t{\n\t\tconfig: SongflowerSerenade,\n\t\tpicker: IconPicker,\n\t\tstats: [],\n\t},\n\t{\n\t\tconfig: SpiritOfZandalar,\n\t\tpicker: IconPicker,\n\t\tstats: [],\n\t},\n\t{\n\t\tconfig: WarchiefsBlessing,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatHealth, Stat.StatMeleeHaste, Stat.StatMP5],\n\t},\n] as PickerStatOptions[];\n\nexport const SAYGES_CONFIG = [\n\t{\n\t\tconfig: SaygesDamage,\n\t\tstats: [],\n\t},\n\t{\n\t\tconfig: SaygesAgility,\n\t\tstats: [Stat.StatAgility],\n\t},\n\t{\n\t\tconfig: SaygesIntellect,\n\t\tstats: [Stat.StatIntellect],\n\t},\n\t{\n\t\tconfig: SaygesSpirit,\n\t\tstats: [Stat.StatSpirit, Stat.StatMP5],\n\t},\n\t{\n\t\tconfig: SaygesStamina,\n\t\tstats: [Stat.StatStamina],\n\t},\n] as ItemStatOption<SaygesFortune>[];\n\nexport const DEBUFFS_CONFIG = [\n\t// // Standard Debuffs\n\t{\n\t\tconfig: MajorArmorDebuff,\n\t\tstats: [Stat.StatAttackPower],\n\t\tpicker: MultiIconPicker,\n\t},\n\t{\n\t\tconfig: CurseOfRecklessness,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower],\n\t},\n\t{\n\t\tconfig: FaerieFire,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower],\n\t},\n\t{\n\t\tconfig: BleedDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower, Stat.StatRangedAttackPower],\n\t},\n\n\t// Magic\n\t{\n\t\tconfig: JudgementOfTheCrusader,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatHolyPower],\n\t},\n\t{\n\t\tconfig: SpellISBDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatShadowPower],\n\t},\n\t{\n\t\tconfig: SpellScorchDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatFirePower],\n\t},\n\t{\n\t\tconfig: SpellWintersChillDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatFrostPower],\n\t},\n\t{\n\t\tconfig: NatureSpellDamageDebuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatNaturePower],\n\t},\n\t{\n\t\tconfig: SpellShadowWeavingDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatShadowPower],\n\t},\n\t{\n\t\tconfig: CurseOfElements,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatFirePower, Stat.StatFrostPower],\n\t},\n\t{\n\t\tconfig: CurseOfShadow,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatShadowPower, Stat.StatArcanePower],\n\t},\n\n\t// Defensive\n\t{\n\t\tconfig: AttackPowerDebuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatArmor],\n\t},\n\t{\n\t\tconfig: MeleeAttackSpeedDebuff,\n\t\tpicker: MultiIconPicker,\n\t\tstats: [Stat.StatArmor],\n\t},\n\t{\n\t\tconfig: curseOfWeaknessDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatArmor],\n\t},\n\t{\n\t\tconfig: MeleeHitDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatDodge],\n\t},\n\n\t// Other Debuffs\n\t{\n\t\tconfig: HuntersMark,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatRangedAttackPower],\n\t},\n\t{\n\t\tconfig: JudgementOfWisdom,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatMP5, Stat.StatIntellect],\n\t},\n] as PickerStatOptions[];\n\nexport const DEBUFFS_MISC_CONFIG = [\n\t// // Misc Debuffs\n\t{\n\t\tconfig: JudgementOfLight,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatStamina],\n\t},\n\t{\n\t\tconfig: MekkatorqueFistDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatSpellPower],\n\t},\n\t{\n\t\tconfig: SerpentsStrikerFistDebuff,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatNaturePower, Stat.StatHolyPower],\n\t},\n\t{\n\t\tconfig: CurseOfVulnerability,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower, Stat.StatRangedAttackPower],\n\t},\n\t{\n\t\tconfig: GiftOfArthas,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower, Stat.StatRangedAttackPower],\n\t},\n\t{\n\t\tconfig: CrystalYield,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower, Stat.StatRangedAttackPower],\n\t},\n\t{\n\t\tconfig: AncientCorrosivePoison,\n\t\tpicker: IconPicker,\n\t\tstats: [Stat.StatAttackPower, Stat.StatRangedAttackPower],\n\t},\n] as PickerStatOptions[];\n","import { Class, WeaponImbue } from \"../../proto/common.js\";\nimport { ConsumableInputConfig } from \"./consumables\";\n\n// Rogue Imbues\nexport const InstantPoisonWeaponImbue: ConsumableInputConfig<WeaponImbue> = {\n    actionId: (player) => player.getMatchingItemActionId([\n        { id: 6947, minLevel: 20, maxLevel: 27},\n        { id: 6949, minLevel: 28, maxLevel: 35},\n        { id: 6950, minLevel: 36, maxLevel: 43},\n        { id: 8926, minLevel: 44, maxLevel: 51},\n        { id: 8927, minLevel: 52, maxLevel: 59},\n        { id: 8928, minLevel: 60, maxLevel: 60},\n    ]),\n    value: WeaponImbue.InstantPoison,\n    showWhen: (player) => player.getClass() == Class.ClassRogue,\n};\n\nexport const DeadlyPoisonWeaponImbue: ConsumableInputConfig<WeaponImbue> = {\n    actionId: (player) => player.getMatchingItemActionId([\n        { id: 2892, minLevel: 30, maxLevel: 37},\n        { id: 2893, minLevel: 38, maxLevel: 45},\n        { id: 8984, minLevel: 46, maxLevel: 53},\n        { id: 8985, minLevel: 54, maxLevel: 59},\n        { id: 20844, minLevel: 60, maxLevel: 60},\n    ]),\n    value: WeaponImbue.DeadlyPoison,\n    showWhen: (player) => player.getClass() == Class.ClassRogue,\n};\n\nexport const WoundPoisonWeaponImbue: ConsumableInputConfig<WeaponImbue> = {\n    actionId: (player) => player.getMatchingItemActionId([\n        { id: 10918, minLevel: 32, maxLevel: 39},\n        { id: 10920, minLevel: 40, maxLevel: 47},\n        { id: 10921, minLevel: 48, maxLevel: 55},\n        { id: 10922, minLevel: 56, maxLevel: 60},\n    ]),\n    value: WeaponImbue.WoundPoison,\n    showWhen: (player) => player.getClass() == Class.ClassRogue,\n};","import { Class, WeaponImbue } from \"../../proto/common.js\";\n\nimport { ConsumableInputConfig } from \"./consumables\";\n\n// Shaman Imbues\nexport const RockbiterWeaponImbue: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: (player) => player.getMatchingSpellActionId([\n\t\t{ id: 8017, \tminLevel: 1, \tmaxLevel: 7 \t},\n\t\t{ id: 8018, \tminLevel: 8, \tmaxLevel: 15 \t},\n\t\t{ id: 8019, \tminLevel: 16,\tmaxLevel: 23 \t},\n\t\t{ id: 10399, \tminLevel: 24,\tmaxLevel: 33 \t},\n\t\t{ id: 16314, \tminLevel: 34,\tmaxLevel: 43 \t},\n\t\t{ id: 16315, \tminLevel: 44,\tmaxLevel: 53 \t},\n\t\t{ id: 16316, \tminLevel: 54 \t\t\t\t\t\t\t\t},\n\t]),\n  value: WeaponImbue.RockbiterWeapon,\n\tshowWhen: (player) => player.getClass() == Class.ClassShaman,\n};\n\nexport const FlametongueWeaponImbue: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: (player) => player.getMatchingSpellActionId([\n\t\t{ id: 8024, \tminLevel: 10, maxLevel: 17 \t},\n\t\t{ id: 8027, \tminLevel: 18, maxLevel: 25 \t},\n\t\t{ id: 8030, \tminLevel: 26,\tmaxLevel: 35 \t},\n\t\t{ id: 16339, \tminLevel: 36,\tmaxLevel: 45 \t},\n\t\t{ id: 16341, \tminLevel: 46,\tmaxLevel: 55 \t},\n\t\t{ id: 16342, \tminLevel: 56 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: WeaponImbue.FlametongueWeapon,\n\tshowWhen: (player) => player.getClass() == Class.ClassShaman,\n};\n\nexport const FrostbrandWeaponImbue: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: (player) => player.getMatchingSpellActionId([\n\t\t{ id: 8033, \tminLevel: 20, maxLevel: 27 \t},\n\t\t{ id: 8038, \tminLevel: 28, maxLevel: 37 \t},\n\t\t{ id: 10456, \tminLevel: 38,\tmaxLevel: 47 \t},\n\t\t{ id: 16355, \tminLevel: 48,\tmaxLevel: 57 \t},\n\t\t{ id: 16356, \tminLevel: 58,\t       \t      },\n\t]),\n\tvalue: WeaponImbue.FrostbrandWeapon,\n\tshowWhen: (player) => player.getClass() == Class.ClassShaman,\n};\n\nexport const WindfuryWeaponImbue: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: (player) => player.getMatchingSpellActionId([\n\t\t{ id: 8232, \tminLevel: 30, maxLevel: 39 \t},\n\t\t{ id: 8235, \tminLevel: 40, maxLevel: 49 \t},\n\t\t{ id: 10486, \tminLevel: 50,\tmaxLevel: 59 \t},\n\t\t{ id: 16362, \tminLevel: 60 \t              },\n\t]),\n\tvalue: WeaponImbue.WindfuryWeapon,\n\tshowWhen: (player) => player.getClass() == Class.ClassShaman,\n};\n","import { Player } from '../../player';\nimport {\n\tAgilityElixir,\n\tAlcohol,\n\tArmorElixir,\n\tAttackPowerBuff,\n\tClass,\n\tConjured,\n\tConsumes,\n\tEnchantedSigil,\n\tExplosive,\n\tFirePowerBuff,\n\tFlask,\n\tFood,\n\tFrostPowerBuff,\n\tHealthElixir,\n\tItemSlot,\n\tManaRegenElixir,\n\tPotions,\n\tProfession,\n\tShadowPowerBuff,\n\tSpec,\n\tSpellPowerBuff,\n\tStat,\n\tStrengthBuff,\n\tWeaponImbue,\n\tWeaponType,\n\tZanzaBuff,\n} from '../../proto/common';\nimport { ActionId } from '../../proto_utils/action_id';\nimport { isBluntWeaponType, isSharpWeaponType } from '../../proto_utils/utils';\nimport { EventID, TypedEvent } from '../../typed_event';\nimport { IconEnumValueConfig } from '../icon_enum_picker';\nimport { makeBooleanConsumeInput, makeBooleanMiscConsumeInput, makeEnumConsumeInput } from '../icon_inputs';\nimport { IconPickerDirection } from '../icon_picker';\nimport * as InputHelpers from '../input_helpers';\nimport { MultiIconPicker } from '../multi_icon_picker';\nimport { DeadlyPoisonWeaponImbue, InstantPoisonWeaponImbue, WoundPoisonWeaponImbue } from './rogue_imbues';\nimport { FlametongueWeaponImbue, FrostbrandWeaponImbue, RockbiterWeaponImbue, WindfuryWeaponImbue } from './shaman_imbues';\nimport { ActionInputConfig, ItemStatOption, PickerStatOptions } from './stat_options';\n\nexport interface ConsumableInputConfig<T> extends ActionInputConfig<T> {\n\tvalue: T;\n}\n\nexport interface ConsumableStatOption<T> extends ItemStatOption<T> {\n\tconfig: ConsumableInputConfig<T>;\n}\n\nexport interface ConsumeInputFactoryArgs<T extends number> {\n\tconsumesFieldName: keyof Consumes;\n\t// Additional callback if logic besides syncing consumes is required\n\tonSet?: (eventactionId: EventID, player: Player<any>, newValue: T) => void;\n\tshowWhen?: (player: Player<any>) => boolean;\n}\n\nfunction makeConsumeInputFactory<T extends number>(\n\targs: ConsumeInputFactoryArgs<T>,\n): (options: ConsumableStatOption<T>[], tooltip?: string) => InputHelpers.TypedIconEnumPickerConfig<Player<any>, T> {\n\treturn (options: ConsumableStatOption<T>[], tooltip?: string) => {\n\t\treturn {\n\t\t\ttype: 'iconEnum',\n\t\t\ttooltip: tooltip,\n\t\t\tnumColumns: options.length > 11 ? 4 : options.length > 8 ? 3 : options.length > 5 ? 2 : 1,\n\t\t\tvalues: [{ value: 0 } as unknown as IconEnumValueConfig<Player<any>, T>].concat(\n\t\t\t\toptions.map(option => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tactionId: option.config.actionId,\n\t\t\t\t\t\tvalue: option.config.value,\n\t\t\t\t\t\tshowWhen: (player: Player<any>) => !option.config.showWhen || option.config.showWhen(player),\n\t\t\t\t\t} as IconEnumValueConfig<Player<any>, T>;\n\t\t\t\t}),\n\t\t\t),\n\t\t\tequals: (a: T, b: T) => a == b,\n\t\t\tzeroValue: 0 as T,\n\t\t\tchangedEvent: (player: Player<any>) =>\n\t\t\t\tTypedEvent.onAny([player.consumesChangeEmitter, player.levelChangeEmitter, player.gearChangeEmitter, player.professionChangeEmitter]),\n\t\t\tshowWhen: (player: Player<any>) => !args.showWhen || args.showWhen(player),\n\t\t\tgetValue: (player: Player<any>) => player.getConsumes()[args.consumesFieldName] as T,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst newConsumes = player.getConsumes();\n\n\t\t\t\tif (newConsumes[args.consumesFieldName] === newValue) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t(newConsumes[args.consumesFieldName] as number) = newValue;\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setConsumes(eventID, newConsumes);\n\t\t\t\t\tif (args.onSet) {\n\t\t\t\t\t\targs.onSet(eventID, player, newValue as T);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\t};\n}\n\n///////////////////////////////////////////////////////////////////////////\n//                                 CONJURED\n///////////////////////////////////////////////////////////////////////////\n\nexport const ConjuredMinorRecombobulator: ConsumableInputConfig<Conjured> = {\n\tactionId: () => ActionId.fromItemId(4381),\n\tvalue: Conjured.ConjuredMinorRecombobulator,\n\tshowWhen: (player: Player<any>) => player.getGear().hasTrinket(4381),\n};\nexport const ConjuredDemonicRune: ConsumableInputConfig<Conjured> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 12662, minLevel: 40 }]),\n\tvalue: Conjured.ConjuredDemonicRune,\n};\nexport const ConjuredRogueThistleTea: ConsumableInputConfig<Conjured> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 7676, minLevel: 25 }]),\n\tvalue: Conjured.ConjuredRogueThistleTea,\n\tshowWhen: player => player.getClass() == Class.ClassRogue,\n};\n\nexport const CONJURED_CONFIG: ConsumableStatOption<Conjured>[] = [\n\t{ config: ConjuredMinorRecombobulator, stats: [Stat.StatIntellect] },\n\t{ config: ConjuredDemonicRune, stats: [Stat.StatIntellect] },\n\t{ config: ConjuredRogueThistleTea, stats: [] },\n];\n\nexport const makeConjuredInput = makeConsumeInputFactory({ consumesFieldName: 'defaultConjured' });\n\n///////////////////////////////////////////////////////////////////////////\n//                             ENCHANTING SIGIL\n///////////////////////////////////////////////////////////////////////////\n\nexport const EnchantedSigilInnovation: ConsumableInputConfig<EnchantedSigil> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 217308, minLevel: 40 }]),\n\tvalue: EnchantedSigil.InnovationSigil,\n};\n\nexport const EnchantedSigilLivingDreams: ConsumableInputConfig<EnchantedSigil> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 221028, minLevel: 50 }]),\n\tvalue: EnchantedSigil.LivingDreamsSigil,\n};\n\nexport const ENCHANTED_SIGIL_CONFIG: ConsumableStatOption<EnchantedSigil>[] = [\n\t{ config: EnchantedSigilLivingDreams, stats: [] },\n\t{ config: EnchantedSigilInnovation, stats: [] },\n];\n\nexport const makeEncanthedSigilInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'enchantedSigil',\n\tshowWhen: player => player.hasProfession(Profession.Enchanting),\n});\n\n///////////////////////////////////////////////////////////////////////////\n//                                 EXPLOSIVES\n///////////////////////////////////////////////////////////////////////////\n\nexport const ExplosiveSolidDynamite: ConsumableInputConfig<Explosive> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 10507, minLevel: 40 }]),\n\tshowWhen: player => player.hasProfession(Profession.Engineering),\n\tvalue: Explosive.ExplosiveSolidDynamite,\n};\n\nexport const ExplosiveGoblinLandMine: ConsumableInputConfig<Explosive> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 4395, minLevel: 40 }]),\n\tshowWhen: player => player.hasProfession(Profession.Engineering),\n\tvalue: Explosive.ExplosiveGoblinLandMine,\n};\n\nexport const ExplosiveDenseDynamite: ConsumableInputConfig<Explosive> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 18641, minLevel: 50 }]),\n\tshowWhen: player => player.hasProfession(Profession.Engineering),\n\tvalue: Explosive.ExplosiveDenseDynamite,\n};\n\nexport const ExplosiveThoriumGrenade: ConsumableInputConfig<Explosive> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 15993, minLevel: 50 }]),\n\tshowWhen: player => player.hasProfession(Profession.Engineering),\n\tvalue: Explosive.ExplosiveThoriumGrenade,\n};\n\nexport const ExplosiveEzThroRadiationBomb: ConsumableInputConfig<Explosive> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 215168, minLevel: 40 }]),\n\tvalue: Explosive.ExplosiveEzThroRadiationBomb,\n};\n\nexport const ExplosiveHighYieldRadiationBomb: ConsumableInputConfig<Explosive> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 215127, minLevel: 40 }]),\n\tshowWhen: player => player.hasProfession(Profession.Engineering),\n\tvalue: Explosive.ExplosiveHighYieldRadiationBomb,\n};\n\nexport const EXPLOSIVES_CONFIG: ConsumableStatOption<Explosive>[] = [\n\t{ config: ExplosiveEzThroRadiationBomb, stats: [] },\n\t{ config: ExplosiveHighYieldRadiationBomb, stats: [] },\n\t{ config: ExplosiveSolidDynamite, stats: [] },\n\t{ config: ExplosiveDenseDynamite, stats: [] },\n\t{ config: ExplosiveThoriumGrenade, stats: [] },\n\t{ config: ExplosiveGoblinLandMine, stats: [] },\n];\n\nexport const makeExplosivesInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'fillerExplosive',\n\t//showWhen: (player) => !!player.getProfessions().find(p => p == Profession.Engineering),\n});\n\nexport const Sapper = makeBooleanConsumeInput({\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 10646, minLevel: 50 }]),\n\tfieldName: 'sapper',\n\tshowWhen: player => player.hasProfession(Profession.Engineering),\n});\n\n///////////////////////////////////////////////////////////////////////////\n//                                 FLASKS\n///////////////////////////////////////////////////////////////////////////\n\n// Original lvl 50 not obtainable in Phase 3\nexport const FlaskOfTheTitans: ConsumableInputConfig<Flask> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13510, minLevel: 51 }]),\n\tvalue: Flask.FlaskOfTheTitans,\n};\n// Original lvl 50 not obtainable in Phase 3\nexport const FlaskOfDistilledWisdom: ConsumableInputConfig<Flask> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13511, minLevel: 51 }]),\n\tvalue: Flask.FlaskOfDistilledWisdom,\n};\n// Original lvl 50 not obtainable in Phase 3\nexport const FlaskOfSupremePower: ConsumableInputConfig<Flask> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13512, minLevel: 51 }]),\n\tvalue: Flask.FlaskOfSupremePower,\n};\n// Original lvl 50 not obtainable in Phase 3\nexport const FlaskOfChromaticResistance: ConsumableInputConfig<Flask> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13513, minLevel: 51 }]),\n\tvalue: Flask.FlaskOfChromaticResistance,\n};\nexport const FlaskOfRestlessDreams: ConsumableInputConfig<Flask> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 222952, minLevel: 50, maxLevel: 59 }]),\n\tvalue: Flask.FlaskOfRestlessDreams,\n\tshowWhen: player => player.hasProfession(Profession.Alchemy),\n};\nexport const FlaskOfEverlastingNightmares: ConsumableInputConfig<Flask> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 221024, minLevel: 50, maxLevel: 59 }]),\n\tvalue: Flask.FlaskOfEverlastingNightmares,\n\tshowWhen: player => player.hasProfession(Profession.Alchemy),\n};\n\nexport const FLASKS_CONFIG: ConsumableStatOption<Flask>[] = [\n\t{ config: FlaskOfTheTitans, stats: [Stat.StatStamina] },\n\t{ config: FlaskOfDistilledWisdom, stats: [Stat.StatMP5, Stat.StatSpellPower] },\n\t{ config: FlaskOfSupremePower, stats: [Stat.StatMP5, Stat.StatSpellPower] },\n\t{ config: FlaskOfChromaticResistance, stats: [Stat.StatStamina] },\n\t{ config: FlaskOfRestlessDreams, stats: [Stat.StatSpellPower] },\n\t{ config: FlaskOfEverlastingNightmares, stats: [Stat.StatAttackPower] },\n];\n\nexport const makeFlasksInput = makeConsumeInputFactory({ consumesFieldName: 'flask' });\n\n///////////////////////////////////////////////////////////////////////////\n//                                 FOOD\n///////////////////////////////////////////////////////////////////////////\n\nexport const DirgesKickChimaerokChops: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 21023, minLevel: 55 }]),\n\tvalue: Food.FoodDirgesKickChimaerokChops,\n};\nexport const GrilledSquid: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13928, minLevel: 50 }]),\n\tvalue: Food.FoodGrilledSquid,\n};\n// Original lvl 50 not obtainable in Phase 3\nexport const SmokedDesertDumpling: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 20452, minLevel: 51 }]),\n\tvalue: Food.FoodSmokedDesertDumpling,\n};\n// Original lvl 45 not obtainable in Phase 3\nexport const RunnTumTuberSurprise: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 18254, minLevel: 51 }]),\n\tvalue: Food.FoodRunnTumTuberSurprise,\n};\nexport const BlessSunfruit: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13810, minLevel: 45 }]),\n\tvalue: Food.FoodBlessSunfruit,\n};\nexport const BlessedSunfruitJuice: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13813, minLevel: 45 }]),\n\tvalue: Food.FoodBlessedSunfruitJuice,\n};\nexport const NightfinSoup: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13931, minLevel: 35 }]),\n\tvalue: Food.FoodNightfinSoup,\n};\nexport const TenderWolfSteak: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 18045, minLevel: 40 }]),\n\tvalue: Food.FoodTenderWolfSteak,\n};\nexport const SagefishDelight: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 21217, minLevel: 30 }]),\n\tvalue: Food.FoodSagefishDelight,\n};\nexport const HotWolfRibs: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13851, minLevel: 25 }]),\n\tvalue: Food.FoodHotWolfRibs,\n};\nexport const SmokedSagefish: ConsumableInputConfig<Food> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 21072, minLevel: 10 }]),\n\tvalue: Food.FoodSmokedSagefish,\n};\n\n// Ordered by level\nexport const FOOD_CONFIG: ConsumableStatOption<Food>[] = [\n\t{ config: DirgesKickChimaerokChops, stats: [Stat.StatStamina] },\n\t{ config: GrilledSquid, stats: [Stat.StatAgility] },\n\t{ config: SmokedDesertDumpling, stats: [Stat.StatStrength] },\n\t{ config: RunnTumTuberSurprise, stats: [Stat.StatIntellect] },\n\t{ config: BlessSunfruit, stats: [Stat.StatStrength] },\n\t{ config: BlessedSunfruitJuice, stats: [Stat.StatSpirit] },\n\t{ config: NightfinSoup, stats: [Stat.StatMP5] },\n\t{ config: TenderWolfSteak, stats: [Stat.StatStamina, Stat.StatSpirit] },\n\t{ config: SagefishDelight, stats: [Stat.StatMP5] },\n\t{ config: HotWolfRibs, stats: [Stat.StatSpirit] },\n\t{ config: SmokedSagefish, stats: [Stat.StatMP5] },\n];\n\nexport const makeFoodInput = makeConsumeInputFactory({ consumesFieldName: 'food' });\n\nexport const DragonBreathChili = makeBooleanConsumeInput({\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 12217, minLevel: 35 }]),\n\tfieldName: 'dragonBreathChili',\n});\n\nexport const RumseyRumBlackLabel: ConsumableInputConfig<Alcohol> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 21151, minLevel: 1 }]),\n\tvalue: Alcohol.AlcoholRumseyRumLight,\n};\n\nexport const GordokGreenGrog: ConsumableInputConfig<Alcohol> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 18269, minLevel: 56 }]),\n\tvalue: Alcohol.AlcoholRumseyRumLight,\n};\n\nexport const RumseyRumDark: ConsumableInputConfig<Alcohol> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 21114, minLevel: 1 }]),\n\tvalue: Alcohol.AlcoholRumseyRumLight,\n};\n\nexport const RumseyRumLight: ConsumableInputConfig<Alcohol> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 20709, minLevel: 1 }]),\n\tvalue: Alcohol.AlcoholRumseyRumLight,\n};\n\nexport const KreegsStoutBeatdown: ConsumableInputConfig<Alcohol> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 18284, minLevel: 56 }]),\n\tvalue: Alcohol.AlcoholRumseyRumLight,\n};\n\nexport const ALCOHOL_CONFIG: ConsumableStatOption<Alcohol>[] = [\n\t{ config: RumseyRumBlackLabel, stats: [Stat.StatStamina] },\n\t{ config: GordokGreenGrog, stats: [Stat.StatStamina] },\n\t{ config: RumseyRumDark, stats: [Stat.StatStamina] },\n\t{ config: RumseyRumLight, stats: [Stat.StatStamina] },\n\t{ config: KreegsStoutBeatdown, stats: [Stat.StatSpirit] },\n];\n\nexport const makeAlcoholInput = makeConsumeInputFactory({ consumesFieldName: 'alcohol' });\n\n///////////////////////////////////////////////////////////////////////////\n//                                 DEFENSIVE CONSUMES\n///////////////////////////////////////////////////////////////////////////\n\n// Armor\nexport const ElixirOfSuperiorDefense: ConsumableInputConfig<ArmorElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13445, minLevel: 43 }]),\n\tvalue: ArmorElixir.ElixirOfSuperiorDefense,\n};\nexport const ElixirOfGreaterDefense: ConsumableInputConfig<ArmorElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 8951, minLevel: 29 }]),\n\tvalue: ArmorElixir.ElixirOfGreaterDefense,\n};\nexport const ElixirOfDefense: ConsumableInputConfig<ArmorElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 3389, minLevel: 16 }]),\n\tvalue: ArmorElixir.ElixirOfDefense,\n};\nexport const ElixirOfMinorDefense: ConsumableInputConfig<ArmorElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 5997, minLevel: 1 }]),\n\tvalue: ArmorElixir.ElixirOfMinorDefense,\n};\nexport const ScrollOfProtection: ConsumableInputConfig<ArmorElixir> = {\n\tactionId: player =>\n\t\tplayer.getMatchingItemActionId([\n\t\t\t{ id: 3013, minLevel: 1, maxLevel: 14 },\n\t\t\t{ id: 1478, minLevel: 15, maxLevel: 29 },\n\t\t\t{ id: 4421, minLevel: 30, maxLevel: 44 },\n\t\t\t{ id: 10305, minLevel: 45 },\n\t\t]),\n\tvalue: ArmorElixir.ScrollOfProtection,\n};\nexport const ARMOR_CONSUMES_CONFIG: ConsumableStatOption<ArmorElixir>[] = [\n\t{ config: ElixirOfSuperiorDefense, stats: [Stat.StatArmor] },\n\t{ config: ElixirOfGreaterDefense, stats: [Stat.StatArmor] },\n\t{ config: ElixirOfDefense, stats: [Stat.StatArmor] },\n\t{ config: ElixirOfMinorDefense, stats: [Stat.StatArmor] },\n\t{ config: ScrollOfProtection, stats: [Stat.StatArmor] },\n];\n\nexport const makeArmorConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'armorElixir' });\n\n// Health\nexport const ElixirOfFortitude: ConsumableInputConfig<HealthElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 3825, minLevel: 25 }]),\n\tvalue: HealthElixir.ElixirOfFortitude,\n};\nexport const ElixirOfMinorFortitude: ConsumableInputConfig<HealthElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 2458, minLevel: 2 }]),\n\tvalue: HealthElixir.ElixirOfMinorFortitude,\n};\nexport const HEALTH_CONSUMES_CONFIG: ConsumableStatOption<HealthElixir>[] = [\n\t{ config: ElixirOfFortitude, stats: [Stat.StatStamina] },\n\t{ config: ElixirOfMinorFortitude, stats: [Stat.StatStamina] },\n];\n\nexport const makeHealthConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'healthElixir' });\n\n///////////////////////////////////////////////////////////////////////////\n//                                 PHYSICAL DAMAGE CONSUMES\n///////////////////////////////////////////////////////////////////////////\n\n// Attack Power\nexport const JujuMight: ConsumableInputConfig<AttackPowerBuff> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 12460, minLevel: 55 }]),\n\tvalue: AttackPowerBuff.JujuMight,\n};\nexport const WinterfallFirewater: ConsumableInputConfig<AttackPowerBuff> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 12820, minLevel: 45 }]),\n\tvalue: AttackPowerBuff.WinterfallFirewater,\n};\n\nexport const ATTACK_POWER_CONSUMES_CONFIG: ConsumableStatOption<AttackPowerBuff>[] = [\n\t{ config: JujuMight, stats: [Stat.StatAttackPower] },\n\t{ config: WinterfallFirewater, stats: [Stat.StatAttackPower] },\n];\n\nexport const makeAttackPowerConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'attackPowerBuff' });\n\n// Agility\nexport const ElixirOfTheMongoose: ConsumableInputConfig<AgilityElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 13452, minLevel: 46 }]),\n\tvalue: AgilityElixir.ElixirOfTheMongoose,\n};\nexport const ElixirOfGreaterAgility: ConsumableInputConfig<AgilityElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 9187, minLevel: 38 }]),\n\tvalue: AgilityElixir.ElixirOfGreaterAgility,\n};\nexport const ElixirOfAgility: ConsumableInputConfig<AgilityElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 8949, minLevel: 27 }]),\n\tvalue: AgilityElixir.ElixirOfAgility,\n};\nexport const ElixirOfLesserAgility: ConsumableInputConfig<AgilityElixir> = {\n\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 3390, minLevel: 18 }]),\n\tvalue: AgilityElixir.ElixirOfLesserAgility,\n};\nexport const ScrollOfAgility: ConsumableInputConfig<AgilityElixir> = {\n\tactionId: player =>\n\t\tplayer.getMatchingItemActionId([\n\t\t\t{ id: 3012, minLevel: 10, maxLevel: 24 },\n\t\t\t{ id: 1477, minLevel: 25, maxLevel: 39 },\n\t\t\t{ id: 4425, minLevel: 40, maxLevel: 54 },\n\t\t\t{ id: 10309, minLevel: 55 },\n\t\t]),\n\tvalue: AgilityElixir.ScrollOfAgility,\n};\n\nexport const AGILITY_CONSUMES_CONFIG: ConsumableStatOption<AgilityElixir>[] = [\n\t{ config: ElixirOfTheMongoose, stats: [Stat.StatAgility, Stat.StatMeleeCrit] },\n\t{ config: ElixirOfGreaterAgility, stats: [Stat.StatAgility] },\n\t{ config: ElixirOfAgility, stats: [Stat.StatAgility] },\n\t{ config: ElixirOfLesserAgility, stats: [Stat.StatAgility] },\n\t{ config: ScrollOfAgility, stats: [Stat.StatAgility] },\n];\n\nexport const makeAgilityConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'agilityElixir' });\n\n// Strength\nexport const JujuPower: ConsumableInputConfig<StrengthBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 12451, minLevel: 55 }]),\n\tvalue: StrengthBuff.JujuPower,\n};\nexport const ElixirOfGiants: ConsumableInputConfig<StrengthBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 9206, minLevel: 46 }]),\n\tvalue: StrengthBuff.ElixirOfGiants,\n};\nexport const ElixirOfOgresStrength: ConsumableInputConfig<StrengthBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 3391, minLevel: 20 }]),\n\tvalue: StrengthBuff.ElixirOfOgresStrength,\n};\nexport const ScrollOfStrength: ConsumableInputConfig<StrengthBuff> = {\n\tactionId: player =>\n\t\tplayer.getMatchingItemActionId([\n\t\t\t{ id: 954, minLevel: 10, maxLevel: 24 },\n\t\t\t{ id: 2289, minLevel: 25, maxLevel: 39 },\n\t\t\t{ id: 4426, minLevel: 40, maxLevel: 54 },\n\t\t\t{ id: 10310, minLevel: 55 },\n\t\t]),\n\tvalue: StrengthBuff.ScrollOfStrength,\n};\n\nexport const STRENGTH_CONSUMES_CONFIG: ConsumableStatOption<StrengthBuff>[] = [\n\t{ config: JujuPower, stats: [Stat.StatStrength] },\n\t{ config: ElixirOfGiants, stats: [Stat.StatStrength] },\n\t{ config: ElixirOfOgresStrength, stats: [Stat.StatStrength] },\n\t{ config: ScrollOfStrength, stats: [Stat.StatStrength] },\n];\n\nexport const makeStrengthConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'strengthBuff' });\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Misc Throughput Consumes\n///////////////////////////////////////////////////////////////////////////\n\n// Blasted Lands Consumes\nexport const ROIDS: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 8410, minLevel: 45 }]),\n\tvalue: ZanzaBuff.ROIDS,\n};\nexport const GroundScorpokAssay: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 8412, minLevel: 45 }]),\n\tvalue: ZanzaBuff.GroundScorpokAssay,\n};\nexport const LungJuiceCocktail: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 8411, minLevel: 45 }]),\n\tvalue: ZanzaBuff.LungJuiceCocktail,\n};\nexport const CerebralCortexCompound: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 8423, minLevel: 45 }]),\n\tvalue: ZanzaBuff.CerebralCortexCompound,\n};\nexport const GizzardGum: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 8424, minLevel: 45 }]),\n\tvalue: ZanzaBuff.GizzardGum,\n};\n\n// Zanza Potions\nexport const SpiritOfZanza: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20079, minLevel: 55 }]),\n\tvalue: ZanzaBuff.SpiritOfZanza,\n};\n\n// Atal'ai Potions\nexport const AtalAiMojoOfWar: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: () => ActionId.fromItemId(221196),\n\tvalue: ZanzaBuff.AtalaiMojoOfWar,\n\tshowWhen: (player: Player<any>) => player.getLevel() == 50,\n};\n\nexport const AtalAiMojoOfForbiddenMagic: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: () => ActionId.fromItemId(221030),\n\tvalue: ZanzaBuff.AtalaiMojoOfForbiddenMagic,\n\tshowWhen: (player: Player<any>) => player.getLevel() == 50,\n};\n\nexport const AtalAiMojoOfLife: ConsumableInputConfig<ZanzaBuff> = {\n\tactionId: () => ActionId.fromItemId(221311),\n\tvalue: ZanzaBuff.AtalaiMojoOfLife,\n\tshowWhen: (player: Player<any>) => player.getLevel() == 50,\n};\n\nexport const ZANZA_BUFF_CONSUMES_CONFIG: ConsumableStatOption<ZanzaBuff>[] = [\n\t{ config: SpiritOfZanza, stats: [Stat.StatStamina, Stat.StatSpirit] },\n\t{ config: ROIDS, stats: [Stat.StatStrength] },\n\t{ config: GroundScorpokAssay, stats: [Stat.StatAgility] },\n\t{ config: LungJuiceCocktail, stats: [Stat.StatStamina] },\n\t{ config: CerebralCortexCompound, stats: [Stat.StatIntellect] },\n\t{ config: GizzardGum, stats: [Stat.StatSpirit] },\n\t{ config: AtalAiMojoOfWar, stats: [Stat.StatAttackPower] },\n\t{ config: AtalAiMojoOfForbiddenMagic, stats: [Stat.StatSpellPower] },\n\t{ config: AtalAiMojoOfLife, stats: [Stat.StatHealingPower] },\n];\nexport const makeZanzaBuffConsumesInput = makeConsumeInputFactory({ consumesFieldName: 'zanzaBuff' });\n\nexport const MiscConsumesConfig = InputHelpers.makeMultiIconInput(\n\t[\n\t\tmakeBooleanMiscConsumeInput({\n\t\t\tactionId: (player: Player<Spec>) => player.getMatchingItemActionId([{ id: 213407, minLevel: 20 }]),\n\t\t\tfieldName: 'catnip',\n\t\t\tshowWhen: player => player.getClass() == Class.ClassDruid,\n\t\t}),\n\t\tmakeBooleanMiscConsumeInput({ actionId: () => ActionId.fromItemId(210708), fieldName: 'elixirOfCoalescedRegret' }),\n\t\tmakeBooleanMiscConsumeInput({ actionId: () => ActionId.fromItemId(5206), fieldName: 'boglingRoot' }),\n\t],\n\t'',\n\tIconPickerDirection.Vertical,\n);\n\nexport const MISC_CONSUMES_CONFIG: PickerStatOptions[] = [{ config: MiscConsumesConfig, picker: MultiIconPicker, stats: [Stat.StatAttackPower] }];\n\n///////////////////////////////////////////////////////////////////////////\n//                                 PET\n///////////////////////////////////////////////////////////////////////////\n\nexport const PetScrollOfAgility = makeEnumConsumeInput({\n\tdirection: IconPickerDirection.Vertical,\n\tvalues: [\n\t\t{ value: 0, tooltip: 'None' },\n\t\t{ actionId: () => ActionId.fromItemId(3012), value: 1, showWhen: player => player.getLevel() >= 10 },\n\t\t{ actionId: () => ActionId.fromItemId(1477), value: 2, showWhen: player => player.getLevel() >= 25 },\n\t\t{ actionId: () => ActionId.fromItemId(4425), value: 3, showWhen: player => player.getLevel() >= 40 },\n\t\t{ actionId: () => ActionId.fromItemId(10309), value: 4, showWhen: player => player.getLevel() >= 55 },\n\t],\n\tfieldName: 'petScrollOfAgility',\n});\n\nexport const PetScrollOfStrength = makeEnumConsumeInput({\n\tdirection: IconPickerDirection.Vertical,\n\tvalues: [\n\t\t{ value: 0, tooltip: 'None' },\n\t\t{ actionId: () => ActionId.fromItemId(954), value: 1, showWhen: player => player.getLevel() >= 10 },\n\t\t{ actionId: () => ActionId.fromItemId(2289), value: 2, showWhen: player => player.getLevel() >= 25 },\n\t\t{ actionId: () => ActionId.fromItemId(4426), value: 3, showWhen: player => player.getLevel() >= 40 },\n\t\t{ actionId: () => ActionId.fromItemId(10310), value: 4, showWhen: player => player.getLevel() >= 55 },\n\t],\n\tfieldName: 'petScrollOfStrength',\n});\n\n///////////////////////////////////////////////////////////////////////////\n//                                 POTIONS\n///////////////////////////////////////////////////////////////////////////\n\nexport const LesserManaPotion: ConsumableInputConfig<Potions> = {\n\tactionId: () => ActionId.fromItemId(3385),\n\tvalue: Potions.LesserManaPotion,\n};\nexport const ManaPotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 3827, minLevel: 22 }]),\n\tvalue: Potions.ManaPotion,\n};\nexport const GreaterManaPotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 6149, minLevel: 31 }]),\n\tvalue: Potions.GreaterManaPotion,\n};\nexport const SuperiorManaPotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 13443, minLevel: 41 }]),\n\tvalue: Potions.SuperiorManaPotion,\n};\nexport const MajorManaPotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 13444, minLevel: 49 }]),\n\tvalue: Potions.MajorManaPotion,\n};\nexport const MightRagePotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 13442, minLevel: 46 }]),\n\tvalue: Potions.MightyRagePotion,\n\tshowWhen: player => player.getClass() == Class.ClassWarrior,\n};\nexport const GreatRagePotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 5633, minLevel: 25 }]),\n\tvalue: Potions.GreatRagePotion,\n\tshowWhen: player => player.getClass() == Class.ClassWarrior,\n};\nexport const RagePotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 5631, minLevel: 4 }]),\n\tvalue: Potions.RagePotion,\n\tshowWhen: player => player.getClass() == Class.ClassWarrior,\n};\nexport const GreaterStoneshieldPotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 13455, minLevel: 46 }]),\n\tvalue: Potions.GreaterStoneshieldPotion,\n};\nexport const LesserStoneshieldPotion: ConsumableInputConfig<Potions> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 4623, minLevel: 33 }]),\n\tvalue: Potions.LesserStoneshieldPotion,\n};\n\nexport const POTIONS_CONFIG: ConsumableStatOption<Potions>[] = [\n\t{ config: MajorManaPotion, stats: [Stat.StatIntellect] },\n\t{ config: SuperiorManaPotion, stats: [Stat.StatIntellect] },\n\t{ config: GreaterManaPotion, stats: [Stat.StatIntellect] },\n\t{ config: ManaPotion, stats: [Stat.StatIntellect] },\n\t{ config: LesserManaPotion, stats: [Stat.StatIntellect] },\n\t{ config: MightRagePotion, stats: [] },\n\t{ config: GreatRagePotion, stats: [] },\n\t{ config: RagePotion, stats: [] },\n\t{ config: GreaterStoneshieldPotion, stats: [Stat.StatArmor] },\n\t{ config: LesserStoneshieldPotion, stats: [Stat.StatArmor] },\n];\n\nexport const makePotionsInput = makeConsumeInputFactory({ consumesFieldName: 'defaultPotion' });\n\nexport const MildlyIrradiatedRejuvPotion = makeBooleanConsumeInput({\n\tactionId: player => player.getMatchingItemActionId([{ id: 215162, minLevel: 35 }]),\n\tfieldName: 'mildlyIrradiatedRejuvPot',\n\tshowWhen: player => player.hasProfession(Profession.Alchemy),\n});\n\n///////////////////////////////////////////////////////////////////////////\n//                                 SPELL DAMAGE CONSUMES\n///////////////////////////////////////////////////////////////////////////\n\n// Arcane\nexport const GreaterArcaneElixir: ConsumableInputConfig<SpellPowerBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 13454, minLevel: 46 }]),\n\tvalue: SpellPowerBuff.GreaterArcaneElixir,\n};\nexport const ArcaneElixir: ConsumableInputConfig<SpellPowerBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 9155, minLevel: 37 }]),\n\tvalue: SpellPowerBuff.ArcaneElixir,\n};\nexport const LesserArcaneElixir: ConsumableInputConfig<SpellPowerBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 217398, minLevel: 28 }]),\n\tvalue: SpellPowerBuff.LesserArcaneElixir,\n};\n\nexport const SPELL_POWER_CONFIG: ConsumableStatOption<SpellPowerBuff>[] = [\n\t{ config: GreaterArcaneElixir, stats: [Stat.StatSpellPower] },\n\t{ config: ArcaneElixir, stats: [Stat.StatSpellPower] },\n\t{ config: LesserArcaneElixir, stats: [Stat.StatSpellPower] },\n];\n\nexport const makeSpellPowerConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'spellPowerBuff' });\n\n// Fire\n// Original lvl 40 not obtainable in Phase 3\nexport const ElixirOfGreaterFirepower: ConsumableInputConfig<FirePowerBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 21546, minLevel: 51 }]),\n\tvalue: FirePowerBuff.ElixirOfGreaterFirepower,\n};\nexport const ElixirOfFirepower: ConsumableInputConfig<FirePowerBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 6373, minLevel: 18 }]),\n\tvalue: FirePowerBuff.ElixirOfFirepower,\n};\n\nexport const FIRE_POWER_CONFIG: ConsumableStatOption<FirePowerBuff>[] = [\n\t{ config: ElixirOfGreaterFirepower, stats: [Stat.StatFirePower] },\n\t{ config: ElixirOfFirepower, stats: [Stat.StatFirePower] },\n];\n\nexport const makeFirePowerConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'firePowerBuff' });\n\n// Frost\nexport const ElixirOfFrostPower: ConsumableInputConfig<FrostPowerBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 17708, minLevel: 40 }]),\n\tvalue: FrostPowerBuff.ElixirOfFrostPower,\n};\n\nexport const FROST_POWER_CONFIG: ConsumableStatOption<FrostPowerBuff>[] = [{ config: ElixirOfFrostPower, stats: [Stat.StatFrostPower] }];\n\nexport const makeFrostPowerConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'frostPowerBuff' });\n\n// Shadow\nexport const ElixirOfShadowPower: ConsumableInputConfig<ShadowPowerBuff> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 9264, minLevel: 40 }]),\n\tvalue: ShadowPowerBuff.ElixirOfShadowPower,\n};\n\nexport const SHADOW_POWER_CONFIG: ConsumableStatOption<ShadowPowerBuff>[] = [{ config: ElixirOfShadowPower, stats: [Stat.StatShadowPower] }];\n\nexport const makeShadowPowerConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'shadowPowerBuff' });\n\n// MP5\n// Original lvl 40 but not obtainable in Phase 3\nexport const MagebloodPotion: ConsumableInputConfig<ManaRegenElixir> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20007, minLevel: 51 }]),\n\tvalue: ManaRegenElixir.MagebloodPotion,\n};\n\nexport const MP5_CONFIG: ConsumableStatOption<ManaRegenElixir>[] = [{ config: MagebloodPotion, stats: [Stat.StatMP5] }];\n\nexport const makeMp5ConsumeInput = makeConsumeInputFactory({ consumesFieldName: 'manaRegenElixir' });\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Weapon Imbues\n///////////////////////////////////////////////////////////////////////////\n\n// Windfury (Buff)\nexport const Windfury: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player =>\n\t\tplayer.getMatchingSpellActionId([\n\t\t\t{ id: 8516, minLevel: 32, maxLevel: 41 },\n\t\t\t{ id: 10608, minLevel: 42, maxLevel: 51 },\n\t\t\t{ id: 10610, minLevel: 52 },\n\t\t]),\n\tvalue: WeaponImbue.Windfury,\n};\n\n// Wild Strikes\nexport const WildStrikes: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: () => ActionId.fromSpellId(407975),\n\tvalue: WeaponImbue.WildStrikes,\n};\n\n// Other Imbues\n\n// Wizard Oils\n// Original lvl 45 but not obtainable in Phase 3\nexport const BrillianWizardOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20749, minLevel: 51 }]),\n\tvalue: WeaponImbue.BrillianWizardOil,\n};\n// Original lvl 45 but not obtainable in Phase 3\nexport const WizardOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20750, minLevel: 51 }]),\n\tvalue: WeaponImbue.WizardOil,\n};\nexport const LesserWizardOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20746, minLevel: 30 }]),\n\tvalue: WeaponImbue.LesserWizardOil,\n};\nexport const MinorWizardOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20744, minLevel: 5 }]),\n\tvalue: WeaponImbue.MinorWizardOil,\n};\n\n// Mana Oils\n// Original lvl 45 but not obtainable in Phase 3\nexport const BrilliantManaOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20748, minLevel: 51 }]),\n\tvalue: WeaponImbue.BrilliantManaOil,\n};\n// Original lvl 40 but not obtainable in Phase 3\nexport const LesserManaOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20747, minLevel: 51 }]),\n\tvalue: WeaponImbue.LesserManaOil,\n};\nexport const MinorManaOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 20745, minLevel: 20 }]),\n\tvalue: WeaponImbue.MinorManaOil,\n};\nexport const BlackfathomManaOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 211848, minLevel: 25 }]),\n\tvalue: WeaponImbue.BlackfathomManaOil,\n};\n\n// Sharpening Stones\n// Original lvl 50 but not obtainable in Phase 3\nexport const ElementalSharpeningStone = (slot: ItemSlot): ConsumableInputConfig<WeaponImbue> => {\n\treturn {\n\t\tactionId: player => player.getMatchingItemActionId([{ id: 18262, minLevel: 51 }]),\n\t\tvalue: WeaponImbue.ElementalSharpeningStone,\n\t\tshowWhen: player => isSharpWeaponType(player.getEquippedItem(slot)?.item.weaponType ?? WeaponType.WeaponTypeUnknown),\n\t};\n};\nexport const DenseSharpeningStone = (slot: ItemSlot): ConsumableInputConfig<WeaponImbue> => {\n\treturn {\n\t\tactionId: player => player.getMatchingItemActionId([{ id: 12404, minLevel: 35 }]),\n\t\tvalue: WeaponImbue.DenseSharpeningStone,\n\t\tshowWhen: player => isSharpWeaponType(player.getEquippedItem(slot)?.item.weaponType ?? WeaponType.WeaponTypeUnknown),\n\t};\n};\nexport const SolidSharpeningStone = (slot: ItemSlot): ConsumableInputConfig<WeaponImbue> => {\n\treturn {\n\t\tactionId: player => player.getMatchingItemActionId([{ id: 7964, minLevel: 35 }]),\n\t\tvalue: WeaponImbue.SolidSharpeningStone,\n\t\tshowWhen: player => isSharpWeaponType(player.getEquippedItem(slot)?.item.weaponType ?? WeaponType.WeaponTypeUnknown),\n\t};\n};\nexport const BlackfathomSharpeningStone = (slot: ItemSlot): ConsumableInputConfig<WeaponImbue> => {\n\treturn {\n\t\tactionId: () => ActionId.fromItemId(211845),\n\t\tvalue: WeaponImbue.BlackfathomSharpeningStone,\n\t\tshowWhen: player => isSharpWeaponType(player.getEquippedItem(slot)?.item.weaponType ?? WeaponType.WeaponTypeUnknown),\n\t};\n};\n\n// Weightstones\nexport const DenseWeightstone = (slot: ItemSlot): ConsumableInputConfig<WeaponImbue> => {\n\treturn {\n\t\tactionId: player => player.getMatchingItemActionId([{ id: 12643, minLevel: 35 }]),\n\t\tvalue: WeaponImbue.DenseWeightstone,\n\t\tshowWhen: player => isBluntWeaponType(player.getEquippedItem(slot)?.item.weaponType ?? WeaponType.WeaponTypeUnknown),\n\t};\n};\nexport const SolidWeightstone = (slot: ItemSlot): ConsumableInputConfig<WeaponImbue> => {\n\treturn {\n\t\tactionId: player => player.getMatchingItemActionId([{ id: 7965, minLevel: 35 }]),\n\t\tvalue: WeaponImbue.SolidWeightstone,\n\t\tshowWhen: player => isBluntWeaponType(player.getEquippedItem(slot)?.item.weaponType ?? WeaponType.WeaponTypeUnknown),\n\t};\n};\n\n// Spell Oils\nexport const ShadowOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 3824, minLevel: 25 }]),\n\tvalue: WeaponImbue.ShadowOil,\n};\nexport const FrostOil: ConsumableInputConfig<WeaponImbue> = {\n\tactionId: player => player.getMatchingItemActionId([{ id: 3829, minLevel: 40 }]),\n\tvalue: WeaponImbue.FrostOil,\n};\n\nconst SHAMAN_IMBUES: ConsumableStatOption<WeaponImbue>[] = [\n\t{ config: RockbiterWeaponImbue, stats: [] },\n\t{ config: FlametongueWeaponImbue, stats: [] },\n\t{ config: FrostbrandWeaponImbue, stats: [] },\n\t{ config: WindfuryWeaponImbue, stats: [] },\n];\n\nconst ROGUE_IMBUES: ConsumableStatOption<WeaponImbue>[] = [\n\t{ config: InstantPoisonWeaponImbue, stats: [] },\n\t{ config: DeadlyPoisonWeaponImbue, stats: [] },\n\t{ config: WoundPoisonWeaponImbue, stats: [] },\n];\n\nconst CONSUMABLES_IMBUES = (slot: ItemSlot): ConsumableStatOption<WeaponImbue>[] => [\n\t{ config: BrillianWizardOil, stats: [Stat.StatSpellPower] },\n\t{ config: WizardOil, stats: [Stat.StatSpellPower] },\n\t{ config: LesserWizardOil, stats: [Stat.StatSpellPower] },\n\t{ config: MinorWizardOil, stats: [Stat.StatSpellPower] },\n\n\t{ config: BrilliantManaOil, stats: [Stat.StatHealingPower, Stat.StatSpellPower] },\n\t{ config: LesserManaOil, stats: [Stat.StatHealingPower, Stat.StatSpellPower] },\n\t{ config: MinorManaOil, stats: [Stat.StatHealingPower, Stat.StatSpellPower] },\n\t{ config: BlackfathomManaOil, stats: [Stat.StatSpellPower, Stat.StatMP5] },\n\n\t{ config: ElementalSharpeningStone(slot), stats: [Stat.StatAttackPower] },\n\t{ config: DenseSharpeningStone(slot), stats: [Stat.StatAttackPower] },\n\t{ config: SolidSharpeningStone(slot), stats: [Stat.StatAttackPower] },\n\t{ config: BlackfathomSharpeningStone(slot), stats: [Stat.StatMeleeHit] },\n\n\t{ config: DenseWeightstone(slot), stats: [Stat.StatAttackPower] },\n\t{ config: SolidWeightstone(slot), stats: [Stat.StatAttackPower] },\n\n\t{ config: ShadowOil, stats: [Stat.StatAttackPower] },\n\t{ config: FrostOil, stats: [Stat.StatAttackPower] },\n];\n\nexport const WEAPON_IMBUES_OH_CONFIG: ConsumableStatOption<WeaponImbue>[] = [\n\t...ROGUE_IMBUES,\n\t...SHAMAN_IMBUES,\n\t...CONSUMABLES_IMBUES(ItemSlot.ItemSlotOffHand),\n];\n\nexport const WEAPON_IMBUES_MH_CONFIG: ConsumableStatOption<WeaponImbue>[] = [\n\t...ROGUE_IMBUES,\n\t...SHAMAN_IMBUES,\n\t{ config: Windfury, stats: [Stat.StatMeleeHit] },\n\t{ config: WildStrikes, stats: [Stat.StatMeleeHit] },\n\t...CONSUMABLES_IMBUES(ItemSlot.ItemSlotMainHand),\n];\n\nexport const makeMainHandImbuesInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'mainHandImbue',\n\tshowWhen: player => !!player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand),\n});\nexport const makeOffHandImbuesInput = makeConsumeInputFactory({\n\tconsumesFieldName: 'offHandImbue',\n\tshowWhen: player => {\n\t\treturn ![WeaponType.WeaponTypeUnknown, WeaponType.WeaponTypeOffHand, WeaponType.WeaponTypeShield].includes(\n\t\t\tplayer.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType ?? WeaponType.WeaponTypeUnknown,\n\t\t);\n\t},\n});\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\nexport interface EnumValueConfig {\n\tname: string,\n\tvalue: number,\n\ttooltip?: string,\n}\n\nexport interface EnumPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tvalues: Array<EnumValueConfig>;\n}\n\nexport class EnumPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly selectElem: HTMLSelectElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: EnumPickerConfig<ModObject>) {\n\t\tsuper(parent, 'enum-picker-root', modObject, config);\n\n\t\tthis.selectElem = document.createElement('select');\n\t\tthis.selectElem.classList.add('enum-picker-selector', 'form-select');\n\n\t\tconfig.values.forEach((value) => {\n\t\t\tconst option = document.createElement('option');\n\t\t\toption.value = String(value.value);\n\t\t\toption.textContent = value.name;\n\t\t\tthis.selectElem.appendChild(option);\n\n\t\t\tif (value.tooltip) {\n\t\t\t\toption.title = value.tooltip;\n\t\t\t}\n\t\t});\n\t\tthis.rootElem.appendChild(this.selectElem);\n\n\t\tthis.init();\n\n\t\tthis.selectElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.selectElem;\n\t}\n\n\tgetInputValue(): number {\n\t\treturn parseInt(this.selectElem.value);\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tthis.selectElem.value = String(newValue);\n\t}\n}\n","import { BooleanPicker } from '../components/boolean_picker.js';\nimport { CURRENT_LEVEL_CAP } from '../constants/mechanics.js';\nimport { CURRENT_PHASE } from '../constants/other.js';\nimport { Player } from '../player.js';\nimport { Spec, UnitReference } from '../proto/common.js';\nimport { emptyUnitReference } from '../proto_utils/utils.js';\nimport { Sim } from '../sim.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { EnumPicker } from './enum_picker.js';\n\nexport function makeShow1hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['show-1h-weapons-selector', 'mb-0'],\n\t\tlabel: '1H',\n\t\tinline: true,\n\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getFilters().oneHandedWeapons,\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tconst filters = sim.getFilters();\n\t\t\tfilters.oneHandedWeapons = newValue;\n\t\t\tsim.setFilters(eventID, filters);\n\t\t},\n\t});\n}\n\nexport function makeShow2hWeaponsSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['show-2h-weapons-selector', 'mb-0'],\n\t\tlabel: '2H',\n\t\tinline: true,\n\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getFilters().twoHandedWeapons,\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tconst filters = sim.getFilters();\n\t\t\tfilters.twoHandedWeapons = newValue;\n\t\t\tsim.setFilters(eventID, filters);\n\t\t},\n\t});\n}\n\nexport function makeShowEPValuesSelector(parent: HTMLElement, sim: Sim): BooleanPicker<Sim> {\n\treturn new BooleanPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['show-ep-values-selector', 'input-inline', 'mb-0'],\n\t\tlabel: 'Show EP',\n\t\tinline: true,\n\t\tchangedEvent: (sim: Sim) => sim.showEPValuesChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getShowEPValues(),\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\tsim.setShowEPValues(eventID, newValue);\n\t\t},\n\t});\n}\n\nexport function makePhaseSelector(parent: HTMLElement, sim: Sim): EnumPicker<Sim> {\n\treturn new EnumPicker<Sim>(parent, sim, {\n\t\textraCssClasses: ['phase-selector'],\n\t\tvalues: [\n\t\t\t{ name: 'Phase 5', value: 5, level: 60 },\n\t\t\t{ name: 'Phase 4', value: 4, level: 60 },\n\t\t\t{ name: 'Phase 3', value: 3, level: 50 },\n\t\t\t{ name: 'Phase 2', value: 2, level: 40 },\n\t\t\t{ name: 'Phase 1', value: 1, level: 25 },\n\t\t].filter(p => p.value <= CURRENT_PHASE && p.level <= (sim.raid.getPlayer(0)?.getLevel() ?? CURRENT_LEVEL_CAP)),\n\t\tchangedEvent: (sim: Sim) => sim.phaseChangeEmitter,\n\t\tgetValue: (sim: Sim) => sim.getPhase(),\n\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\tsim.setPhase(eventID, newValue);\n\t\t},\n\t});\n}\n\nexport const ReactionTime = {\n\ttype: 'number' as const,\n\tlabel: 'Reaction Time',\n\tlabelTooltip: \"Reaction time of the player, in milliseconds. Used with certain APL values (such as 'Aura Is Active With Reaction Time').\",\n\tchangedEvent: (player: Player<any>) => player.miscOptionsChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getReactionTime(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setReactionTime(eventID, newValue);\n\t},\n};\n\nexport const ChannelClipDelay = {\n\ttype: 'number' as const,\n\tlabel: 'Channel Clip Delay',\n\tlabelTooltip:\n\t\t'Clip delay following channeled spells, in milliseconds. This delay occurs following any full or partial channel ending after the GCD becomes available, due to the player not being able to queue the next spell.',\n\tchangedEvent: (player: Player<any>) => player.miscOptionsChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getChannelClipDelay(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setChannelClipDelay(eventID, newValue);\n\t},\n};\n\nexport const InFrontOfTarget = {\n\ttype: 'boolean' as const,\n\tlabel: 'In Front of Target',\n\tlabelTooltip: 'Stand in front of the target, causing Blocks and Parries to be included in the attack table.',\n\tchangedEvent: (player: Player<any>) => player.inFrontOfTargetChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getInFrontOfTarget(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: boolean) => {\n\t\tplayer.setInFrontOfTarget(eventID, newValue);\n\t},\n};\n\nexport const DistanceFromTarget = {\n\ttype: 'number' as const,\n\tlabel: 'Distance From Target',\n\tlabelTooltip: 'Distance from targets, in yards. Used to calculate travel time for certain spells.',\n\tchangedEvent: (player: Player<any>) => player.distanceFromTargetChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getDistanceFromTarget(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setDistanceFromTarget(eventID, newValue);\n\t},\n};\n\nexport const IsbSbFrequencey = {\n\ttype: 'number' as const,\n\tlabel: 'SB Frequency',\n\tlabelTooltip: 'How often a Shadow Bolt is cast by the external warlock.',\n\tfloat: true,\n\tdefaultValue: 3.0,\n\tinline: true,\n\tchangedEvent: (player: Player<any>) => TypedEvent.onAny([player.changeEmitter, player.getRaid()!.debuffsChangeEmitter]),\n\tgetValue: (player: Player<any>) => player.getIsbSbFrequency(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setIsbSbFrequency(eventID, newValue);\n\t},\n\tshowWhen: (player: Player<any>) => player.getRaid()?.getDebuffs().improvedShadowBolt == true,\n};\n\nexport const IsbCrit = {\n\ttype: 'number' as const,\n\tlabel: 'SB Crit',\n\tlabelTooltip: 'How often a Shadow Bolt from external warlock is a crit.',\n\tfloat: true,\n\tdefaultValue: 25.0,\n\tinline: true,\n\tchangedEvent: (player: Player<any>) => TypedEvent.onAny([player.changeEmitter, player.getRaid()!.debuffsChangeEmitter]),\n\tgetValue: (player: Player<any>) => player.getIsbCrit(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setIsbCrit(eventID, newValue);\n\t},\n\tshowWhen: (player: Player<any>) => player.getRaid()?.getDebuffs().improvedShadowBolt == true,\n};\n\nexport const IsbWarlocks = {\n\ttype: 'number' as const,\n\tlabel: 'SB Warlocks',\n\tlabelTooltip: 'Number of ISB warlocks.',\n\tdefaultValue: 1.0,\n\tinline: true,\n\tchangedEvent: (player: Player<any>) => TypedEvent.onAny([player.changeEmitter, player.getRaid()!.debuffsChangeEmitter]),\n\tgetValue: (player: Player<any>) => player.getIsbWarlocks(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setIsbWarlocks(eventID, newValue);\n\t},\n\tshowWhen: (player: Player<any>) => player.getRaid()?.getDebuffs().improvedShadowBolt == true,\n};\n\nexport const IsbSpriests = {\n\ttype: 'number' as const,\n\tlabel: 'Shadow Priests',\n\tlabelTooltip: 'Number of other shadow priests.',\n\tinline: true,\n\tchangedEvent: (player: Player<any>) => TypedEvent.onAny([player.changeEmitter, player.getRaid()!.debuffsChangeEmitter]),\n\tgetValue: (player: Player<any>) => player.getIsbSpriests(),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tplayer.setIsbSpriests(eventID, newValue);\n\t},\n\tshowWhen: (player: Player<any>) => player.getRaid()?.getDebuffs().improvedShadowBolt == true || (player as Player<Spec.SpecWarlock>)?.getTalents().improvedShadowBolt > 0,\n};\n\nexport const IsbConfig = {\n\ttooltip: 'Improved Shadow Bolt debuff configuration',\n\tinputs: [IsbSbFrequencey, IsbCrit, IsbWarlocks, IsbSpriests]\n}\n\nexport const TankAssignment = {\n\ttype: 'enum' as const,\n\textraCssClasses: ['tank-selector', 'threat-metrics', 'within-raid-sim-hide'],\n\tlabel: 'Tank Assignment',\n\tlabelTooltip:\n\t\t'Determines which mobs will be tanked. Most mobs default to targeting the Main Tank, but in preset multi-target encounters this is not always true.',\n\tvalues: [\n\t\t{ name: 'None', value: -1 },\n\t\t{ name: 'Main Tank', value: 0 },\n\t\t{ name: 'Tank 2', value: 1 },\n\t\t{ name: 'Tank 3', value: 2 },\n\t\t{ name: 'Tank 4', value: 3 },\n\t],\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.tanksChangeEmitter,\n\tgetValue: (player: Player<any>) => (player.getRaid()?.getTanks() || []).findIndex(tank => UnitReference.equals(tank, player.makeUnitReference())),\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst newTanks = [];\n\t\tif (newValue != -1) {\n\t\t\tfor (let i = 0; i < newValue; i++) {\n\t\t\t\tnewTanks.push(emptyUnitReference());\n\t\t\t}\n\t\t\tnewTanks.push(player.makeUnitReference());\n\t\t}\n\t\tplayer.getRaid()!.setTanks(eventID, newTanks);\n\t},\n};\n\nexport const IncomingHps = {\n\ttype: 'number' as const,\n\tlabel: 'Incoming HPS',\n\tlabelTooltip: `\n\t\t<p>Average amount of healing received per second. Used for calculating chance of death.</p>\n\t\t<p>If set to 0, defaults to 17.5% of the primary target's base DPS.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().hps,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.hps = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => UnitReference.equals(tank, player.makeUnitReference())) != null,\n};\n\nexport const HealingCadence = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'Healing Cadence',\n\tlabelTooltip: `\n\t\t<p>How often the incoming heal 'ticks', in seconds. Generally, longer durations favor Effective Hit Points (EHP) for minimizing Chance of Death, while shorter durations favor avoidance.</p>\n\t\t<p>Example: if Incoming HPS is set to 1000 and this is set to 1s, then every 1s a heal will be received for 1000. If this is instead set to 2s, then every 2s a heal will be recieved for 2000.</p>\n\t\t<p>If set to 0, defaults to 1.5 times the primary target's base swing timer, and half that for dual wielding targets.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().cadenceSeconds,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.cadenceSeconds = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => UnitReference.equals(tank, player.makeUnitReference())) != null,\n};\n\nexport const HealingCadenceVariation = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'Cadence +/-',\n\tlabelTooltip: `\n\t\t<p>Magnitude of random variation in healing intervals, in seconds.</p>\n\t\t<p>Example: if Healing Cadence is set to 1s with 0.5s variation, then the interval between successive heals will vary uniformly between 0.5 and 1.5s. If the variation is instead set to 2s, then 50% of healing intervals will fall between 0s and 1s, and the other 50% will fall between 1s and 3s.</p>\n\t\t<p>The amount of healing per 'tick' is automatically scaled up or down based on the randomized time since the last tick, so as to keep HPS constant.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().cadenceVariation,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.cadenceVariation = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => UnitReference.equals(tank, player.makeUnitReference())) != null,\n};\n\nexport const BurstWindow = {\n\ttype: 'number' as const,\n\tfloat: false,\n\tlabel: 'TMI Burst Window',\n\tlabelTooltip: `\n\t\t<p>Size in whole seconds of the burst window for calculating TMI. It is important to use a consistent setting when comparing this metric.</p>\n\t\t<p>Default is 6 seconds. If set to 0, TMI calculations are disabled.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.getRaid()!.changeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().burstWindow,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.burstWindow = newValue;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n\tenableWhen: (player: Player<any>) => (player.getRaid()?.getTanks() || []).find(tank => UnitReference.equals(tank, player.makeUnitReference())) != null,\n};\n\nexport const HpPercentForDefensives = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'HP % for Defensive CDs',\n\tlabelTooltip: `\n\t\t<p>% of Maximum Health, below which defensive cooldowns are allowed to be used.</p>\n\t\t<p>If set to 0, this restriction is disabled.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getSimpleCooldowns().hpPercentForDefensives * 100,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst cooldowns = player.getSimpleCooldowns();\n\t\tcooldowns.hpPercentForDefensives = newValue / 100;\n\t\tplayer.setSimpleCooldowns(eventID, cooldowns);\n\t},\n};\n\nexport const InspirationUptime = {\n\ttype: 'number' as const,\n\tfloat: true,\n\tlabel: 'Inspiration % Uptime',\n\tlabelTooltip: `\n\t\t<p>% average of Encounter Duration, during which you have the Inspiration buff.</p>\n\t\t<p>If set to 0, the buff isn't applied.</p>\n\t`,\n\tchangedEvent: (player: Player<any>) => player.healingModelChangeEmitter,\n\tgetValue: (player: Player<any>) => player.getHealingModel().inspirationUptime * 100,\n\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\tconst healingModel = player.getHealingModel();\n\t\thealingModel.inspirationUptime = newValue / 100;\n\t\tplayer.setHealingModel(eventID, healingModel);\n\t},\n};\n","import { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number picker.\n */\nexport interface NumberPickerConfig<ModObject> extends InputConfig<ModObject, number> {\n\tfloat?: boolean,\n\tpositive?: boolean,\n}\n\n// UI element for picking an arbitrary number field.\nexport class NumberPicker<ModObject> extends Input<ModObject, number> {\n\tprivate readonly inputElem: HTMLInputElement;\n\tprivate float: boolean;\n\tprivate positive: boolean;\n\n\tconstructor(parent: HTMLElement | null, modObject: ModObject, config: NumberPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-picker-root', modObject, config);\n\t\tthis.float = config.float || false;\n\t\tthis.positive = config.positive || false;\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'text';\n\t\tthis.inputElem.classList.add('form-control', 'number-picker-input');\n\n\t\tif (this.positive) {\n\t\t\tthis.inputElem.onchange = e => {\n\t\t\t\tif (this.float) {\n\t\t\t\t\tthis.inputElem.value = Math.abs(parseFloat(this.inputElem.value)).toFixed(2);\n\t\t\t\t} else {\n\t\t\t\t\tthis.inputElem.value = Math.abs(parseInt(this.inputElem.value)).toString();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.rootElem.appendChild(this.inputElem);\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\n\t\tthis.inputElem.addEventListener('input', event => {\n\t\t\tthis.updateSize();\n\t\t});\n\t\tthis.updateSize();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): number {\n\t\tif (this.float) {\n\t\t\treturn parseFloat(this.inputElem.value || '') || 0;\n\t\t} else {\n\t\t\treturn parseInt(this.inputElem.value || '') || 0;\n\t\t}\n\t}\n\n\tsetInputValue(newValue: number) {\n\t\tif (this.float)\n\t\t\tthis.inputElem.value = newValue.toFixed(2);\n\t\telse\n\t\t\tthis.inputElem.value = String(newValue);\n\t}\n\n\tprivate updateSize() {\n\t\tconst newSize = Math.max(3, this.inputElem.value.length);\n\t\tif (this.inputElem.size != newSize)\n\t\t\tthis.inputElem.size = newSize;\n\t}\n}\n","import { Popover, Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment, ref } from 'tsx-vanilla';\n\nimport { Player } from '..//player.js';\nimport { Class, PseudoStat, Spec, Stat } from '..//proto/common.js';\nimport { getClassStatName, statOrder } from '..//proto_utils/names.js';\nimport { Stats } from '..//proto_utils/stats.js';\nimport { EventID, TypedEvent } from '..//typed_event.js';\nimport * as Mechanics from '../constants/mechanics.js';\nimport { Component } from './component.js';\nimport { NumberPicker } from './number_picker';\n\nexport type StatMods = { talents: Stats };\n\nexport class CharacterStats extends Component {\n\treadonly stats: Array<Stat>;\n\treadonly valueElems: Array<HTMLTableCellElement>;\n\treadonly meleeCritCapValueElem: HTMLTableCellElement | undefined;\n\n\tprivate readonly player: Player<any>;\n\tprivate readonly modifyDisplayStats?: (player: Player<any>) => StatMods;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, stats: Array<Stat>, modifyDisplayStats?: (player: Player<any>) => StatMods) {\n\t\tsuper(parent, 'character-stats-root');\n\t\tthis.stats = statOrder.filter(stat => stats.includes(stat));\n\t\tthis.player = player;\n\t\tthis.modifyDisplayStats = modifyDisplayStats;\n\n\t\tconst playerLevelRef = ref<HTMLSpanElement>();\n\t\tthis.player.levelChangeEmitter.on(() => (playerLevelRef.value!.textContent = `Level ${player.getLevel()}`));\n\n\t\tthis.rootElem.appendChild(\n\t\t\t<label className=\"character-stats-label\">\n\t\t\t\t<span>Stats</span>\n\t\t\t\t<span ref={playerLevelRef} className=\"ms-auto\">\n\t\t\t\t\tLevel {player.getLevel()}\n\t\t\t\t</span>\n\t\t\t</label>,\n\t\t);\n\n\t\tconst table = <table className=\"character-stats-table\"></table>;\n\t\tthis.rootElem.appendChild(table);\n\n\t\tthis.valueElems = [];\n\t\tthis.stats.forEach(stat => {\n\t\t\tconst statName = getClassStatName(stat, player.getClass());\n\n\t\t\tconst row = (\n\t\t\t\t<tr className=\"character-stats-table-row\">\n\t\t\t\t\t<td className=\"character-stats-table-label\">{statName}</td>\n\t\t\t\t\t<td className=\"character-stats-table-value\">{this.bonusStatsLink(stat)}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t\ttable.appendChild(row);\n\n\t\t\tconst valueElem = row.getElementsByClassName('character-stats-table-value')[0] as HTMLTableCellElement;\n\t\t\tthis.valueElems.push(valueElem);\n\t\t});\n\n\t\tif (this.shouldShowMeleeCritCap(player)) {\n\t\t\tconst row = (\n\t\t\t\t<tr className=\"character-stats-table-row\">\n\t\t\t\t\t<td className=\"character-stats-table-label\">Melee Crit Cap</td>\n\t\t\t\t\t<td className=\"character-stats-table-value\"></td>\n\t\t\t\t</tr>\n\t\t\t);\n\n\t\t\ttable.appendChild(row);\n\t\t\tthis.meleeCritCapValueElem = row.getElementsByClassName('character-stats-table-value')[0] as HTMLTableCellElement;\n\t\t} else {\n\t\t\tthis.meleeCritCapValueElem = undefined;\n\t\t}\n\n\t\tthis.updateStats(player);\n\t\tTypedEvent.onAny([player.currentStatsEmitter, player.sim.changeEmitter, player.talentsChangeEmitter]).on(() => {\n\t\t\tthis.updateStats(player);\n\t\t});\n\t}\n\n\tprivate updateStats(player: Player<any>) {\n\t\tconst playerStats = player.getCurrentStats();\n\n\t\tconst statMods = this.modifyDisplayStats\n\t\t\t? this.modifyDisplayStats(this.player)\n\t\t\t: {\n\t\t\t\t\ttalents: new Stats(),\n\t\t\t\t};\n\n\t\tconst baseStats = Stats.fromProto(playerStats.baseStats);\n\t\tconst gearStats = Stats.fromProto(playerStats.gearStats);\n\t\tconst talentsStats = Stats.fromProto(playerStats.talentsStats);\n\t\tconst buffsStats = Stats.fromProto(playerStats.buffsStats);\n\t\tconst consumesStats = Stats.fromProto(playerStats.consumesStats);\n\t\tconst debuffStats = this.getDebuffStats();\n\t\tconst bonusStats = player.getBonusStats();\n\n\t\tconst baseDelta = baseStats;\n\t\tconst gearDelta = gearStats.subtract(baseStats).subtract(bonusStats);\n\t\tconst talentsDelta = talentsStats.subtract(gearStats).add(statMods.talents);\n\t\tconst buffsDelta = buffsStats.subtract(talentsStats);\n\t\tconst consumesDelta = consumesStats.subtract(buffsStats);\n\n\t\tconst finalStats = Stats.fromProto(playerStats.finalStats).add(statMods.talents).add(debuffStats);\n\n\t\tthis.stats.forEach((stat, idx) => {\n\t\t\tconst valueElem = (\n\t\t\t\t<a href=\"javascript:void(0)\" className=\"stat-value-link\" attributes={{ role: 'button' }}>\n\t\t\t\t\t{this.statDisplayString(finalStats, finalStats, stat)}\n\t\t\t\t</a>\n\t\t\t);\n\n\t\t\tthis.valueElems[idx].querySelector('.stat-value-link')?.remove();\n\t\t\tthis.valueElems[idx].prepend(valueElem);\n\n\t\t\tconst bonusStatValue = bonusStats.getStat(stat);\n\n\t\t\tif (bonusStatValue == 0) {\n\t\t\t\tvalueElem.classList.add('text-white');\n\t\t\t} else if (bonusStatValue > 0) {\n\t\t\t\tvalueElem.classList.add('text-success');\n\t\t\t} else if (bonusStatValue < 0) {\n\t\t\t\tvalueElem.classList.add('text-danger');\n\t\t\t}\n\n\t\t\tconst tooltipContent = (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Base:</span>\n\t\t\t\t\t\t<span>{this.statDisplayString(baseStats, baseDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Gear:</span>\n\t\t\t\t\t\t<span>{this.statDisplayString(gearStats, gearDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Talents:</span>\n\t\t\t\t\t\t<span>{this.statDisplayString(talentsStats, talentsDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Buffs:</span>\n\t\t\t\t\t\t<span>{this.statDisplayString(buffsStats, buffsDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Consumes:</span>\n\t\t\t\t\t\t<span>{this.statDisplayString(consumesStats, consumesDelta, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{debuffStats.getStat(stat) != 0 && (\n\t\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t\t<span>Debuffs:</span>\n\t\t\t\t\t\t\t<span>{this.statDisplayString(debuffStats, debuffStats, stat)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{bonusStatValue != 0 && (\n\t\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t\t<span>Bonus:</span>\n\t\t\t\t\t\t\t<span>{this.statDisplayString(bonusStats, bonusStats, stat)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Total:</span>\n\t\t\t\t\t\t<span>{this.statDisplayString(finalStats, finalStats, stat)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tTooltip.getOrCreateInstance(valueElem, {\n\t\t\t\ttitle: tooltipContent,\n\t\t\t\thtml: true,\n\t\t\t});\n\t\t});\n\n\t\tif (this.meleeCritCapValueElem) {\n\t\t\tconst meleeCritCapInfo = player.getMeleeCritCapInfo();\n\n\t\t\tconst valueElem = (\n\t\t\t\t<a href=\"javascript:void(0)\" className=\"stat-value-link\" attributes={{ role: 'button' }}>\n\t\t\t\t\t{`${this.meleeCritCapDisplayString(player, finalStats)} `}\n\t\t\t\t</a>\n\t\t\t);\n\n\t\t\tconst capDelta = meleeCritCapInfo.playerCritCapDelta;\n\t\t\tif (capDelta == 0) {\n\t\t\t\tvalueElem.classList.add('text-white');\n\t\t\t} else if (capDelta > 0) {\n\t\t\t\tvalueElem.classList.add('text-danger');\n\t\t\t} else if (capDelta < 0) {\n\t\t\t\tvalueElem.classList.add('text-success');\n\t\t\t}\n\n\t\t\tthis.meleeCritCapValueElem.querySelector('.stat-value-link')?.remove();\n\t\t\tthis.meleeCritCapValueElem.prepend(valueElem);\n\n\t\t\tconst tooltipContent = (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Glancing:</span>\n\t\t\t\t\t\t<span>{`${meleeCritCapInfo.glancing.toFixed(2)}%`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Suppression:</span>\n\t\t\t\t\t\t<span>{`${meleeCritCapInfo.suppression.toFixed(2)}%`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>To Hit Cap:</span>\n\t\t\t\t\t\t<span>{`${meleeCritCapInfo.remainingMeleeHitCap.toFixed(2)}%`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>To Exp Cap:</span>\n\t\t\t\t\t\t<span>{`${meleeCritCapInfo.remainingExpertiseCap.toFixed(2)}%`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Debuffs:</span>\n\t\t\t\t\t\t<span>{`${meleeCritCapInfo.debuffCrit.toFixed(2)}%`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{meleeCritCapInfo.specSpecificOffset != 0 && (\n\t\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t\t<span>Spec Offsets:</span>\n\t\t\t\t\t\t\t<span>{`${meleeCritCapInfo.specSpecificOffset.toFixed(2)}%`}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Final Crit Cap:</span>\n\t\t\t\t\t\t<span>{`${meleeCritCapInfo.baseCritCap.toFixed(2)}%`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div className=\"character-stats-tooltip-row\">\n\t\t\t\t\t\t<span>Can Raise By:</span>\n\t\t\t\t\t\t<span>{`${(meleeCritCapInfo.remainingExpertiseCap + meleeCritCapInfo.remainingMeleeHitCap).toFixed(2)}%`}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\tTooltip.getOrCreateInstance(valueElem, {\n\t\t\t\ttitle: tooltipContent,\n\t\t\t\thtml: true,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate statDisplayString(stats: Stats, deltaStats: Stats, stat: Stat): string {\n\t\tlet rawValue = deltaStats.getStat(stat);\n\n\t\tif (stat == Stat.StatBlockValue) {\n\t\t\trawValue *= stats.getPseudoStat(PseudoStat.PseudoStatBlockValueMultiplier) || 1;\n\t\t}\n\n\t\tlet displayStr = String(Math.round(rawValue));\n\n\t\tif (stat == Stat.StatMeleeHit) {\n\t\t\tdisplayStr = `${(rawValue / Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%`;\n\t\t} else if (stat == Stat.StatSpellHit) {\n\t\t\tdisplayStr = `${(rawValue / Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE).toFixed(2)}%`;\n\t\t} else if (stat == Stat.StatSpellDamage) {\n\t\t\tconst spDmg = Math.round(rawValue);\n\t\t\tconst baseSp = Math.round(deltaStats.getStat(Stat.StatSpellPower));\n\t\t\tdisplayStr = baseSp + spDmg + ` (+${spDmg})`;\n\t\t} else if (\n\t\t\tstat == Stat.StatArcanePower ||\n\t\t\tstat == Stat.StatFirePower ||\n\t\t\tstat == Stat.StatFrostPower ||\n\t\t\tstat == Stat.StatHolyPower ||\n\t\t\tstat == Stat.StatNaturePower ||\n\t\t\tstat == Stat.StatShadowPower\n\t\t) {\n\t\t\tconst spDmg = Math.round(rawValue);\n\t\t\tconst baseSp = Math.round(deltaStats.getStat(Stat.StatSpellPower) + deltaStats.getStat(Stat.StatSpellDamage));\n\t\t\tdisplayStr = baseSp + spDmg + ` (+${spDmg})`;\n\t\t} else if (stat == Stat.StatMeleeCrit || stat == Stat.StatSpellCrit) {\n\t\t\tdisplayStr = `${(rawValue / Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE).toFixed(2)}%`;\n\t\t} else if (stat == Stat.StatMeleeHaste) {\n\t\t\tif ([Class.ClassDruid, Class.ClassShaman, Class.ClassPaladin].includes(this.player.getClass())) {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t} else {\n\t\t\t\tdisplayStr += ` (${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%)`;\n\t\t\t}\n\t\t} else if (stat == Stat.StatSpellHaste) {\n\t\t\tdisplayStr = `${(rawValue / Mechanics.HASTE_RATING_PER_HASTE_PERCENT).toFixed(2)}%`;\n\t\t} else if (stat == Stat.StatArmorPenetration) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.ARMOR_PEN_PER_PERCENT_ARMOR).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatExpertise) {\n\t\t\t// Expertise is not used in SoD and replaced by weapon skill\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION / 4).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatDefense) {\n\t\t\tdisplayStr += ` (${(Mechanics.MAX_CHARACTER_LEVEL * 5 + Math.floor(rawValue / Mechanics.DEFENSE_RATING_PER_DEFENSE)).toFixed(0)})`;\n\t\t} else if (stat == Stat.StatBlock) {\n\t\t\t// TODO: Figure out how to display these differently for the components than the final value\n\t\t\t//displayStr += ` (${(rawValue / Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE).toFixed(2)}%)`;\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE + Mechanics.MISS_DODGE_PARRY_BLOCK_CRIT_CHANCE_PER_DEFENSE * Math.floor(stats.getStat(Stat.StatDefense) / Mechanics.DEFENSE_RATING_PER_DEFENSE) + 5.0).toFixed(2)}%)`;\n\t\t} else if (stat == Stat.StatDodge) {\n\t\t\t//displayStr += ` (${(rawValue / Mechanics.DODGE_RATING_PER_DODGE_CHANCE).toFixed(2)}%)`;\n\t\t\tdisplayStr = `${(stats.getStat(Stat.StatDodge)).toFixed(2)}%`;\n\t\t} else if (stat == Stat.StatParry) {\n\t\t\t//displayStr += ` (${(rawValue / Mechanics.PARRY_RATING_PER_PARRY_CHANCE).toFixed(2)}%)`;\n\t\t\tdisplayStr = `${(stats.getStat(Stat.StatParry)).toFixed(2)}%`;\n\t\t} else if (stat == Stat.StatResilience) {\n\t\t\tdisplayStr += ` (${(rawValue / Mechanics.RESILIENCE_RATING_PER_CRIT_REDUCTION_CHANCE).toFixed(2)}%)`;\n\t\t}\n\n\t\treturn displayStr;\n\t}\n\n\tprivate getDebuffStats(): Stats {\n\t\tconst debuffStats = new Stats();\n\n\t\t// TODO: Classic ui debuffs\n\t\t// const debuffs = this.player.sim.raid.getDebuffs();\n\t\t// if (debuffs.improvedScorch || debuffs.wintersChill || debuffs.shadowMastery) {\n\t\t// \tdebuffStats = debuffStats.addStat(Stat.StatSpellCrit, 5 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\t// }\n\n\t\treturn debuffStats;\n\t}\n\n\tprivate bonusStatsLink(stat: Stat): HTMLElement {\n\t\tconst statName = getClassStatName(stat, this.player.getClass());\n\n\t\tconst link = (\n\t\t\t<a href=\"javascript:void(0)\" className=\"add-bonus-stats ms-2\" dataset={{ bsToggle: 'popover' }} attributes={{ role: 'button' }}>\n\t\t\t\t<i className=\"fas fa-plus-minus\"></i>\n\t\t\t</a>\n\t\t);\n\n\t\tTooltip.getOrCreateInstance(link.children[0], { title: `Bonus ${statName}` });\n\n\t\tlet popover: Popover | null = null;\n\n\t\tconst picker = new NumberPicker(null, this.player, {\n\t\t\tlabel: `Bonus ${statName}`,\n\t\t\textraCssClasses: ['mb-0'],\n\t\t\tchangedEvent: (player: Player<any>) => player.bonusStatsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getBonusStats().getStat(stat),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst bonusStats = player.getBonusStats().withStat(stat, newValue);\n\t\t\t\tplayer.setBonusStats(eventID, bonusStats);\n\t\t\t\tpopover?.hide();\n\t\t\t},\n\t\t});\n\n\t\tpopover = Popover.getOrCreateInstance(link, {\n\t\t\tcustomClass: 'bonus-stats-popover',\n\t\t\tplacement: 'right',\n\t\t\tfallbackPlacements: ['left'],\n\t\t\tsanitize: false,\n\t\t\thtml: true,\n\t\t\tcontent: picker.rootElem,\n\t\t});\n\n\t\treturn link as HTMLElement;\n\t}\n\n\tprivate shouldShowMeleeCritCap(player: Player<any>): boolean {\n\t\treturn [Spec.SpecEnhancementShaman, Spec.SpecRetributionPaladin, Spec.SpecRogue, Spec.SpecWarrior].includes(player.spec);\n\t}\n\n\tprivate meleeCritCapDisplayString(player: Player<any>, _: Stats): string {\n\t\tconst playerCritCapDelta = player.getMeleeCritCap();\n\n\t\tif (playerCritCapDelta === 0.0) {\n\t\t\treturn 'Exact';\n\t\t}\n\n\t\tconst prefix = playerCritCapDelta > 0 ? 'Over by ' : 'Under by ';\n\t\treturn `${prefix} ${Math.abs(playerCritCapDelta).toFixed(2)}%`;\n\t}\n}\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","import { Modal } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, ref } from 'tsx-vanilla';\n\nimport { Component } from './component';\n\ntype ModalSize = 'sm' | 'md' | 'lg' | 'xl';\n\ntype BaseModalConfig = {\n\tcloseButton?: {\n\t\t// When true, the button will be rendered in a fixed position on the screen.\n\t\t// Primarily used for the raid sim's embedded player editors\n\t\tfixed?: boolean;\n\t};\n\t// Whether or not to add a modal-footer element\n\tfooter?: boolean;\n\t// Whether or not to add a modal-header element\n\theader?: boolean;\n\t// Whether or not to allow modal contents to extend past the screen height.\n\t// When true, the modal is fixed to the screen height and body contents will scroll.\n\tscrollContents?: boolean;\n\t// Specify the size of the modal\n\tsize?: ModalSize;\n\t// A title for the modal\n\ttitle?: string | null;\n};\n\nconst DEFAULT_CONFIG = {\n\tfooter: false,\n\theader: true,\n\tscrollContents: false,\n\tsize: 'lg' as ModalSize,\n\ttitle: null,\n};\n\nexport class BaseModal extends Component {\n\treadonly modalConfig: BaseModalConfig;\n\n\treadonly modal: Modal;\n\treadonly dialog: HTMLElement;\n\treadonly header: HTMLElement | undefined;\n\treadonly body: HTMLElement;\n\treadonly footer: HTMLElement | undefined;\n\n\tconstructor(parent: HTMLElement, cssClass: string, config: BaseModalConfig = {}) {\n\t\tsuper(parent, 'modal');\n\t\tthis.modalConfig = { ...DEFAULT_CONFIG, ...config };\n\n\t\tconst dialogRef = ref<HTMLDivElement>();\n\t\tconst headerRef = ref<HTMLDivElement>();\n\t\tconst bodyRef = ref<HTMLDivElement>();\n\t\tconst footerRef = ref<HTMLDivElement>();\n\n\t\tconst modalSizeKlass = this.modalConfig.size && this.modalConfig.size != 'md' ? `modal-${this.modalConfig.size}` : '';\n\n\t\tthis.rootElem.classList.add('fade');\n\t\tthis.rootElem.appendChild(\n\t\t\t<div className={`modal-dialog ${cssClass} ${modalSizeKlass} ${this.modalConfig.scrollContents ? 'modal-overflow-scroll' : ''}`} ref={dialogRef}>\n\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t<div className={`modal-header ${this.modalConfig.header || this.modalConfig.title ? '' : 'p-0 border-0'}`} ref={headerRef}>\n\t\t\t\t\t\t{this.modalConfig.title && <h5 className=\"modal-title\">{this.modalConfig.title}</h5>}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName={`btn-close ${this.modalConfig.closeButton?.fixed ? 'position-fixed' : ''}`}\n\t\t\t\t\t\t\tonclick={() => this.close()}\n\t\t\t\t\t\t\tattributes={{ 'aria-label': 'Close' }}>\n\t\t\t\t\t\t\t<i className=\"fas fa-times fa-2xl\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-body\" ref={bodyRef} />\n\t\t\t\t\t{this.modalConfig.footer && <div className=\"modal-footer\" ref={footerRef} />}\n\t\t\t\t</div>\n\t\t\t</div>,\n\t\t);\n\n\t\tthis.dialog = dialogRef.value!;\n\t\tthis.header = headerRef.value!;\n\t\tthis.body = bodyRef.value!;\n\t\tthis.footer = footerRef.value!;\n\n\t\tthis.modal = new Modal(this.rootElem, { keyboard: true });\n\t\tthis.open();\n\n\t\tthis.rootElem.addEventListener('hidden.bs.modal', _ => {\n\t\t\tthis.rootElem.remove();\n\t\t\tthis.dispose();\n\t\t});\n\t}\n\n\tprotected onShow(_e: Event) {\n\t\treturn;\n\t}\n\n\topen() {\n\t\tthis.rootElem.addEventListener('show.bs.modal', this.showBSFn.bind(this));\n\t\tthis.rootElem.addEventListener('hide.bs.modal', this.hideBSFn.bind(this));\n\t\tthis.rootElem.addEventListener('hidden.bs.modal', this.hiddenBSFn.bind(this));\n\t\tthis.modal.show();\n\t}\n\n\tclose() {\n\t\tthis.modal.hide();\n\t\tthis.rootElem.removeEventListener('show.bs.modal', this.showBSFn.bind(this));\n\t\tthis.rootElem.removeEventListener('hide.bs.modal', this.hideBSFn.bind(this));\n\t\tthis.rootElem.removeEventListener('hidden.bs.modal', this.hiddenBSFn.bind(this));\n\t}\n\n\t// Hacks for better looking multi modals\n\tprivate async showBSFn(event: Event) {\n\t\t// Prevent the event from bubbling up to parent modals\n\t\tevent.stopImmediatePropagation();\n\n\t\t// Wait for the backdrop to be injected into the DOM\n\t\tconst backdrop = (await new Promise(resolve => {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tif (this.modal._backdrop._element)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tresolve(this.modal._backdrop._element);\n\t\t\t}, 100);\n\t\t})) as HTMLElement;\n\t\t// Then move it from <body> to the parent element\n\t\tthis.rootElem.insertAdjacentElement('afterend', backdrop);\n\t\tthis.onShow(event);\n\t}\n\n\tprivate hideBSFn(event: Event) {\n\t\t// Prevent the event from bubbling up to parent modals\n\t\tevent.stopImmediatePropagation();\n\t}\n\n\tprivate hiddenBSFn(event: Event) {\n\t\t// Prevent the event from bubbling up to parent modals\n\t\t// Do not use stopImmediatePropagation here. It prevents Bootstrap from removing the modal,\n\t\t// leading to other issues\n\t\tevent.stopPropagation();\n\t}\n}\n","import pako from 'pako';\n\nimport { IndividualSimUI } from '../individual_sim_ui';\nimport { Class, EquipmentSpec, ItemSlot, ItemSpec, Profession, Race, Spec } from '../proto/common';\nimport { IndividualSimSettings } from '../proto/ui';\nimport { Database } from '../proto_utils/database';\nimport { classNames, nameToClass, nameToProfession, nameToRace } from '../proto_utils/names';\nimport { SimSettingCategories } from '../sim';\nimport { SimUI } from '../sim_ui';\nimport { talentSpellIdsToTalentString } from '../talents/factory';\nimport { TypedEvent } from '../typed_event';\nimport { buf2hex, getEnumValues } from '../utils';\nimport { BaseModal } from './base_modal';\n\nexport abstract class Importer extends BaseModal {\n\tprotected readonly textElem: HTMLTextAreaElement;\n\tprotected readonly descriptionElem: HTMLElement;\n\tprotected readonly importButton: HTMLButtonElement;\n\tprivate readonly includeFile: boolean;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, title: string, includeFile: boolean) {\n\t\tsuper(parent, 'importer', { title: title, footer: true });\n\t\tthis.includeFile = includeFile;\n\t\tconst uploadInputId = 'upload-input-' + title.toLowerCase().replaceAll(' ', '-');\n\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"import-description\"></div>\n\t\t\t<textarea spellCheck=\"false\" class=\"importer-textarea form-control\"></textarea>\n\t\t`;\n\t\tthis.footer!.innerHTML = `\n\t\t\t${\n\t\t\t\tthis.includeFile\n\t\t\t\t\t? `\n\t\t\t\t<label for=\"${uploadInputId}\" class=\"importer-button btn btn-primary upload-button me-2\">\n\t\t\t\t\t<i class=\"fas fa-file-arrow-up\"></i>\n\t\t\t\t\tUpload File\n\t\t\t\t</label>\n\t\t\t\t<input type=\"file\" id=\"${uploadInputId}\" class=\"importer-upload-input d-none\" hidden>\n\t\t\t`\n\t\t\t\t\t: ''\n\t\t\t}\n\t\t\t<button class=\"importer-button btn btn-primary import-button\">\n\t\t\t\t<i class=\"fa fa-download\"></i>\n\t\t\t\tImport\n\t\t\t</button>\n\t\t`;\n\n\t\tthis.textElem = this.rootElem.getElementsByClassName('importer-textarea')[0] as HTMLTextAreaElement;\n\t\tthis.descriptionElem = this.rootElem.getElementsByClassName('import-description')[0] as HTMLElement;\n\n\t\tif (this.includeFile) {\n\t\t\tconst uploadInput = this.rootElem.getElementsByClassName('importer-upload-input')[0] as HTMLButtonElement;\n\t\t\tuploadInput.addEventListener('change', async event => {\n\t\t\t\tconst data: string = await (event as any).target.files[0].text();\n\t\t\t\tthis.textElem.textContent = data;\n\t\t\t});\n\t\t}\n\n\t\tthis.importButton = this.rootElem.getElementsByClassName('import-button')[0] as HTMLButtonElement;\n\t\tthis.importButton.addEventListener('click', () => {\n\t\t\ttry {\n\t\t\t\tthis.onImport(this.textElem.value || '');\n\t\t\t} catch (error) {\n\t\t\t\talert('Import error: ' + error);\n\t\t\t}\n\t\t});\n\t}\n\n\tabstract onImport(data: string): void;\n\n\tprotected async finishIndividualImport<SpecType extends Spec>(\n\t\tsimUI: IndividualSimUI<SpecType>,\n\t\tcharClass: Class,\n\t\trace: Race,\n\t\tequipmentSpec: EquipmentSpec,\n\t\ttalentsStr: string,\n\t\tprofessions: Array<Profession>,\n\t): Promise<void> {\n\t\tconst playerClass = simUI.player.getClass();\n\t\tif (charClass != playerClass) {\n\t\t\tthrow new Error(`Wrong Class! Expected ${classNames.get(playerClass)} but found ${classNames.get(charClass)}!`);\n\t\t}\n\n\t\tawait Database.loadLeftoversIfNecessary(equipmentSpec);\n\n\t\tconst gear = simUI.sim.db.lookupEquipmentSpec(equipmentSpec);\n\n\t\tconst expectedEnchantIds = equipmentSpec.items.map(item => item.enchant);\n\t\tconst foundEnchantIds = gear.asSpec().items.map(item => item.enchant);\n\t\tconst missingEnchants = expectedEnchantIds.filter(expectedId => expectedId != 0 && !foundEnchantIds.includes(expectedId));\n\n\t\tconst expectedItemIds = equipmentSpec.items.map(item => item.id);\n\t\tconst foundItemIds = gear.asSpec().items.map(item => item.id);\n\t\tconst missingItems = expectedItemIds.filter(expectedId => !foundItemIds.includes(expectedId));\n\n\t\t// Now update settings using the parsed values.\n\t\tconst eventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tsimUI.player.setRace(eventID, race);\n\t\t\tsimUI.player.setGear(eventID, gear);\n\t\t\tif (talentsStr && talentsStr != '--') {\n\t\t\t\tsimUI.player.setTalentsString(eventID, talentsStr);\n\t\t\t}\n\t\t\tif (professions.length > 0) {\n\t\t\t\tsimUI.player.setProfessions(eventID, professions);\n\t\t\t}\n\t\t});\n\n\t\tthis.close();\n\n\t\tif (missingItems.length == 0 && missingEnchants.length == 0) {\n\t\t\talert('Import successful!');\n\t\t} else {\n\t\t\talert(\n\t\t\t\t'Import successful, but the following IDs were not found in the sim database:' +\n\t\t\t\t\t(missingItems.length == 0 ? '' : '\\n\\nItems: ' + missingItems.join(', ')) +\n\t\t\t\t\t(missingEnchants.length == 0 ? '' : '\\n\\nEnchants: ' + missingEnchants.join(', ')),\n\t\t\t);\n\t\t}\n\t}\n}\n\ninterface UrlParseData {\n\tsettings: IndividualSimSettings;\n\tcategories: Array<SimSettingCategories>;\n}\n\n// For now this just holds static helpers to match the exporter, so it doesn't extend Importer.\nexport class IndividualLinkImporter {\n\t// Exclude UISettings by default, since most users don't intend to export those.\n\tstatic readonly DEFAULT_CATEGORIES = getEnumValues(SimSettingCategories).filter(c => c != SimSettingCategories.UISettings) as Array<SimSettingCategories>;\n\n\tstatic readonly CATEGORY_PARAM = 'i';\n\tstatic readonly CATEGORY_KEYS: Map<SimSettingCategories, string> = (() => {\n\t\tconst map = new Map();\n\t\t// Use single-letter abbreviations since these will be included in sim links.\n\t\tmap.set(SimSettingCategories.Gear, 'g');\n\t\tmap.set(SimSettingCategories.Talents, 't');\n\t\tmap.set(SimSettingCategories.Rotation, 'r');\n\t\tmap.set(SimSettingCategories.Consumes, 'c');\n\t\tmap.set(SimSettingCategories.Miscellaneous, 'm');\n\t\tmap.set(SimSettingCategories.External, 'x');\n\t\tmap.set(SimSettingCategories.Encounter, 'e');\n\t\tmap.set(SimSettingCategories.UISettings, 'u');\n\t\treturn map;\n\t})();\n\n\tstatic tryParseUrlLocation(location: Location): UrlParseData | null {\n\t\tlet hash = location.hash;\n\t\tif (hash.length <= 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Remove leading '#'\n\t\thash = hash.substring(1);\n\t\tconst binary = atob(hash);\n\t\tconst bytes = new Uint8Array(binary.length);\n\t\tfor (let i = 0; i < bytes.length; i++) {\n\t\t\tbytes[i] = binary.charCodeAt(i);\n\t\t}\n\n\t\tconst settingsBytes = pako.inflate(bytes);\n\t\tconst settings = IndividualSimSettings.fromBinary(settingsBytes);\n\n\t\tlet exportCategories = IndividualLinkImporter.DEFAULT_CATEGORIES;\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\tif (urlParams.has(IndividualLinkImporter.CATEGORY_PARAM)) {\n\t\t\tconst categoryChars = urlParams.get(IndividualLinkImporter.CATEGORY_PARAM)!.split('');\n\t\t\texportCategories = categoryChars\n\t\t\t\t.map(char => [...IndividualLinkImporter.CATEGORY_KEYS.entries()].find(e => e[1] == char))\n\t\t\t\t.filter(e => e)\n\t\t\t\t.map(e => e![0]);\n\t\t}\n\n\t\treturn {\n\t\t\tsettings: settings,\n\t\t\tcategories: exportCategories,\n\t\t};\n\t}\n}\n\nexport class IndividualJsonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'JSON Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>Import settings from a JSON file, which can be created using the JSON Export feature.</p>\n\t\t\t<p>To import, upload the file or paste the text below, then click, 'Import'.</p>\n\t\t`;\n\t}\n\n\tasync onImport(data: string) {\n\t\tconst proto = IndividualSimSettings.fromJsonString(data, { ignoreUnknownFields: true });\n\t\tif (proto.player?.equipment) {\n\t\t\tawait Database.loadLeftoversIfNecessary(proto.player.equipment);\n\t\t}\n\t\tif (this.simUI.isWithinRaidSim) {\n\t\t\tif (proto.player) {\n\t\t\t\tthis.simUI.player.fromProto(TypedEvent.nextEventID(), proto.player);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), proto);\n\t\t}\n\t\tthis.close();\n\t}\n}\n\nexport class Individual60UImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Sixty Upgrades SoD Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from <a href=\"https://sixtyupgrades.com/sod/\" target=\"_blank\">Sixty Upgrades Season of Discovery</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and (optionally) talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the site's export option below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson?.character?.gameClass as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson?.character?.race as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tlet talentsStr = '';\n\t\tif (importJson?.talents?.length > 0) {\n\t\t\tconst talentIds = (importJson.talents as Array<any>).map(talentJson => talentJson.spellId);\n\t\t\ttalentsStr = talentSpellIdsToTalentString(charClass, talentIds);\n\t\t}\n\n\t\tconst equipmentSpec = EquipmentSpec.create();\n\t\t(importJson.items as Array<any>).forEach(itemJson => {\n\t\t\tconst itemSpec = ItemSpec.create();\n\t\t\titemSpec.id = itemJson.id;\n\t\t\tif (itemJson.enchant?.id) {\n\t\t\t\titemSpec.enchant = itemJson.enchant.id;\n\t\t\t}\n\t\t\tequipmentSpec.items.push(itemSpec);\n\t\t});\n\n\t\tthis.simUI.sim.db.lookupEquipmentSpec(equipmentSpec);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, []);\n\t}\n}\n\nexport class IndividualWowheadGearPlannerImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Wowhead Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from <a href=\"https://www.wowhead.com/classic/gear-planner\" target=\"_blank\">Wowhead Gear Planner</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, and (optionally) talents. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the gear planner link below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tonImport(url: string) {\n\t\tconst match = url.match(/www\\.wowhead\\.com\\/classic\\/gear-planner\\/([a-z\\-]+)\\/([a-z\\-]+)\\/([a-zA-Z0-9_\\-]+)/);\n\t\tif (!match) {\n\t\t\tthrow new Error(`Invalid WCL URL ${url}, must look like \"https://www.wowhead.com/classic/gear-planner/CLASS/RACE/XXXX\"`);\n\t\t}\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass(match[1].replaceAll('-', ''));\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class: ' + match[1]);\n\t\t}\n\n\t\tconst race = nameToRace(match[2].replaceAll('-', ''));\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race: ' + match[2]);\n\t\t}\n\n\t\tconst base64Data = match[3].replaceAll('_', '/').replaceAll('-', '+');\n\t\t//console.log('Base64: ' + base64Data);\n\t\tconst data = Uint8Array.from(atob(base64Data), c => c.charCodeAt(0));\n\t\t//console.log('Hex: ' + buf2hex(data));\n\n\t\t// Binary schema\n\t\t// Byte 00: ??\n\t\t// Byte 01: ?? Seems related to aesthetics (e.g. body type)\n\t\t// Byte 02: 8-bit Player Level\n\t\t// Byte 03: 8-bit length of talents bytes\n\t\t// Next N Bytes: Talents in hex string format\n\n\t\t// Talent hex string looks like '230005232100330150323102505321f03f023203001f'\n\t\t// Just like regular wowhead talents string except 'f' instead of '-'.\n\t\tconst numTalentBytes = data[3];\n\t\tconst talentBytes = data.subarray(4, 4 + numTalentBytes);\n\t\tconst talentsHexStr = buf2hex(talentBytes);\n\t\t//console.log('Talents hex: ' + talentsHexStr);\n\t\tconst talentsStr = talentsHexStr.split('f').slice(0, 3).join('-');\n\t\t//console.log('Talents: ' + talentsStr);\n\n\t\t// Binary schema for each item:\n\t\t// 8-bit slotNumber, high bit = is enchanted\n\t\t// 8-bit upper 3 bits for gem count\n\t\t// 16-bit item id\n\t\t// if enchant bit is set:\n\t\t//   8-bit ??, possibly enchant position for multiple enchants?\n\t\t//   16-bit enchant id\n\t\tconst gearBytes = data.subarray(numTalentBytes);\n\t\t//console.log(`Remaining ${gearBytes.length} bytes: ${buf2hex(gearBytes)}`);\n\n\t\tconst equipmentSpec = EquipmentSpec.create();\n\t\tlet cur = 0;\n\t\twhile (cur < gearBytes.length) {\n\t\t\tconst itemSpec = ItemSpec.create();\n\t\t\tconst slotId = gearBytes[cur] & 0b00111111;\n\t\t\tconst isEnchanted = Boolean(gearBytes[cur] & 0b10000000);\n\t\t\t// const randomEnchant = Boolean(gearBytes[cur] & 0b01000000);\n\t\t\tcur++;\n\n\t\t\tconst highid = gearBytes[cur] & 0b00011111;\n\t\t\tcur++;\n\n\t\t\titemSpec.id = (highid << 16) + (gearBytes[cur] << 8) + gearBytes[cur + 1];\n\t\t\tcur += 2;\n\t\t\t//console.log(`Slot ID: ${slotId}, isEnchanted: ${isEnchanted}, itemID: ${itemSpec.id}`);\n\n\t\t\tif (isEnchanted) {\n\t\t\t\t// Note: this is the enchant SPELL id, not the effect ID.\n\t\t\t\tconst enchantSpellId = (gearBytes[cur] << 16) + (gearBytes[cur + 1] << 8) + gearBytes[cur + 2];\n\t\t\t\titemSpec.enchant = this.simUI.sim.db.enchantSpellIdToEffectId(enchantSpellId);\n\t\t\t\tcur += 3;\n\t\t\t\t//console.log(`Enchant ID: ${itemSpec.enchant}. Spellid: ${enchantSpellId}`);\n\t\t\t}\n\n\t\t\t// Ignore tabard / shirt slots\n\t\t\tconst itemSlotEntry = Object.entries(IndividualWowheadGearPlannerImporter.slotIDs).find(e => e[1] == slotId);\n\t\t\tif (itemSlotEntry != null) {\n\t\t\t\tequipmentSpec.items.push(itemSpec);\n\t\t\t}\n\t\t}\n\t\tthis.simUI.sim.db.lookupEquipmentSpec(equipmentSpec);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, []);\n\t}\n\n\tstatic slotIDs: Record<ItemSlot, number> = {\n\t\t[ItemSlot.ItemSlotHead]: 1,\n\t\t[ItemSlot.ItemSlotNeck]: 2,\n\t\t[ItemSlot.ItemSlotShoulder]: 3,\n\t\t[ItemSlot.ItemSlotBack]: 15,\n\t\t[ItemSlot.ItemSlotChest]: 5,\n\t\t[ItemSlot.ItemSlotWrist]: 9,\n\t\t[ItemSlot.ItemSlotHands]: 10,\n\t\t[ItemSlot.ItemSlotWaist]: 6,\n\t\t[ItemSlot.ItemSlotLegs]: 7,\n\t\t[ItemSlot.ItemSlotFeet]: 8,\n\t\t[ItemSlot.ItemSlotFinger1]: 11,\n\t\t[ItemSlot.ItemSlotFinger2]: 12,\n\t\t[ItemSlot.ItemSlotTrinket1]: 13,\n\t\t[ItemSlot.ItemSlotTrinket2]: 14,\n\t\t[ItemSlot.ItemSlotMainHand]: 16,\n\t\t[ItemSlot.ItemSlotOffHand]: 17,\n\t\t[ItemSlot.ItemSlotRanged]: 18,\n\t};\n}\n\nexport class IndividualAddonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, 'Addon Import', true);\n\t\tthis.simUI = simUI;\n\n\t\tthis.descriptionElem.innerHTML = `\n\t\t\t<p>\n\t\t\t\tImport settings from the <a href=\"https://www.curseforge.com/wow/addons/wowsimsexporter\" target=\"_blank\">WoWSims Importer In-Game Addon</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis feature imports gear, race, talents, and professions. It does NOT import buffs, debuffs, consumes, rotation, or custom stats.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo import, paste the output from the addon below and click, 'Import'.\n\t\t\t</p>\n\t\t`;\n\t}\n\n\tasync onImport(data: string) {\n\t\tconst importJson = JSON.parse(data);\n\n\t\t// Parse all the settings.\n\t\tconst charClass = nameToClass((importJson['class'] as string) || '');\n\t\tif (charClass == Class.ClassUnknown) {\n\t\t\tthrow new Error('Could not parse Class!');\n\t\t}\n\n\t\tconst race = nameToRace((importJson['race'] as string) || '');\n\t\tif (race == Race.RaceUnknown) {\n\t\t\tthrow new Error('Could not parse Race!');\n\t\t}\n\n\t\tconst professions = (importJson['professions'] as Array<{ name: string; level: number }>).map(profData => nameToProfession(profData.name));\n\t\tprofessions.forEach((prof, i) => {\n\t\t\tif (prof == Profession.ProfessionUnknown) {\n\t\t\t\tthrow new Error(`Could not parse profession '${importJson['professions'][i]}'`);\n\t\t\t}\n\t\t});\n\n\t\tconst talentsStr = (importJson['talents'] as string) || '';\n\n\t\tconst gearJson = importJson['gear'];\n\t\tgearJson.items = (gearJson.items as Array<any>).filter(item => item != null);\n\t\tconst equipmentSpec = EquipmentSpec.fromJson(gearJson);\n\n\t\tthis.finishIndividualImport(this.simUI, charClass, race, equipmentSpec, talentsStr, professions);\n\t}\n}\n","import pako from 'pako';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, ref } from 'tsx-vanilla';\n\nimport * as Mechanics from '../constants/mechanics';\nimport { IndividualSimUI } from '../individual_sim_ui';\nimport { RaidSimRequest } from '../proto/api';\nimport { PseudoStat, Spec, Stat } from '../proto/common';\nimport { IndividualSimSettings } from '../proto/ui';\nimport { classNames, raceNames } from '../proto_utils/names';\nimport { UnitStat } from '../proto_utils/stats';\nimport { specNames } from '../proto_utils/utils';\nimport { SimSettingCategories } from '../sim';\nimport { SimUI } from '../sim_ui';\nimport { EventID, TypedEvent } from '../typed_event';\nimport { arrayEquals, downloadString, getEnumValues, jsonStringifyWithFlattenedPaths } from '../utils';\nimport { BaseModal } from './base_modal';\nimport { BooleanPicker } from './boolean_picker';\nimport { CopyButton } from './copy_button';\nimport { IndividualLinkImporter, IndividualWowheadGearPlannerImporter } from './importers';\n\ninterface ExporterOptions {\n\ttitle: string;\n\theader?: boolean;\n\tallowDownload?: boolean;\n}\n\nexport abstract class Exporter extends BaseModal {\n\tprivate readonly textElem: HTMLElement;\n\tprotected readonly changedEvent: TypedEvent<void> = new TypedEvent();\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, options: ExporterOptions) {\n\t\tsuper(parent, 'exporter', { title: options.title, header: true, footer: true });\n\n\t\tthis.body.innerHTML = `\n\t\t\t<textarea spellCheck=\"false\" class=\"exporter-textarea form-control\"></textarea>\n\t\t`;\n\t\tthis.textElem = this.rootElem.getElementsByClassName('exporter-textarea')[0] as HTMLElement;\n\n\t\tnew CopyButton(this.footer!, {\n\t\t\textraCssClasses: ['btn-primary', 'me-2'],\n\t\t\tgetContent: () => this.textElem.innerHTML,\n\t\t\ttext: 'Copy',\n\t\t\ttooltip: 'Copy to clipboard',\n\t\t});\n\n\t\tif (options.allowDownload) {\n\t\t\tconst downloadBtnRef = ref<HTMLButtonElement>();\n\t\t\tthis.footer!.appendChild(\n\t\t\t\t<button className=\"exporter-button btn btn-primary download-button\" ref={downloadBtnRef}>\n\t\t\t\t\t<i className=\"fa fa-download me-1\"></i>\n\t\t\t\t\tDownload\n\t\t\t\t</button>,\n\t\t\t);\n\n\t\t\tconst downloadButton = downloadBtnRef.value!;\n\t\t\tdownloadButton.addEventListener('click', _event => {\n\t\t\t\tconst data = this.textElem.textContent!;\n\t\t\t\tdownloadString(data, 'wowsims.json');\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected init() {\n\t\tthis.changedEvent.on(() => this.updateContent());\n\t\tthis.updateContent();\n\t}\n\n\tprivate updateContent() {\n\t\tthis.textElem.textContent = this.getData();\n\t}\n\n\tabstract getData(): string;\n}\n\nexport class IndividualLinkExporter<SpecType extends Spec> extends Exporter {\n\tprivate static readonly exportPickerConfigs: Array<{\n\t\tcategory: SimSettingCategories;\n\t\tlabel: string;\n\t\tlabelTooltip: string;\n\t}> = [\n\t\t{\n\t\t\tcategory: SimSettingCategories.Gear,\n\t\t\tlabel: 'Gear',\n\t\t\tlabelTooltip: 'Also includes bonus stats and weapon swaps.',\n\t\t},\n\t\t{\n\t\t\tcategory: SimSettingCategories.Talents,\n\t\t\tlabel: 'Talents',\n\t\t\tlabelTooltip: 'Talents and Glyphs.',\n\t\t},\n\t\t{\n\t\t\tcategory: SimSettingCategories.Rotation,\n\t\t\tlabel: 'Rotation',\n\t\t\tlabelTooltip: 'Includes everything found in the Rotation tab.',\n\t\t},\n\t\t{\n\t\t\tcategory: SimSettingCategories.Consumes,\n\t\t\tlabel: 'Consumes',\n\t\t\tlabelTooltip: 'Flask, pots, food, etc.',\n\t\t},\n\t\t{\n\t\t\tcategory: SimSettingCategories.External,\n\t\t\tlabel: 'Buffs & Debuffs',\n\t\t\tlabelTooltip: 'All settings which are applied by other raid members.',\n\t\t},\n\t\t{\n\t\t\tcategory: SimSettingCategories.Miscellaneous,\n\t\t\tlabel: 'Misc',\n\t\t\tlabelTooltip: 'Spec-specific settings, front/back of target, distance from target, etc.',\n\t\t},\n\t\t{\n\t\t\tcategory: SimSettingCategories.Encounter,\n\t\t\tlabel: 'Encounter',\n\t\t\tlabelTooltip: 'Fight-related settings.',\n\t\t},\n\t\t// Intentionally exclude UISettings category here, because users almost\n\t\t// never intend to export them and it messes with other users' settings.\n\t\t// If they REALLY want to export UISettings, just use the JSON exporter.\n\t];\n\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tprivate readonly exportCategories: Record<SimSettingCategories, boolean>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, { title: 'Sharable Link' });\n\t\tthis.simUI = simUI;\n\n\t\tconst exportCategories: Partial<Record<SimSettingCategories, boolean>> = {};\n\t\t(getEnumValues(SimSettingCategories) as Array<SimSettingCategories>).forEach(\n\t\t\tcat => (exportCategories[cat] = IndividualLinkImporter.DEFAULT_CATEGORIES.includes(cat)),\n\t\t);\n\t\tthis.exportCategories = exportCategories as Record<SimSettingCategories, boolean>;\n\n\t\tconst pickersContainer = document.createElement('div');\n\t\tpickersContainer.classList.add('link-exporter-pickers');\n\t\tthis.body.prepend(pickersContainer);\n\n\t\tIndividualLinkExporter.exportPickerConfigs.forEach(exportConfig => {\n\t\t\tconst category = exportConfig.category;\n\t\t\tnew BooleanPicker(pickersContainer, this, {\n\t\t\t\tlabel: exportConfig.label,\n\t\t\t\tlabelTooltip: exportConfig.labelTooltip,\n\t\t\t\tinline: true,\n\t\t\t\tgetValue: () => this.exportCategories[category],\n\t\t\t\tsetValue: (eventID: EventID, _modObj: IndividualLinkExporter<SpecType>, newValue: boolean) => {\n\t\t\t\t\tthis.exportCategories[category] = newValue;\n\t\t\t\t\tthis.changedEvent.emit(eventID);\n\t\t\t\t},\n\t\t\t\tchangedEvent: () => this.changedEvent,\n\t\t\t});\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn IndividualLinkExporter.createLink(\n\t\t\tthis.simUI,\n\t\t\t(getEnumValues(SimSettingCategories) as Array<SimSettingCategories>).filter(c => this.exportCategories[c]),\n\t\t);\n\t}\n\n\tstatic createLink(simUI: IndividualSimUI<any>, exportCategories?: Array<SimSettingCategories>): string {\n\t\tif (!exportCategories) {\n\t\t\texportCategories = IndividualLinkImporter.DEFAULT_CATEGORIES;\n\t\t}\n\n\t\tconst proto = simUI.toProto(exportCategories);\n\n\t\tconst protoBytes = IndividualSimSettings.toBinary(proto);\n\t\tconst deflated = pako.deflate(protoBytes, { to: 'string' });\n\t\tconst encoded = btoa(deflated);\n\n\t\tconst linkUrl = new URL(window.location.href);\n\t\tlinkUrl.hash = encoded;\n\t\tif (arrayEquals(exportCategories, IndividualLinkImporter.DEFAULT_CATEGORIES)) {\n\t\t\tlinkUrl.searchParams.delete(IndividualLinkImporter.CATEGORY_PARAM);\n\t\t} else {\n\t\t\tconst categoryCharString = exportCategories.map(c => IndividualLinkImporter.CATEGORY_KEYS.get(c)).join('');\n\t\t\tlinkUrl.searchParams.set(IndividualLinkImporter.CATEGORY_PARAM, categoryCharString);\n\t\t}\n\t\treturn linkUrl.toString();\n\t}\n}\n\nexport class IndividualJsonExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, { title: 'JSON Export', allowDownload: true });\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\treturn jsonStringifyWithFlattenedPaths(IndividualSimSettings.toJson(this.simUI.toProto()), 2, (value, path) => {\n\t\t\tif (['stats', 'pseudoStats'].includes(path[path.length - 1])) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (['player', 'equipment', 'items'].every((v, i) => path[i] == v)) {\n\t\t\t\treturn path.length > 3;\n\t\t\t}\n\n\t\t\tif (path[0] == 'player' && path[1] == 'rotation' && ['prepullActions', 'priorityList'].includes(path[2])) {\n\t\t\t\treturn path.length > 3;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n}\n\nexport class IndividualWowheadGearPlannerExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, { title: 'Wowhead Export', allowDownload: true });\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\n\t\tconst classStr = classNames.get(player.getClass())!.replaceAll(' ', '-').toLowerCase();\n\t\tconst raceStr = raceNames.get(player.getRace())!.replaceAll(' ', '-').toLowerCase();\n\t\tconst url = `https://www.wowhead.com/classic/gear-planner/${classStr}/${raceStr}/`;\n\n\t\t// See comments on the importer for how the binary formatting is structured.\n\t\tlet bytes: Array<number> = [];\n\t\tbytes.push(6);\n\t\tbytes.push(0);\n\t\tbytes.push(Mechanics.MAX_CHARACTER_LEVEL);\n\n\t\tlet talentsStr = player.getTalentsString().replaceAll('-', 'f') + 'f';\n\t\tif (talentsStr.length % 2 == 1) {\n\t\t\ttalentsStr += '0';\n\t\t}\n\t\t//console.log('Talents str: ' + talentsStr);\n\t\tbytes.push(talentsStr.length / 2);\n\t\tfor (let i = 0; i < talentsStr.length; i += 2) {\n\t\t\tbytes.push(parseInt(talentsStr.substring(i, i + 2), 16));\n\t\t}\n\n\t\tconst to2Bytes = (val: number): Array<number> => {\n\t\t\treturn [(val & 0xff00) >> 8, val & 0x00ff];\n\t\t};\n\n\t\tconst gear = player.getGear();\n\t\tgear.getItemSlots()\n\t\t\t.sort((slot1, slot2) => IndividualWowheadGearPlannerImporter.slotIDs[slot1] - IndividualWowheadGearPlannerImporter.slotIDs[slot2])\n\t\t\t.forEach(itemSlot => {\n\t\t\t\tconst item = gear.getEquippedItem(itemSlot);\n\t\t\t\tif (!item) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet slotId = IndividualWowheadGearPlannerImporter.slotIDs[itemSlot];\n\t\t\t\tif (item.enchant) {\n\t\t\t\t\tslotId = slotId | 0b10000000;\n\t\t\t\t}\n\t\t\t\tbytes.push(slotId);\n\t\t\t\tbytes.push(0 << 5);\n\t\t\t\tbytes = bytes.concat(to2Bytes(item.item.id));\n\n\t\t\t\tif (item.enchant) {\n\t\t\t\t\tbytes.push(0);\n\t\t\t\t\tbytes = bytes.concat(to2Bytes(item.enchant.spellId));\n\t\t\t\t}\n\t\t\t});\n\n\t\t//console.log('Hex: ' + buf2hex(new Uint8Array(bytes)));\n\t\tconst binaryString = String.fromCharCode(...bytes);\n\t\tconst b64encoded = btoa(binaryString);\n\t\tconst b64converted = b64encoded.replaceAll('/', '_').replaceAll('+', '-').replace(/=+$/, '');\n\n\t\treturn url + b64converted;\n\t}\n}\n\nexport class Individual60UEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, { title: '80Upgrades EP Export', allowDownload: true });\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\t\tconst epValues = player.getEpWeights();\n\t\tconst allUnitStats = UnitStat.getAll();\n\n\t\tconst namesToWeights: Record<string, number> = {};\n\t\tallUnitStats.forEach(stat => {\n\t\t\tconst statName = Individual60UEPExporter.getName(stat);\n\t\t\tconst weight = epValues.getUnitStat(stat);\n\t\t\tif (weight == 0 || statName == '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Need to add together stats with the same name (e.g. hit/crit/haste).\n\t\t\tif (namesToWeights[statName]) {\n\t\t\t\tnamesToWeights[statName] += weight;\n\t\t\t} else {\n\t\t\t\tnamesToWeights[statName] = weight;\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t`https://eightyupgrades.com/ep/import?name=${encodeURIComponent(`${specNames[player.spec]} WoWSims Weights`)}` +\n\t\t\tObject.keys(namesToWeights)\n\t\t\t\t.map(statName => `&${statName}=${namesToWeights[statName].toFixed(3)}`)\n\t\t\t\t.join('')\n\t\t);\n\t}\n\n\tstatic getName(stat: UnitStat): string {\n\t\tif (stat.isStat()) {\n\t\t\treturn Individual60UEPExporter.statNames[stat.getStat()];\n\t\t} else {\n\t\t\treturn Individual60UEPExporter.pseudoStatNames[stat.getPseudoStat()] || '';\n\t\t}\n\t}\n\n\tstatic statNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'strength',\n\t\t[Stat.StatAgility]: 'agility',\n\t\t[Stat.StatStamina]: 'stamina',\n\t\t[Stat.StatIntellect]: 'intellect',\n\t\t[Stat.StatSpirit]: 'spirit',\n\t\t[Stat.StatSpellPower]: 'spellPower',\n\t\t[Stat.StatSpellDamage]: 'spellDamage',\n\t\t[Stat.StatArcanePower]: 'arcaneDamage',\n\t\t[Stat.StatHolyPower]: 'holyDamage',\n\t\t[Stat.StatFirePower]: 'fireDamage',\n\t\t[Stat.StatFrostPower]: 'frostDamage',\n\t\t[Stat.StatNaturePower]: 'natureDamage',\n\t\t[Stat.StatShadowPower]: 'shadowDamage',\n\t\t[Stat.StatMP5]: 'mp5',\n\t\t[Stat.StatSpellHit]: 'hitRating',\n\t\t[Stat.StatSpellCrit]: 'critRating',\n\t\t[Stat.StatSpellHaste]: 'hasteRating',\n\t\t[Stat.StatSpellPenetration]: 'spellPen',\n\t\t[Stat.StatAttackPower]: 'attackPower',\n\t\t[Stat.StatMeleeHit]: 'hitRating',\n\t\t[Stat.StatMeleeCrit]: 'critRating',\n\t\t[Stat.StatMeleeHaste]: 'hasteRating',\n\t\t[Stat.StatArmorPenetration]: 'armorPenRating',\n\t\t[Stat.StatExpertise]: 'expertiseRating',\n\t\t[Stat.StatMana]: 'mana',\n\t\t[Stat.StatEnergy]: 'energy',\n\t\t[Stat.StatRage]: 'rage',\n\t\t[Stat.StatArmor]: 'armor',\n\t\t[Stat.StatRangedAttackPower]: 'attackPower',\n\t\t[Stat.StatDefense]: 'defenseRating',\n\t\t[Stat.StatBlock]: 'blockRating',\n\t\t[Stat.StatBlockValue]: 'blockValue',\n\t\t[Stat.StatDodge]: 'dodgeRating',\n\t\t[Stat.StatParry]: 'parryRating',\n\t\t[Stat.StatResilience]: 'resilienceRating',\n\t\t[Stat.StatHealth]: 'health',\n\t\t[Stat.StatArcaneResistance]: 'arcaneResistance',\n\t\t[Stat.StatFireResistance]: 'fireResistance',\n\t\t[Stat.StatFrostResistance]: 'frostResistance',\n\t\t[Stat.StatNatureResistance]: 'natureResistance',\n\t\t[Stat.StatShadowResistance]: 'shadowResistance',\n\t\t[Stat.StatBonusArmor]: 'armorBonus',\n\t\t[Stat.StatHealingPower]: 'Healing',\n\t\t[Stat.StatFeralAttackPower]: 'feralAttackPower',\n\t};\n\tstatic pseudoStatNames: Partial<Record<PseudoStat, string>> = {\n\t\t[PseudoStat.PseudoStatMainHandDps]: 'dps',\n\t\t[PseudoStat.PseudoStatRangedDps]: 'rangedDps',\n\t};\n}\n\nexport class IndividualPawnEPExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, { title: 'Pawn EP Export', allowDownload: true });\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst player = this.simUI.player;\n\t\tconst epValues = player.getEpWeights();\n\t\tconst allUnitStats = UnitStat.getAll();\n\n\t\tconst namesToWeights: Record<string, number> = {};\n\t\tallUnitStats.forEach(stat => {\n\t\t\tconst statName = IndividualPawnEPExporter.getName(stat);\n\t\t\tconst weight = epValues.getUnitStat(stat);\n\t\t\tif (weight == 0 || statName == '') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Need to add together stats with the same name (e.g. hit/crit/haste).\n\t\t\tif (namesToWeights[statName]) {\n\t\t\t\tnamesToWeights[statName] += weight;\n\t\t\t} else {\n\t\t\t\tnamesToWeights[statName] = weight;\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t`( Pawn: v1: \"${specNames[player.spec]} WoWSims Weights\": Class=${classNames.get(player.getClass())},` +\n\t\t\tObject.keys(namesToWeights)\n\t\t\t\t.map(statName => `${statName}=${namesToWeights[statName].toFixed(3)}`)\n\t\t\t\t.join(',') +\n\t\t\t' )'\n\t\t);\n\t}\n\n\tstatic getName(stat: UnitStat): string {\n\t\tif (stat.isStat()) {\n\t\t\treturn IndividualPawnEPExporter.statNames[stat.getStat()];\n\t\t} else {\n\t\t\treturn IndividualPawnEPExporter.pseudoStatNames[stat.getPseudoStat()] || '';\n\t\t}\n\t}\n\n\tstatic statNames: Record<Stat, string> = {\n\t\t[Stat.StatStrength]: 'Strength',\n\t\t[Stat.StatAgility]: 'Agility',\n\t\t[Stat.StatStamina]: 'Stamina',\n\t\t[Stat.StatIntellect]: 'Intellect',\n\t\t[Stat.StatSpirit]: 'Spirit',\n\t\t[Stat.StatSpellPower]: 'SpellDamage',\n\t\t[Stat.StatSpellDamage]: 'SpellDamage',\n\t\t[Stat.StatArcanePower]: 'ArcaneSpellDamage',\n\t\t[Stat.StatFirePower]: 'FireSpellDamage',\n\t\t[Stat.StatFrostPower]: 'FrostSpellDamage',\n\t\t[Stat.StatHolyPower]: 'HolySpellDamage',\n\t\t[Stat.StatNaturePower]: 'NatureSpellDamage',\n\t\t[Stat.StatShadowPower]: 'ShadowSpellDamage',\n\t\t[Stat.StatMP5]: 'Mp5',\n\t\t[Stat.StatSpellHit]: 'SpellHitRating',\n\t\t[Stat.StatSpellCrit]: 'SpellCritRating',\n\t\t[Stat.StatSpellHaste]: 'SpellHasteRating',\n\t\t[Stat.StatSpellPenetration]: 'SpellPen',\n\t\t[Stat.StatAttackPower]: 'Ap',\n\t\t[Stat.StatMeleeHit]: 'HitRating',\n\t\t[Stat.StatMeleeCrit]: 'CritRating',\n\t\t[Stat.StatMeleeHaste]: 'HasteRating',\n\t\t[Stat.StatArmorPenetration]: 'ArmorPenetration',\n\t\t[Stat.StatExpertise]: 'ExpertiseRating',\n\t\t[Stat.StatMana]: 'Mana',\n\t\t[Stat.StatEnergy]: 'Energy',\n\t\t[Stat.StatRage]: 'Rage',\n\t\t[Stat.StatArmor]: 'Armor',\n\t\t[Stat.StatRangedAttackPower]: 'Ap',\n\t\t[Stat.StatDefense]: 'DefenseRating',\n\t\t[Stat.StatBlock]: 'BlockRating',\n\t\t[Stat.StatBlockValue]: 'BlockValue',\n\t\t[Stat.StatDodge]: 'DodgeRating',\n\t\t[Stat.StatParry]: 'ParryRating',\n\t\t[Stat.StatResilience]: 'ResilienceRating',\n\t\t[Stat.StatHealth]: 'Health',\n\t\t[Stat.StatArcaneResistance]: 'ArcaneResistance',\n\t\t[Stat.StatFireResistance]: 'FireResistance',\n\t\t[Stat.StatFrostResistance]: 'FrostResistance',\n\t\t[Stat.StatNatureResistance]: 'NatureResistance',\n\t\t[Stat.StatShadowResistance]: 'ShadowResistance',\n\t\t[Stat.StatBonusArmor]: 'Armor2',\n\t\t[Stat.StatHealingPower]: 'Healing',\n\t\t[Stat.StatFeralAttackPower]: 'FeralAttackPower',\n\t};\n\tstatic pseudoStatNames: Partial<Record<PseudoStat, string>> = {\n\t\t[PseudoStat.PseudoStatMainHandDps]: 'MeleeDps',\n\t\t[PseudoStat.PseudoStatRangedDps]: 'RangedDps',\n\t};\n}\n\nexport class IndividualCLIExporter<SpecType extends Spec> extends Exporter {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>) {\n\t\tsuper(parent, simUI, { title: 'CLI Export', allowDownload: true });\n\t\tthis.simUI = simUI;\n\t\tthis.init();\n\t}\n\n\tgetData(): string {\n\t\tconst raidSimJson: any = RaidSimRequest.toJson(this.simUI.sim.makeRaidSimRequest(false));\n\t\tdelete raidSimJson.raid?.parties[0]?.players[0]?.database;\n\t\treturn JSON.stringify(raidSimJson, null, 2);\n\t}\n}\n","import { Tooltip } from 'bootstrap';\nimport { Component } from './component.js';\n\nimport { element, fragment } from 'tsx-vanilla';\n\nexport interface ContentBlockHeaderConfig {\n\ttitle: string,\n\textraCssClasses?: Array<string>,\n\ttitleTag?: string,\n\ttooltip?: string,\n}\n\nexport interface ContentBlockConfig {\n\tbodyClasses?: Array<string>,\n\textraCssClasses?: Array<string>,\n\trootElem?: HTMLElement,\n\theader?: ContentBlockHeaderConfig,\n}\n\nexport class ContentBlock extends Component {\n\treadonly headerElement: HTMLElement | null;\n\treadonly bodyElement: HTMLElement;\n\n\treadonly config: ContentBlockConfig;\n\n\tconstructor(parent: HTMLElement, cssClass: string, config: ContentBlockConfig) {\n\t\tsuper(parent, 'content-block', config.rootElem);\n\t\tthis.config = config;\n\t\tthis.rootElem.classList.add(cssClass);\n\n\t\tif (config.extraCssClasses) {\n\t\t\tthis.rootElem.classList.add(...config.extraCssClasses);\n\t\t}\n\n\t\tthis.headerElement = this.buildHeader();\n\t\tthis.bodyElement = this.buildBody();\n\t\tconfig.bodyClasses?.forEach((cl) => {\n\t\t\tthis.bodyElement.classList.add(cl);\n\t\t})\n\t}\n\n\tprivate buildHeader(): HTMLElement | null {\n\t\tif (this.config.header && Object.keys(this.config.header).length) {\n\t\t\tlet TitleTag = this.config.header.titleTag || 'h6';\n\t\t\tlet header =(\n\t\t\t\t<div className=\"content-block-header\">\n\t\t\t\t\t<TitleTag className=\"content-block-title\">\n\t\t\t\t\t\t{this.config.header.title}\n\t\t\t\t\t</TitleTag>\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\tif (this.config.header.extraCssClasses) {\n\t\t\t\theader.classList.add(...this.config.header.extraCssClasses);\n\t\t\t}\n\n\t\t\tif (this.config.header.tooltip)\n\t\t\t\tTooltip.getOrCreateInstance(header.querySelector('.content-block-title') as HTMLElement,  {\n\t\t\t\t\thtml: true,\n\t\t\t\t\ttitle: this.config.header.tooltip\n\t\t\t\t});\n\n\t\t\tthis.rootElem.appendChild(header);\n\n\t\t\treturn header as HTMLElement;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate buildBody(): HTMLElement {\n\t\tlet bodyElem = document.createElement('div');\n\t\tbodyElem.classList.add('content-block-body');\n\n\t\tthis.rootElem.appendChild(bodyElem);\n\n\t\treturn bodyElem;\n\t}\n}\n","import { ItemQuality } from './proto/common.js';\n\nconst itemQualityCssClasses: Record<ItemQuality, string> = {\n\t[ItemQuality.ItemQualityJunk]: 'item-quality-junk',\n\t[ItemQuality.ItemQualityCommon]: 'item-quality-common',\n\t[ItemQuality.ItemQualityUncommon]: 'item-quality-uncommon',\n\t[ItemQuality.ItemQualityRare]: 'item-quality-rare',\n\t[ItemQuality.ItemQualityEpic]: 'item-quality-epic',\n\t[ItemQuality.ItemQualityLegendary]: 'item-quality-legendary',\n\t[ItemQuality.ItemQualityArtifact]: 'item-quality-artifact',\n\t[ItemQuality.ItemQualityHeirloom]: 'item-quality-heirloom'\n};\nexport function setItemQualityCssClass(elem: HTMLElement, quality: ItemQuality | null) {\n\tObject.values(itemQualityCssClasses).forEach(cssClass => elem.classList.remove(cssClass));\n\n\tif (quality) {\n\t\telem.classList.add(itemQualityCssClasses[quality]);\n\t}\n}\n","import {\n\tUIEnchant as Enchant,\n} from '../proto/ui.js';\n\nlet descriptionsPromise: Promise<Record<number, string>> | null = null;\nfunction fetchEnchantDescriptions(): Promise<Record<number, string>> {\n\tif (descriptionsPromise == null) {\n\t\tdescriptionsPromise = fetch('/sod/assets/enchants/descriptions.json')\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => {\n\t\t\t\tconst descriptionsMap: Record<number, string> = {};\n\t\t\t\tfor (let idStr in json) {\n\t\t\t\t\tdescriptionsMap[parseInt(idStr)] = json[idStr];\n\t\t\t\t}\n\t\t\t\treturn descriptionsMap;\n\t\t\t});\n\t}\n\treturn descriptionsPromise;\n}\n\nexport async function getEnchantDescription(enchant: Enchant): Promise<string> {\n\tconst descriptionsMap = await fetchEnchantDescriptions();\n\treturn descriptionsMap[enchant.effectId] || enchant.name;\n}\n\n// Returns a string uniquely identifying the enchant.\nexport function getUniqueEnchantString(enchant: Enchant): string {\n\treturn enchant.effectId + '-' + enchant.type;\n}\n","import { Player } from '../player.js';\nimport { ArmorType, ItemSlot } from '../proto/common.js';\nimport { SourceFilterOption, UIItem_FactionRestriction } from '../proto/ui.js';\nimport { armorTypeNames, rangedWeaponTypeNames, sourceNames, weaponTypeNames } from '../proto_utils/names.js';\nimport { canDualWield, classToEligibleRangedWeaponTypes, classToEligibleWeaponTypes, classToMaxArmorType } from '../proto_utils/utils.js';\nimport { Sim } from '../sim.js';\nimport { EventID } from '../typed_event.js';\nimport { getEnumValues } from '../utils.js';\nimport { BaseModal } from './base_modal.js';\nimport { BooleanPicker } from './boolean_picker.js';\nimport { EnumPicker } from './enum_picker.js';\nimport { NumberPicker } from './number_picker.js';\n\nconst factionRestrictionsToLabels: Record<UIItem_FactionRestriction, string> = {\n\t[UIItem_FactionRestriction.UNSPECIFIED]: 'None',\n\t[UIItem_FactionRestriction.ALLIANCE_ONLY]: 'Alliance only',\n\t[UIItem_FactionRestriction.HORDE_ONLY]: 'Horde only',\n};\n\nexport class FiltersMenu extends BaseModal {\n\tconstructor(rootElem: HTMLElement, player: Player<any>, slot: ItemSlot) {\n\t\tsuper(rootElem, 'filters-menu', { size: 'md', title: 'Filters' });\n\n\t\tlet section = this.newSection('Factions');\n\n\t\tnew EnumPicker(section, player.sim, {\n\t\t\textraCssClasses: ['w-50'],\n\t\t\tvalues: [UIItem_FactionRestriction.UNSPECIFIED, UIItem_FactionRestriction.ALLIANCE_ONLY, UIItem_FactionRestriction.HORDE_ONLY].map(restriction => {\n\t\t\t\treturn {\n\t\t\t\t\tname: factionRestrictionsToLabels[restriction],\n\t\t\t\t\tvalue: restriction,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: sim => sim.filtersChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getFilters().factionRestriction,\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: UIItem_FactionRestriction) => {\n\t\t\t\tconst newFilters = sim.getFilters();\n\t\t\t\tnewFilters.factionRestriction = newValue;\n\t\t\t\tsim.setFilters(eventID, newFilters);\n\t\t\t},\n\t\t});\n\n\t\tsection = this.newSection('Source');\n\t\tsection.classList.add('filters-menu-section-bool-list');\n\t\tconst sources = Sim.ALL_SOURCES.filter(s => s != SourceFilterOption.SourceUnknown);\n\t\tsources.forEach(source => {\n\t\t\tnew BooleanPicker<Sim>(section, player.sim, {\n\t\t\t\tlabel: sourceNames.get(source),\n\t\t\t\tinline: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().sources.includes(source),\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\tfilters.sources.push(source);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfilters.sources = filters.sources.filter(v => v != source);\n\t\t\t\t\t}\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\t// section = this.newSection('Raids');\n\t\t// section.classList.add('filters-menu-section-bool-list');\n\t\t// const raids = Sim.ALL_RAIDS.filter(s => s != RaidFilterOption.RaidUnknown);\n\t\t// raids.forEach(raid => {\n\t\t// \tnew BooleanPicker<Sim>(section, player.sim, {\n\t\t// \t\tlabel: raidNames.get(raid),\n\t\t// \t\tinline: true,\n\t\t// \t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t// \t\tgetValue: (sim: Sim) => sim.getFilters().raids.includes(raid),\n\t\t// \t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t// \t\t\tconst filters = sim.getFilters();\n\t\t// \t\t\tif (newValue) {\n\t\t// \t\t\t\tfilters.raids.push(raid);\n\t\t// \t\t\t} else {\n\t\t// \t\t\t\tfilters.raids = filters.raids.filter(v => v != raid);\n\t\t// \t\t\t}\n\t\t// \t\t\tsim.setFilters(eventID, filters);\n\t\t// \t\t},\n\t\t// \t});\n\t\t// });\n\n\t\tif (Player.ARMOR_SLOTS.includes(slot)) {\n\t\t\tconst maxArmorType = classToMaxArmorType[player.getClass()];\n\t\t\tif (maxArmorType >= ArmorType.ArmorTypeLeather) {\n\t\t\t\tconst section = this.newSection('Armor Type');\n\t\t\t\tsection.classList.add('filters-menu-section-bool-list');\n\t\t\t\tconst armorTypes = (getEnumValues(ArmorType) as Array<ArmorType>)\n\t\t\t\t\t.filter(at => at != ArmorType.ArmorTypeUnknown)\n\t\t\t\t\t.filter(at => at <= maxArmorType);\n\n\t\t\t\tarmorTypes.forEach(armorType => {\n\t\t\t\t\tnew BooleanPicker<Sim>(section, player.sim, {\n\t\t\t\t\t\tlabel: armorTypeNames.get(armorType),\n\t\t\t\t\t\tinline: true,\n\t\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().armorTypes.includes(armorType),\n\t\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\t\tfilters.armorTypes.push(armorType);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfilters.armorTypes = filters.armorTypes.filter(at => at != armorType);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (Player.WEAPON_SLOTS.includes(slot)) {\n\t\t\tconst weaponTypeSection = this.newSection('Weapon Type');\n\t\t\tweaponTypeSection.classList.add('filters-menu-section-bool-list');\n\t\t\tconst weaponTypes = classToEligibleWeaponTypes[player.getClass()].map(ewt => ewt.weaponType);\n\n\t\t\tweaponTypes.forEach(weaponType => {\n\t\t\t\tnew BooleanPicker<Sim>(weaponTypeSection, player.sim, {\n\t\t\t\t\tlabel: weaponTypeNames.get(weaponType),\n\t\t\t\t\tinline: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().weaponTypes.includes(weaponType),\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\tfilters.weaponTypes.push(weaponType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.weaponTypes = filters.weaponTypes.filter(at => at != weaponType);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst weaponSpeedSection = this.newSection('Weapon Speed');\n\t\t\tweaponSpeedSection.classList.add('filters-menu-section-number-list');\n\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Min MH Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the mainhand weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().minMhWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.minMhWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Max MH Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the mainhand weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().maxMhWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.maxMhWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (canDualWield(player)) {\n\t\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\t\tlabel: 'Min OH Speed',\n\t\t\t\t\t//labelTooltip: 'Minimum speed for the offhand weapon. If 0, no minimum value is applied.',\n\t\t\t\t\tfloat: true,\n\t\t\t\t\tpositive: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().minOhWeaponSpeed,\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tfilters.minOhWeaponSpeed = newValue;\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tnew NumberPicker<Sim>(weaponSpeedSection, player.sim, {\n\t\t\t\t\tlabel: 'Max OH Speed',\n\t\t\t\t\t//labelTooltip: 'Maximum speed for the offhand weapon. If 0, no maximum value is applied.',\n\t\t\t\t\tfloat: true,\n\t\t\t\t\tpositive: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().maxOhWeaponSpeed,\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tfilters.maxOhWeaponSpeed = newValue;\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (slot == ItemSlot.ItemSlotRanged) {\n\t\t\tconst rangedWeaponTypes = classToEligibleRangedWeaponTypes[player.getClass()];\n\t\t\tif (rangedWeaponTypes.length <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst rangedWeaponTypeSection = this.newSection('Ranged Weapon Type');\n\t\t\trangedWeaponTypeSection.classList.add('filters-menu-section-bool-list');\n\n\t\t\trangedWeaponTypes.forEach(rangedWeaponType => {\n\t\t\t\tnew BooleanPicker<Sim>(rangedWeaponTypeSection, player.sim, {\n\t\t\t\t\tlabel: rangedWeaponTypeNames.get(rangedWeaponType),\n\t\t\t\t\tinline: true,\n\t\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().rangedWeaponTypes.includes(rangedWeaponType),\n\t\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\tfilters.rangedWeaponTypes.push(rangedWeaponType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.rangedWeaponTypes = filters.rangedWeaponTypes.filter(at => at != rangedWeaponType);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst rangedWeaponSpeedSection = this.newSection('Ranged Weapon Speed');\n\t\t\trangedWeaponSpeedSection.classList.add('filters-menu-section-number-list');\n\t\t\tnew NumberPicker<Sim>(rangedWeaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Min Ranged Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the ranged weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().minRangedWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.minRangedWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t\tnew NumberPicker<Sim>(rangedWeaponSpeedSection, player.sim, {\n\t\t\t\tlabel: 'Max Ranged Speed',\n\t\t\t\t//labelTooltip: 'Maximum speed for the ranged weapon. If 0, no maximum value is applied.',\n\t\t\t\tfloat: true,\n\t\t\t\tpositive: true,\n\t\t\t\tchangedEvent: (sim: Sim) => sim.filtersChangeEmitter,\n\t\t\t\tgetValue: (sim: Sim) => sim.getFilters().maxRangedWeaponSpeed,\n\t\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\t\tconst filters = sim.getFilters();\n\t\t\t\t\tfilters.maxRangedWeaponSpeed = newValue;\n\t\t\t\t\tsim.setFilters(eventID, filters);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate newSection(name: string): HTMLElement {\n\t\tconst section = document.createElement('div');\n\t\tsection.classList.add('menu-section');\n\t\tthis.body.appendChild(section);\n\t\tsection.innerHTML = `\n\t\t\t<div class=\"menu-section-header\">\n\t\t\t\t<h6 class=\"menu-section-title\">${name}</h6>\n\t\t\t</div>\n\t\t\t<div class=\"menu-section-content\"></div>\n\t\t`;\n\t\treturn section.getElementsByClassName('menu-section-content')[0] as HTMLElement;\n\t}\n}\n","// Based on clusterize\r\n/* Clusterize.js - v1.0.0 - 2023-01-22\r\n http://NeXTs.github.com/Clusterize.js/\r\n Copyright (c) 2015 Denis Lukov; Licensed MIT */\r\n\r\ninterface ClusterizeCallbacks {\r\n    clusterWillChange?: () => void;\r\n    clusterChanged?: () => void;\r\n    scrollingProgress?: (n:number) => void;\r\n}\r\n\r\ninterface ClusterizeParams {\r\n    rows: Element[];\r\n    scroll_elem: HTMLElement;\r\n    content_elem: HTMLElement;\r\n\r\n    rows_in_block?: number;\r\n    blocks_in_cluster?: number;\r\n    show_no_data_row?: boolean;\r\n    no_data_class?:string;\r\n    no_data_text?:string;\r\n    keep_parity?:boolean;\r\n    tag?:keyof HTMLElementTagNameMap;\r\n    callbacks?: ClusterizeCallbacks;\r\n    item_height?:number;\r\n}\r\n\r\nlet defaults = {\r\n    rows_in_block: 50,\r\n    blocks_in_cluster: 4,\r\n    tag: null,\r\n    show_no_data_row: true,\r\n    no_data_class: 'clusterize-no-data',\r\n    no_data_text: 'No data',\r\n    keep_parity: true,\r\n    callbacks: {}\r\n}\r\n\r\nfunction getStyle(prop:string, elem:HTMLElement) {\r\n    return window.getComputedStyle(elem)[prop as any]\r\n}\r\n\r\ninterface ClusterizeOptions {\r\n    rows_in_block: number;\r\n    blocks_in_cluster: number;\r\n    show_no_data_row: boolean;\r\n    no_data_class:string;\r\n    no_data_text:string;\r\n    keep_parity:boolean;\r\n    tag:keyof HTMLElementTagNameMap | null;\r\n    callbacks: ClusterizeCallbacks;\r\n\r\n    cluster_height: number;\r\n    item_height: number;\r\n    content_tag: string;\r\n\r\n    block_height: number;\r\n    scroll_top: number;\r\n    rows_in_cluster: number;\r\n}\r\n\r\ninterface ClusterizeDatasource {\r\n    getNumberOfRows: () => number;\r\n    generateRows: (startIdx: number, endIdx: number) => Element[];\r\n}\r\n\r\nexport class Clusterize {\r\n    private options: ClusterizeOptions;\r\n    private scroll_elem: Element;\r\n    private content_elem: HTMLElement;\r\n    private displayedRows: Element[];\r\n\r\n    private last_cluster = 0;\r\n    private scroll_debounce = 0;\r\n    private pointer_events_set = false;\r\n    private resize_debounce = 0;\r\n\r\n    private ds: ClusterizeDatasource;\r\n    private cache = {};\r\n\r\n    constructor(ds: ClusterizeDatasource, params: ClusterizeParams) {\r\n        this.options = {\r\n            rows_in_block: params.rows_in_block !== undefined ? params.rows_in_block : defaults.rows_in_block,\r\n            blocks_in_cluster: params.blocks_in_cluster !== undefined ? params.blocks_in_cluster : defaults.blocks_in_cluster,\r\n            show_no_data_row: params.show_no_data_row !== undefined ? params.show_no_data_row : defaults.show_no_data_row,\r\n            no_data_class: params.no_data_class !== undefined ? params.no_data_class : defaults.no_data_class,\r\n            no_data_text: params.no_data_text !== undefined ? params.no_data_text : defaults.no_data_text,\r\n            keep_parity: params.keep_parity !== undefined ? params.keep_parity : defaults.keep_parity,\r\n            tag: params.tag !== undefined ? params.tag : defaults.tag,\r\n            callbacks: params.callbacks !== undefined ? params.callbacks : defaults.callbacks,\r\n            cluster_height: 0,\r\n            item_height: params.item_height !== undefined ? params.item_height : 0,\r\n            content_tag: '',\r\n            block_height: 0,\r\n            scroll_top: 0,\r\n            rows_in_cluster: 0,\r\n        }\r\n\r\n        this.ds = ds;\r\n        this.displayedRows = params.rows;\r\n        this.scroll_elem = params.scroll_elem;\r\n        this.content_elem = params.content_elem;\r\n\r\n        // tabindex forces the browser to keep focus on the scrolling list, fixes #11\r\n        if(!this.content_elem.hasAttribute('tabindex'))\r\n            this.content_elem.setAttribute('tabindex', '0');\r\n  \r\n        let scroll_top = this.scroll_elem.scrollTop;\r\n  \r\n        // append initial data\r\n        this.getRowsHeight(params.rows);\r\n        this.insertToDom(params.rows, this.cache);\r\n  \r\n        // restore the scroll position\r\n        this.scroll_elem.scrollTop = scroll_top;\r\n    \r\n        // adding scroll handler\r\n        this.scroll_elem.addEventListener('scroll', this.scrollEv.bind(this));\r\n        window.addEventListener('resize', this.resizeEv.bind(this));\r\n    }\r\n\r\n    destroy(clean? : boolean) {\r\n        this.scroll_elem.removeEventListener('scroll', this.scrollEv.bind(this));\r\n        window.removeEventListener('resize', this.resizeEv.bind(this));\r\n        if (clean)\r\n            this.setContentElemRows(this.generateEmptyRow());\r\n    }\r\n\r\n    dispose() {\r\n        this.destroy();\r\n    }\r\n\r\n    refresh(force?: boolean) {\r\n        if(this.getRowsHeight(this.displayedRows) || force)\r\n            this.update();\r\n    }\r\n\r\n    update() {\r\n        let scroll_top = this.scroll_elem.scrollTop;\r\n        if(this.ds.getNumberOfRows() * this.options.item_height < scroll_top) {\r\n            this.scroll_elem.scrollTop = 0;\r\n            this.last_cluster = 0;\r\n        }\r\n        this.insertToDom(this.displayedRows, this.cache);\r\n        this.scroll_elem.scrollTop = scroll_top;\r\n    }\r\n\r\n    elementUpdate(cb: (e: Element) => void) {\r\n        for (let r of this.displayedRows) {\r\n            cb(r);\r\n        }\r\n    }\r\n\r\n    getScrollProgress() {\r\n        return this.options.scroll_top / (this.ds.getNumberOfRows() * this.options.item_height) * 100 || 0;\r\n    }\r\n\r\n    private scrollEv() {\r\n        // fixes scrolling issue on Mac #3\r\n        let is_mac = navigator.platform.toLowerCase().indexOf('mac') + 1;\r\n        if (is_mac) {\r\n            if (!this.pointer_events_set) \r\n                this.content_elem.style.pointerEvents = 'none';\r\n            this.pointer_events_set = true;\r\n            clearTimeout(this.scroll_debounce);\r\n            this.scroll_debounce = window.setTimeout(() => {\r\n                this.content_elem.style.pointerEvents = 'auto';\r\n                this.pointer_events_set = false;\r\n            }, 50);\r\n        }\r\n        if (this.last_cluster != (this.last_cluster = this.getClusterNum(this.ds.getNumberOfRows())))\r\n            this.insertToDom(this.displayedRows, this.cache);\r\n        if (this.options.callbacks.scrollingProgress)\r\n            this.options.callbacks.scrollingProgress(this.getScrollProgress());\r\n    };\r\n\r\n    private resizeEv() {\r\n        clearTimeout(this.resize_debounce);\r\n        this.resize_debounce = window.setTimeout(this.refresh.bind(this), 100);\r\n    }\r\n\r\n    private insertToDom(rows: Element[], cache: any) {\r\n        // explore row's height\r\n        if(!this.options.cluster_height) {\r\n            this.exploreEnvironment(rows, cache);\r\n        }\r\n        let data = this.generate();\r\n        let this_cluster_rows = data.rows;\r\n        this.displayedRows = data.rows;\r\n        let this_cluster_content_changed = this.checkChanges('data', this_cluster_rows, cache);\r\n        let top_offset_changed = this.checkChanges('top', data.top_offset, cache);\r\n        let only_bottom_offset_changed = this.checkChanges('bottom', data.bottom_offset, cache);\r\n        let callbacks = this.options.callbacks;\r\n        let layout: Element[] = [];\r\n\r\n        if(this_cluster_content_changed || top_offset_changed) {\r\n            if(data.top_offset) {\r\n                if (this.options.keep_parity) {\r\n                    let parity = this.renderExtraTag('keep-parity');\r\n                    parity.hidden = true;\r\n                    layout.push(parity);\r\n                }\r\n                layout.push(this.renderExtraTag('top-space', data.top_offset));\r\n            }\r\n            layout.push(...this_cluster_rows);\r\n            data.bottom_offset && layout.push(this.renderExtraTag('bottom-space', data.bottom_offset));\r\n            callbacks.clusterWillChange && callbacks.clusterWillChange();\r\n            this.setContentElemRows(layout);\r\n            this.options.content_tag == 'ol' && this.content_elem.setAttribute('start', data.rows_above.toString());\r\n            this.content_elem.style.counterIncrement = 'clusterize-counter ' + (data.rows_above-1);\r\n            callbacks.clusterChanged && callbacks.clusterChanged();\r\n        } else if(only_bottom_offset_changed) {\r\n            (this.content_elem.lastChild as HTMLElement).style.height = data.bottom_offset + 'px';\r\n        }\r\n    }\r\n\r\n    // get tag name, content tag name, tag height, calc cluster height\r\n    private exploreEnvironment(rows: Element[], cache: any) {\r\n        let opts = this.options;\r\n        opts.content_tag = this.content_elem.tagName.toLowerCase();\r\n        if (!rows.length)\r\n            return;\r\n        if (this.content_elem.children.length <= 1)\r\n            this.setContentElemRows([rows[0], rows[0], rows[0]]);\r\n        if (!opts.tag)\r\n            opts.tag = this.content_elem.children[0].tagName.toLowerCase() as keyof HTMLElementTagNameMap;\r\n            this.getRowsHeight(rows);\r\n    }\r\n\r\n    private setContentElemRows(rows: Element[]) {\r\n        this.content_elem.innerHTML = ``;\r\n        this.content_elem.append(...rows);\r\n    }\r\n\r\n    private getRowsHeight(rows: Element[]) {\r\n        let opts = this.options;\r\n        let prev_item_height = opts.item_height;\r\n        opts.cluster_height = 0;\r\n        let nodes = this.content_elem.children;\r\n        if (rows.length && nodes.length) {\r\n            let node = nodes[Math.floor(nodes.length / 2)] as HTMLElement;\r\n            opts.item_height = node.offsetHeight;\r\n            // consider table's border-spacing\r\n            if(opts.tag == 'tr' && getStyle('borderCollapse', this.content_elem) != 'collapse')\r\n                opts.item_height += parseInt(getStyle('borderSpacing', this.content_elem), 10) || 0;\r\n            // consider margins (and margins collapsing)\r\n            if(opts.tag != 'tr') {\r\n                let marginTop = parseInt(getStyle('marginTop', node), 10) || 0;\r\n                let marginBottom = parseInt(getStyle('marginBottom', node), 10) || 0;\r\n                opts.item_height += Math.max(marginTop, marginBottom);\r\n            }\r\n        }\r\n        opts.block_height = opts.item_height * opts.rows_in_block;\r\n        opts.rows_in_cluster = opts.blocks_in_cluster * opts.rows_in_block;\r\n        opts.cluster_height = opts.blocks_in_cluster * opts.block_height;\r\n        return prev_item_height != opts.item_height;\r\n    }\r\n\r\n    // generate cluster for current scroll position\r\n    private generate() {\r\n        let opts = this.options;\r\n        let rows_len = this.ds.getNumberOfRows();\r\n        if (rows_len < opts.rows_in_block) {\r\n            let rows = this.ds.generateRows(0, rows_len);\r\n            return {\r\n                top_offset: 0,\r\n                bottom_offset: 0,\r\n                rows_above: 0,\r\n                rows: rows_len ? rows : this.generateEmptyRow()\r\n            }\r\n        }\r\n        let items_start = Math.max((opts.rows_in_cluster - opts.rows_in_block) * this.getClusterNum(rows_len), 0),\r\n          items_end = items_start + opts.rows_in_cluster,\r\n          top_offset = Math.max(items_start * opts.item_height, 0),\r\n          bottom_offset = Math.max((rows_len - items_end) * opts.item_height, 0),\r\n          this_cluster_rows = [],\r\n          rows_above = items_start;\r\n        if(top_offset < 1) {\r\n            rows_above++;\r\n        }\r\n        this_cluster_rows = this.ds.generateRows(items_start, items_end);\r\n        return {\r\n            top_offset: top_offset,\r\n            bottom_offset: bottom_offset,\r\n            rows_above: rows_above,\r\n            rows: this_cluster_rows\r\n        }\r\n    }\r\n\r\n    // generate empty row if no data provided\r\n    private generateEmptyRow() : Element[] {\r\n        let opts = this.options;\r\n        if(!opts.tag || !opts.show_no_data_row) \r\n            return [];\r\n        let empty_row = document.createElement(opts.tag);\r\n        let no_data_content = document.createTextNode(opts.no_data_text), td;\r\n        empty_row.className = opts.no_data_class;\r\n        if(opts.tag == 'tr') {\r\n            td = document.createElement('td');\r\n            // fixes #53\r\n            td.colSpan = 100;\r\n            td.appendChild(no_data_content);\r\n        }\r\n        empty_row.appendChild(td || no_data_content);\r\n        return [empty_row];\r\n    }\r\n\r\n    // get current cluster number\r\n    private getClusterNum(num_rows: number) {\r\n        let opts = this.options;\r\n        opts.scroll_top = this.scroll_elem.scrollTop;\r\n        let cluster_divider = Math.max(opts.cluster_height - opts.block_height, 1);\r\n        let current_cluster = Math.floor(opts.scroll_top / cluster_divider);\r\n        let max_cluster = Math.floor((num_rows * opts.item_height) / cluster_divider);\r\n        return Math.min(current_cluster, max_cluster);\r\n    }\r\n\r\n    private renderExtraTag(class_name: string, height?: number) {\r\n        let tag = document.createElement(this.options.tag!);\r\n        let clusterize_prefix = 'clusterize-';\r\n\r\n        tag.className = [clusterize_prefix + 'extra-row', clusterize_prefix + class_name].join(' ');\r\n        tag.style.marginTop = '0';\r\n        tag.style.marginBottom = '0';\r\n        height && (tag.style.height = height + 'px');\r\n        return tag;\r\n    }\r\n\r\n    private checkChanges(type: string, value: any, cache: any) {\r\n        var changed = value != cache[type];\r\n        cache[type] = value;\r\n        return changed;\r\n    }\r\n}","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment, ref } from 'tsx-vanilla';\n\nimport { setItemQualityCssClass } from '../css_utils';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Player } from '../player';\nimport { Class, ItemQuality, ItemRandomSuffix, ItemSlot, ItemSpec } from '../proto/common';\nimport { DatabaseFilters, UIEnchant as Enchant, UIItem as Item, UIItem_FactionRestriction, UIRune as Rune } from '../proto/ui.js';\nimport { ActionId } from '../proto_utils/action_id';\nimport { getEnchantDescription, getUniqueEnchantString } from '../proto_utils/enchants';\nimport { EquippedItem } from '../proto_utils/equipped_item';\nimport { professionNames, REP_LEVEL_NAMES, slotNames } from '../proto_utils/names.js';\nimport { Stats } from '../proto_utils/stats';\nimport { itemTypeToSlotsMap } from '../proto_utils/utils.js';\nimport { Sim } from '../sim.js';\nimport { SimUI } from '../sim_ui';\nimport { EventID, TypedEvent } from '../typed_event';\nimport { formatDeltaTextElem } from '../utils';\nimport { BaseModal } from './base_modal';\nimport { Component } from './component';\nimport { FiltersMenu } from './filters_menu';\nimport { makeShow1hWeaponsSelector, makeShow2hWeaponsSelector, makeShowEPValuesSelector } from './other_inputs';\nimport { Clusterize } from './virtual_scroll/clusterize.js';\n\nconst EP_TOOLTIP = `\n\tEP (Equivalence Points) is way of comparing items by multiplying the raw stats of an item with your current stat weights.\n\tMore EP does not necessarily mean more DPS, as EP doesn't take into account stat caps and non-linear stat calculations.\n`;\n\nexport class GearPicker extends Component {\n\t// ItemSlot is used as the index\n\treadonly itemPickers: Array<ItemPicker>;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<any>) {\n\t\tsuper(parent, 'gear-picker-root');\n\n\t\tconst leftSide = document.createElement('div');\n\t\tleftSide.classList.add('gear-picker-left', 'tab-panel-col');\n\t\tthis.rootElem.appendChild(leftSide);\n\n\t\tconst rightSide = document.createElement('div');\n\t\trightSide.classList.add('gear-picker-right', 'tab-panel-col');\n\t\tthis.rootElem.appendChild(rightSide);\n\n\t\tconst leftItemPickers = [\n\t\t\tItemSlot.ItemSlotHead,\n\t\t\tItemSlot.ItemSlotNeck,\n\t\t\tItemSlot.ItemSlotShoulder,\n\t\t\tItemSlot.ItemSlotBack,\n\t\t\tItemSlot.ItemSlotChest,\n\t\t\tItemSlot.ItemSlotWrist,\n\t\t\tItemSlot.ItemSlotMainHand,\n\t\t\tItemSlot.ItemSlotOffHand,\n\t\t\tItemSlot.ItemSlotRanged,\n\t\t].map(slot => new ItemPicker(leftSide, simUI, player, slot));\n\n\t\tconst rightItemPickers = [\n\t\t\tItemSlot.ItemSlotHands,\n\t\t\tItemSlot.ItemSlotWaist,\n\t\t\tItemSlot.ItemSlotLegs,\n\t\t\tItemSlot.ItemSlotFeet,\n\t\t\tItemSlot.ItemSlotFinger1,\n\t\t\tItemSlot.ItemSlotFinger2,\n\t\t\tItemSlot.ItemSlotTrinket1,\n\t\t\tItemSlot.ItemSlotTrinket2,\n\t\t].map(slot => new ItemPicker(rightSide, simUI, player, slot));\n\n\t\tthis.itemPickers = leftItemPickers.concat(rightItemPickers).sort((a, b) => a.slot - b.slot);\n\t}\n}\n\nexport class ItemRenderer extends Component {\n\tprivate readonly player: Player<any>;\n\n\treadonly iconElem: HTMLAnchorElement;\n\treadonly nameElem: HTMLAnchorElement;\n\treadonly enchantElem: HTMLAnchorElement;\n\treadonly runeElem: HTMLAnchorElement;\n\n\tconstructor(parent: HTMLElement, root: HTMLElement, player: Player<any>) {\n\t\tsuper(parent, 'item-picker-root', root);\n\t\tthis.player = player;\n\n\t\tconst iconElem = ref<HTMLAnchorElement>();\n\t\tconst nameElem = ref<HTMLAnchorElement>();\n\t\tconst enchantElem = ref<HTMLAnchorElement>();\n\t\tconst runeElem = ref<HTMLAnchorElement>();\n\t\tthis.rootElem.appendChild(\n\t\t\t<>\n\t\t\t\t<a ref={iconElem} className=\"item-picker-icon\" href=\"javascript:void(0)\" attributes={{ role: 'button' }}></a>\n\t\t\t\t<div className=\"item-picker-labels-container\">\n\t\t\t\t\t<a ref={nameElem} className=\"item-picker-name\" href=\"javascript:void(0)\" attributes={{ role: 'button' }}></a>\n\t\t\t\t\t<a ref={enchantElem} className=\"item-picker-enchant\" href=\"javascript:void(0)\" attributes={{ role: 'button' }}></a>\n\t\t\t\t\t<a ref={runeElem} className=\"item-picker-rune\" href=\"javascript:void(0)\" attributes={{ role: 'button' }}></a>\n\t\t\t\t</div>\n\t\t\t</>,\n\t\t);\n\n\t\tthis.iconElem = iconElem.value!;\n\t\tthis.nameElem = nameElem.value!;\n\t\tthis.enchantElem = enchantElem.value!;\n\t\tthis.runeElem = runeElem.value!;\n\t}\n\n\tclear() {\n\t\tthis.iconElem.removeAttribute('data-wowhead');\n\t\tthis.iconElem.removeAttribute('href');\n\t\tthis.nameElem.removeAttribute('data-wowhead');\n\t\tthis.nameElem.removeAttribute('href');\n\t\tthis.enchantElem.removeAttribute('data-wowhead');\n\t\tthis.enchantElem.removeAttribute('href');\n\t\tthis.runeElem.removeAttribute('data-wowhead');\n\t\tthis.runeElem.removeAttribute('href');\n\n\t\tthis.iconElem.style.backgroundImage = '';\n\t\tthis.nameElem.innerText = '';\n\t\tthis.enchantElem.innerText = '';\n\t\tthis.runeElem.innerText = '';\n\t}\n\n\tupdate(newItem: EquippedItem) {\n\t\tthis.nameElem.textContent = newItem.item.name;\n\n\t\tif (newItem.randomSuffix) {\n\t\t\tthis.nameElem.textContent += ' ' + newItem.randomSuffix.name;\n\t\t}\n\n\t\tsetItemQualityCssClass(this.nameElem, newItem.item.quality);\n\n\t\tthis.player.setWowheadData(newItem, this.iconElem);\n\t\tthis.player.setWowheadData(newItem, this.nameElem);\n\t\tnewItem\n\t\t\t.asActionId()\n\t\t\t.fill()\n\t\t\t.then(filledId => {\n\t\t\t\tfilledId.setBackgroundAndHref(this.iconElem);\n\t\t\t\tfilledId.setWowheadHref(this.nameElem);\n\t\t\t});\n\n\t\tif (newItem.enchant) {\n\t\t\tgetEnchantDescription(newItem.enchant).then(description => {\n\t\t\t\tthis.enchantElem.textContent = description;\n\t\t\t});\n\t\t\t// Make enchant text hover have a tooltip.\n\t\t\tif (newItem.enchant.spellId) {\n\t\t\t\tthis.enchantElem.href = ActionId.makeSpellUrl(newItem.enchant.spellId);\n\t\t\t\tthis.enchantElem.dataset.wowhead = `domain=classic&spell=${newItem.enchant.spellId}`;\n\t\t\t} else {\n\t\t\t\tthis.enchantElem.href = ActionId.makeItemUrl(newItem.enchant.itemId);\n\t\t\t\tthis.enchantElem.dataset.wowhead = `domain=classic&item=${newItem.enchant.itemId}`;\n\t\t\t}\n\t\t\tthis.enchantElem.dataset.whtticon = 'false';\n\t\t}\n\n\t\tconst isRuneSlot = itemTypeToSlotsMap[newItem._item.type]?.some(slot => this.player.sim.db.hasRuneBySlot(slot, this.player.getClass()));\n\t\tif (isRuneSlot) {\n\t\t\tthis.iconElem.appendChild(this.createRuneContainer(newItem.rune));\n\n\t\t\tif (newItem.rune) {\n\t\t\t\tthis.runeElem.textContent = newItem.rune.name;\n\t\t\t\tthis.runeElem.href = ActionId.makeSpellUrl(newItem.rune.id);\n\t\t\t\tthis.runeElem.dataset.wowhead = `domain=classic&spell=${newItem.rune.id}`;\n\t\t\t\tthis.runeElem.dataset.whtticon = 'false';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createRuneContainer = (rune: Rune | null) => {\n\t\tconst runeIconElem = ref<HTMLImageElement>();\n\t\tconst runeContainer = (\n\t\t\t<div className=\"item-picker-rune-container\">\n\t\t\t\t<img ref={runeIconElem} className=\"item-picker-rune-icon\" />\n\t\t\t</div>\n\t\t);\n\n\t\tif (rune) {\n\t\t\tActionId.fromSpellId(rune.id)\n\t\t\t\t.fill()\n\t\t\t\t.then(filledId => (runeIconElem.value!.src = filledId.iconUrl));\n\t\t} else {\n\t\t\truneIconElem.value!.src = 'https://wow.zamimg.com/images/wow/icons/medium/inventoryslot_empty.jpg';\n\t\t}\n\n\t\treturn runeContainer;\n\t};\n}\n\nexport class ItemPicker extends Component {\n\treadonly slot: ItemSlot;\n\n\tprivate readonly simUI: SimUI;\n\tprivate readonly player: Player<any>;\n\n\tprivate readonly itemElem: ItemRenderer;\n\n\t// All items and enchants that are eligible for this slot\n\tprivate _items: Array<Item> = [];\n\tprivate _enchants: Array<Enchant> = [];\n\tprivate _runes: Array<Rune> = [];\n\tprivate _equippedItem: EquippedItem | null = null;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<any>, slot: ItemSlot) {\n\t\tsuper(parent, 'item-picker-root');\n\t\tthis.slot = slot;\n\t\tthis.simUI = simUI;\n\t\tthis.player = player;\n\t\tthis.itemElem = new ItemRenderer(parent, this.rootElem, player);\n\n\t\tconst loadItems = () => (this._items = this.player.getItems(this.slot));\n\t\tconst loadItem = () => (this.item = player.getEquippedItem(slot));\n\n\t\tplayer.sim.waitForInit().then(() => {\n\t\t\tthis._enchants = this.player.getEnchants(this.slot);\n\t\t\tthis._runes = this.player.getRunes(this.slot);\n\t\t\tloadItems();\n\t\t\tloadItem();\n\n\t\t\tconst gearData = {\n\t\t\t\tequipItem: (eventID: EventID, equippedItem: EquippedItem | null) => {\n\t\t\t\t\tthis.player.equipItem(eventID, this.slot, equippedItem);\n\t\t\t\t},\n\t\t\t\tgetEquippedItem: () => this.player.getEquippedItem(this.slot),\n\t\t\t\tchangeEvent: player.gearChangeEmitter,\n\t\t\t};\n\n\t\t\tconst openGearSelector = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.openSelectorModal(SelectorModalTabs.Items, gearData);\n\t\t\t};\n\t\t\tconst openEnchantSelector = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.openSelectorModal(SelectorModalTabs.Enchants, gearData);\n\t\t\t};\n\t\t\tconst openRuneSelector = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.openSelectorModal(SelectorModalTabs.Runes, gearData);\n\t\t\t};\n\n\t\t\tthis.itemElem.iconElem.addEventListener('click', openGearSelector);\n\t\t\tthis.itemElem.nameElem.addEventListener('click', openGearSelector);\n\t\t\tthis.itemElem.enchantElem.addEventListener('click', openEnchantSelector);\n\t\t\tthis.itemElem.runeElem.addEventListener('click', openRuneSelector);\n\n\t\t\tplayer.levelChangeEmitter.on(loadItems);\n\t\t\tplayer.gearChangeEmitter.on(loadItem);\n\t\t\tplayer.professionChangeEmitter.on(() => {\n\t\t\t\tif (this._equippedItem != null) {\n\t\t\t\t\tthis.player.setWowheadData(this._equippedItem, this.itemElem.iconElem);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.addOnDisposeCallback(() => {\n\t\t\t\tplayer.levelChangeEmitter.off(loadItems);\n\t\t\t\tplayer.itemSwapChangeEmitter.on(loadItems);\n\t\t\t});\n\t\t});\n\t}\n\n\tset item(newItem: EquippedItem | null) {\n\t\t// Clear everything first\n\t\tthis.itemElem.clear();\n\t\tthis.itemElem.nameElem.textContent = slotNames.get(this.slot) ?? '';\n\t\tsetItemQualityCssClass(this.itemElem.nameElem, null);\n\n\t\tif (newItem != null) {\n\t\t\tthis.itemElem.update(newItem);\n\t\t} else {\n\t\t\tthis.itemElem.iconElem.style.backgroundImage = `url('${getEmptySlotIconUrl(this.slot)}')`;\n\t\t}\n\n\t\tthis._equippedItem = newItem;\n\t}\n\n\tprivate openSelectorModal(tab: SelectorModalTabs, gearData: GearData) {\n\t\tnew SelectorModal(this.simUI.rootElem, this.simUI, this.player, {\n\t\t\tselectedTab: tab,\n\t\t\tslot: this.slot,\n\t\t\tequippedItem: this._equippedItem,\n\t\t\teligibleItems: this._items,\n\t\t\teligibleEnchants: this._enchants,\n\t\t\teligibleRunes: this._runes,\n\t\t\tgearData: gearData,\n\t\t});\n\t}\n}\n\nexport class IconItemSwapPicker extends Component {\n\tprivate readonly iconAnchor: HTMLAnchorElement;\n\tprivate readonly socketsContainerElem: HTMLElement;\n\tprivate readonly player: Player<any>;\n\tprivate readonly slot: ItemSlot;\n\n\t// All items and enchants that are eligible for this slot\n\tprivate _items: Array<Item> = [];\n\tprivate _enchants: Array<Enchant> = [];\n\tprivate _runes: Array<Rune> = [];\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<any>, slot: ItemSlot) {\n\t\tsuper(parent, 'icon-picker-root');\n\t\tthis.rootElem.classList.add('icon-picker');\n\t\tthis.player = player;\n\t\tthis.slot = slot;\n\n\t\tthis.iconAnchor = document.createElement('a');\n\t\tthis.iconAnchor.classList.add('icon-picker-button');\n\t\tthis.iconAnchor.target = '_blank';\n\t\tthis.rootElem.prepend(this.iconAnchor);\n\n\t\tthis.socketsContainerElem = document.createElement('div');\n\t\tthis.socketsContainerElem.classList.add('item-picker-sockets-container');\n\t\tthis.iconAnchor.appendChild(this.socketsContainerElem);\n\n\t\tplayer.sim.waitForInit().then(() => {\n\t\t\tthis._items = this.player.getItems(slot);\n\t\t\tthis._enchants = this.player.getEnchants(slot);\n\t\t\tthis._runes = this.player.getRunes(slot);\n\n\t\t\tconst gearData = {\n\t\t\t\tequipItem: (eventID: EventID, newItem: EquippedItem | null) => {\n\t\t\t\t\tplayer.equipItemSwapitem(eventID, this.slot, newItem);\n\t\t\t\t},\n\t\t\t\tgetEquippedItem: () => player.getItemSwapItem(this.slot),\n\t\t\t\tchangeEvent: player.itemSwapChangeEmitter,\n\t\t\t};\n\n\t\t\tthis.iconAnchor.addEventListener('click', (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tnew SelectorModal(simUI.rootElem, simUI, this.player, {\n\t\t\t\t\tselectedTab: SelectorModalTabs.Items,\n\t\t\t\t\tslot: this.slot,\n\t\t\t\t\tequippedItem: this.player.getItemSwapGear().getEquippedItem(slot),\n\t\t\t\t\teligibleItems: this._items,\n\t\t\t\t\teligibleEnchants: this._enchants,\n\t\t\t\t\teligibleRunes: this._runes,\n\t\t\t\t\tgearData: gearData,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tplayer.itemSwapChangeEmitter.on(() => {\n\t\t\tthis.update(player.getItemSwapGear().getEquippedItem(slot));\n\t\t});\n\t}\n\n\tupdate(newItem: EquippedItem | null) {\n\t\tthis.iconAnchor.style.backgroundImage = `url('${getEmptySlotIconUrl(this.slot)}')`;\n\t\tthis.iconAnchor.removeAttribute('data-wowhead');\n\t\tthis.iconAnchor.href = '#';\n\t\tthis.socketsContainerElem.innerText = '';\n\n\t\tif (newItem) {\n\t\t\tthis.iconAnchor.classList.add('active');\n\n\t\t\tnewItem.asActionId().fillAndSet(this.iconAnchor, true, true);\n\t\t\tthis.player.setWowheadData(newItem, this.iconAnchor);\n\t\t} else {\n\t\t\tthis.iconAnchor.classList.remove('active');\n\t\t}\n\t}\n}\n\nexport interface GearData {\n\tequipItem: (eventID: EventID, equippedItem: EquippedItem | null) => void;\n\tgetEquippedItem: () => EquippedItem | null;\n\tchangeEvent: TypedEvent<any>;\n}\n\nexport enum SelectorModalTabs {\n\tItems = 'Items',\n\tEnchants = 'Enchants',\n\tRunes = 'Runes',\n}\n\ninterface SelectorModalConfig {\n\tselectedTab: SelectorModalTabs;\n\tslot: ItemSlot;\n\tequippedItem: EquippedItem | null;\n\teligibleItems: Array<Item>;\n\teligibleEnchants: Array<Enchant>;\n\teligibleRunes: Array<Rune>;\n\tgearData: GearData;\n}\n\nexport class SelectorModal extends BaseModal {\n\tprivate readonly simUI: SimUI;\n\tprivate player: Player<any>;\n\tprivate config: SelectorModalConfig;\n\tprivate ilists: ItemList<any>[];\n\n\tprivate readonly tabsElem: HTMLElement;\n\tprivate readonly contentElem: HTMLElement;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, player: Player<any>, config: SelectorModalConfig) {\n\t\tsuper(parent, 'selector-modal');\n\n\t\tthis.simUI = simUI;\n\t\tthis.player = player;\n\t\tthis.config = config;\n\t\tthis.ilists = [];\n\n\t\twindow.scrollTo({ top: 0 });\n\n\t\tthis.header!.insertAdjacentElement('afterbegin', <ul className=\"nav nav-tabs selector-modal-tabs\"></ul>);\n\n\t\tthis.body.appendChild(<div className=\"tab-content selector-modal-tab-content\"></div>);\n\n\t\tthis.tabsElem = this.rootElem.querySelector('.selector-modal-tabs') as HTMLElement;\n\t\tthis.contentElem = this.rootElem.querySelector('.selector-modal-tab-content') as HTMLElement;\n\n\t\tthis.setData();\n\n\t\tthis.body.appendChild(\n\t\t\t<div className=\"d-flex align-items-center form-text mt-3\">\n\t\t\t\t<i className=\"fas fa-circle-exclamation fa-xl me-2\"></i>\n\t\t\t\t<span>\n\t\t\t\t\tIf gear is missing, check your gear filters and your level in the \"Settings\" tab.\n\t\t\t\t\t<br />\n\t\t\t\t\tIf the problem persists, save any un-saved data, click the\n\t\t\t\t\t<i className=\"fas fa-cog mx-1\"></i>\n\t\t\t\t\tto open your sim options, then click the \"Restore Defaults\".\n\t\t\t\t</span>\n\t\t\t</div>,\n\t\t);\n\t}\n\n\t// Could be 'Items' 'Enchants' or 'Rune'\n\topenTabName(name: string) {\n\t\tArray.from(this.tabsElem.getElementsByClassName('selector-modal-item-tab')).forEach(elem => {\n\t\t\tif (elem.getAttribute('data-content-id') == name + '-tab') {\n\t\t\t\t(elem as HTMLElement).click();\n\t\t\t}\n\t\t});\n\t}\n\n\topenTab(idx: number) {\n\t\tconst elems = this.tabsElem.getElementsByClassName('selector-modal-item-tab');\n\t\t(elems[idx] as HTMLElement).click();\n\t}\n\n\tsetData() {\n\t\tthis.tabsElem.innerText = '';\n\t\tthis.contentElem.innerText = '';\n\n\t\tconst { slot, equippedItem, eligibleItems, eligibleEnchants, eligibleRunes, gearData } = this.config;\n\n\t\tthis.addTab<Item>(\n\t\t\tSelectorModalTabs.Items,\n\t\t\teligibleItems.map(item => {\n\t\t\t\treturn {\n\t\t\t\t\titem: item,\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tactionId: ActionId.fromItem(item),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tquality: item.quality,\n\t\t\t\t\tphase: item.phase,\n\t\t\t\t\tbaseEP: this.player.computeItemEP(item, slot),\n\t\t\t\t\tignoreEPFilter: false,\n\t\t\t\t\tonEquip: (eventID, item: Item) => {\n\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\t\tif (equippedItem) {\n\t\t\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withItem(item));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgearData.equipItem(eventID, new EquippedItem({ item }));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\titem => this.player.computeItemEP(item, slot),\n\t\t\tequippedItem => equippedItem?.item,\n\t\t\teventID => {\n\t\t\t\tgearData.equipItem(eventID, null);\n\t\t\t\tthis.removeTabs('Random Suffixes');\n\t\t\t},\n\t\t);\n\n\t\tthis.addTab<Enchant>(\n\t\t\tSelectorModalTabs.Enchants,\n\t\t\teligibleEnchants.map(enchant => {\n\t\t\t\treturn {\n\t\t\t\t\titem: enchant,\n\t\t\t\t\tid: enchant.effectId,\n\t\t\t\t\tactionId: enchant.itemId ? ActionId.fromItemId(enchant.itemId) : ActionId.fromSpellId(enchant.spellId),\n\t\t\t\t\tname: enchant.name,\n\t\t\t\t\tquality: enchant.quality,\n\t\t\t\t\tphase: enchant.phase || 1,\n\t\t\t\t\tbaseEP: this.player.computeStatsEP(new Stats(enchant.stats)),\n\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\tonEquip: (eventID, enchant: Enchant) => {\n\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\t\tif (equippedItem) gearData.equipItem(eventID, equippedItem.withEnchant(enchant));\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\tenchant => this.player.computeEnchantEP(enchant),\n\t\t\tequippedItem => equippedItem?.enchant,\n\t\t\teventID => {\n\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\tif (equippedItem) gearData.equipItem(eventID, equippedItem.withEnchant(null));\n\t\t\t},\n\t\t);\n\n\t\tthis.addTab<Rune>(\n\t\t\tSelectorModalTabs.Runes,\n\t\t\teligibleRunes.map(rune => {\n\t\t\t\treturn {\n\t\t\t\t\titem: rune,\n\t\t\t\t\tid: rune.id,\n\t\t\t\t\tactionId: ActionId.fromSpellId(rune.id),\n\t\t\t\t\tname: rune.name,\n\t\t\t\t\tquality: ItemQuality.ItemQualityCommon,\n\t\t\t\t\tphase: 1,\n\t\t\t\t\tbaseEP: 1,\n\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\tonEquip: (eventID, rune: Rune) => {\n\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\t\t\tif (equippedItem) {\n\t\t\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withRune(rune));\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\t() => 1,\n\t\t\tequippedItem => equippedItem?.rune,\n\t\t\teventID => {\n\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\tif (equippedItem) {\n\t\t\t\t\tgearData.equipItem(eventID, equippedItem.withRune(null));\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tthis.addRandomSuffixTab(equippedItem, gearData);\n\t}\n\n\tprotected override onShow(e: Event) {\n\t\t// Only refresh opened tab\n\t\tconst t = e.target! as HTMLElement;\n\t\tconst tab = t.querySelector<HTMLElement>('.active')!.dataset.contentId!;\n\t\tif (tab.includes('Item')) {\n\t\t\tthis.ilists[0].sizeRefresh();\n\t\t} else if (tab.includes('Enchant')) {\n\t\t\tthis.ilists[1].sizeRefresh();\n\t\t} else if (tab.includes('Rune')) {\n\t\t\tthis.ilists[2].sizeRefresh();\n\t\t}\n\t}\n\n\tprivate addRandomSuffixTab(equippedItem: EquippedItem | null, gearData: GearData) {\n\t\tif (equippedItem == undefined || equippedItem.item.randomSuffixOptions.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemProto = equippedItem.item;\n\n\t\tthis.addTab<ItemRandomSuffix>(\n\t\t\t'Random Suffixes',\n\t\t\tthis.player.getRandomSuffixes(itemProto).map((randomSuffix: ItemRandomSuffix) => {\n\t\t\t\treturn {\n\t\t\t\t\titem: randomSuffix,\n\t\t\t\t\tid: randomSuffix.id,\n\t\t\t\t\tactionId: ActionId.fromRandomSuffix(itemProto, randomSuffix),\n\t\t\t\t\tname: randomSuffix.name,\n\t\t\t\t\tquality: itemProto.quality,\n\t\t\t\t\tphase: itemProto.phase,\n\t\t\t\t\tbaseEP: this.player.computeRandomSuffixEP(randomSuffix),\n\t\t\t\t\tignoreEPFilter: true,\n\t\t\t\t\tonEquip: (eventID, randomSuffix: ItemRandomSuffix) => {\n\t\t\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\n\t\t\t\t\t\tif (equippedItem) gearData.equipItem(eventID, equippedItem.withRandomSuffix(randomSuffix));\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}),\n\t\t\trandomSuffix => this.player.computeRandomSuffixEP(randomSuffix),\n\t\t\tequippedItem => equippedItem?.randomSuffix,\n\t\t\teventID => {\n\t\t\t\tconst equippedItem = gearData.getEquippedItem();\n\t\t\t\tif (equippedItem) gearData.equipItem(eventID, equippedItem.withRandomSuffix(null));\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Adds one of the tabs for the item selector menu.\n\t *\n\t * T is expected to be Item, Enchant, or Rune. Tab menus for all 3 looks extremely\n\t * similar so this function uses extra functions to do it generically.\n\t */\n\tprivate addTab<T>(\n\t\tlabel: string,\n\t\titemData: Array<ItemData<T>>,\n\t\tcomputeEP: (item: T) => number,\n\t\tequippedToItemFn: (equippedItem: EquippedItem | null) => T | null | undefined,\n\t\tonRemove: (eventID: EventID) => void,\n\t\tsetTabContent?: (tabElem: HTMLAnchorElement) => void,\n\t) {\n\t\tif (itemData.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { gearData } = this.config;\n\t\tconst tabContentId = (label + '-tab').split(' ').join('');\n\t\tconst selected = label === this.config.selectedTab;\n\n\t\tconst tabAnchor = ref<HTMLAnchorElement>();\n\t\tthis.tabsElem.appendChild(\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<a\n\t\t\t\t\tref={tabAnchor}\n\t\t\t\t\tclassName={`nav-link selector-modal-item-tab ${selected ? 'active' : ''}`}\n\t\t\t\t\tdataset={{\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tcontentId: tabContentId,\n\t\t\t\t\t\tbsToggle: 'tab',\n\t\t\t\t\t\tbsTarget: `#${tabContentId}`,\n\t\t\t\t\t}}\n\t\t\t\t\tattributes={{\n\t\t\t\t\t\trole: 'tab',\n\t\t\t\t\t\t'aria-selected': selected,\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"button\"></a>\n\t\t\t</li>,\n\t\t);\n\n\t\tif (setTabContent) {\n\t\t\tsetTabContent(tabAnchor.value!);\n\t\t} else {\n\t\t\ttabAnchor.value!.textContent = label;\n\t\t}\n\n\t\tconst ilist = new ItemList<T>(\n\t\t\tthis.contentElem,\n\t\t\tthis.simUI,\n\t\t\tthis.config,\n\t\t\tthis.player,\n\t\t\tlabel,\n\t\t\titemData,\n\t\t\tcomputeEP,\n\t\t\tequippedToItemFn,\n\t\t\tonRemove,\n\t\t\t(itemData: ItemData<T>) => {\n\t\t\t\tconst item = itemData.item;\n\t\t\t\titemData.onEquip(TypedEvent.nextEventID(), item);\n\n\t\t\t\t// If the item changes, then random suffix options will also change, so remove and recreate the suffix tab\n\t\t\t\tif (Item.is(item)) {\n\t\t\t\t\tthis.removeTabs('Random Suffixes');\n\t\t\t\t\tthis.addRandomSuffixTab(gearData.getEquippedItem(), gearData);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tconst invokeUpdate = () => {\n\t\t\tilist.updateSelected();\n\t\t};\n\t\tconst applyFilter = () => {\n\t\t\tilist.applyFilters();\n\t\t};\n\t\tconst hideOrShowEPValues = () => {\n\t\t\tilist.hideOrShowEPValues();\n\t\t};\n\t\t// Add event handlers\n\t\tgearData.changeEvent.on(invokeUpdate);\n\n\t\tthis.player.sim.phaseChangeEmitter.on(applyFilter);\n\t\tthis.player.sim.filtersChangeEmitter.on(applyFilter);\n\t\tthis.player.sim.showEPValuesChangeEmitter.on(hideOrShowEPValues);\n\n\t\tthis.addOnDisposeCallback(() => {\n\t\t\tgearData.changeEvent.off(invokeUpdate);\n\t\t\tthis.player.sim.phaseChangeEmitter.off(applyFilter);\n\t\t\tthis.player.sim.filtersChangeEmitter.off(applyFilter);\n\t\t\tthis.player.sim.showEPValuesChangeEmitter.off(hideOrShowEPValues);\n\t\t\tilist.dispose();\n\t\t});\n\n\t\ttabAnchor.value!.addEventListener('shown.bs.tab', _ => {\n\t\t\tilist.sizeRefresh();\n\t\t});\n\n\t\tthis.ilists.push(ilist);\n\t}\n\n\tprivate removeTabs(labelSubstring: string) {\n\t\tconst tabElems = Array.prototype.slice\n\t\t\t.call(this.tabsElem.getElementsByClassName('selector-modal-item-tab'))\n\t\t\t.filter(tab => tab.dataset.label.includes(labelSubstring));\n\n\t\tconst contentElems = tabElems.map(tabElem => document.getElementById(tabElem.dataset.contentId!)).filter(tabElem => Boolean(tabElem));\n\n\t\ttabElems.forEach(elem => elem.parentElement.remove());\n\t\tcontentElems.forEach(elem => elem!.remove());\n\t}\n}\n\nexport interface ItemData<T> {\n\titem: T;\n\tname: string;\n\tid: number;\n\tactionId: ActionId;\n\tquality: ItemQuality;\n\tphase: number;\n\tbaseEP: number;\n\tignoreEPFilter: boolean;\n\tonEquip: (eventID: EventID, item: T) => void;\n}\n\ninterface ItemDataWithIdx<T> {\n\tidx: number;\n\tdata: ItemData<T>;\n}\n\nconst emptySlotIcons: Record<ItemSlot, string> = {\n\t[ItemSlot.ItemSlotHead]: '/sod/assets/item_slots/head.jpg',\n\t[ItemSlot.ItemSlotNeck]: '/sod/assets/item_slots/neck.jpg',\n\t[ItemSlot.ItemSlotShoulder]: '/sod/assets/item_slots/shoulders.jpg',\n\t[ItemSlot.ItemSlotBack]: '/sod/assets/item_slots/shirt.jpg',\n\t[ItemSlot.ItemSlotChest]: '/sod/assets/item_slots/chest.jpg',\n\t[ItemSlot.ItemSlotWrist]: '/sod/assets/item_slots/wrists.jpg',\n\t[ItemSlot.ItemSlotHands]: '/sod/assets/item_slots/hands.jpg',\n\t[ItemSlot.ItemSlotWaist]: '/sod/assets/item_slots/waist.jpg',\n\t[ItemSlot.ItemSlotLegs]: '/sod/assets/item_slots/legs.jpg',\n\t[ItemSlot.ItemSlotFeet]: '/sod/assets/item_slots/feet.jpg',\n\t[ItemSlot.ItemSlotFinger1]: '/sod/assets/item_slots/finger.jpg',\n\t[ItemSlot.ItemSlotFinger2]: '/sod/assets/item_slots/finger.jpg',\n\t[ItemSlot.ItemSlotTrinket1]: '/sod/assets/item_slots/trinket.jpg',\n\t[ItemSlot.ItemSlotTrinket2]: '/sod/assets/item_slots/trinket.jpg',\n\t[ItemSlot.ItemSlotMainHand]: '/sod/assets/item_slots/mainhand.jpg',\n\t[ItemSlot.ItemSlotOffHand]: '/sod/assets/item_slots/offhand.jpg',\n\t[ItemSlot.ItemSlotRanged]: '/sod/assets/item_slots/ranged.jpg',\n};\nexport function getEmptySlotIconUrl(slot: ItemSlot): string {\n\treturn emptySlotIcons[slot];\n}\n\nexport class ItemList<T> {\n\tprivate listElem: HTMLElement;\n\tprivate readonly player: Player<any>;\n\tprivate label: string;\n\tprivate slot: ItemSlot;\n\tprivate itemData: Array<ItemData<T>>;\n\tprivate itemsToDisplay: Array<number>;\n\tprivate currentFilters: DatabaseFilters;\n\tprivate searchInput: HTMLInputElement;\n\tprivate computeEP: (item: T) => number;\n\tprivate equippedToItemFn: (equippedItem: EquippedItem | null) => T | null | undefined;\n\tprivate gearData: GearData;\n\tprivate tabContent: Element;\n\tprivate onItemClick: (itemData: ItemData<T>) => void;\n\tprivate scroller: Clusterize;\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tsimUI: SimUI,\n\t\tconfig: SelectorModalConfig,\n\t\tplayer: Player<any>,\n\t\tlabel: string,\n\t\titemData: Array<ItemData<T>>,\n\t\tcomputeEP: (item: T) => number,\n\t\tequippedToItemFn: (equippedItem: EquippedItem | null) => T | null | undefined,\n\t\tonRemove: (eventID: EventID) => void,\n\t\tonItemClick: (itemData: ItemData<T>) => void,\n\t) {\n\t\tthis.label = label;\n\t\tthis.player = player;\n\t\tthis.itemData = itemData;\n\t\tthis.computeEP = computeEP;\n\t\tthis.equippedToItemFn = equippedToItemFn;\n\t\tthis.onItemClick = onItemClick;\n\n\t\tconst { slot, gearData } = config;\n\t\tthis.slot = slot;\n\t\tthis.gearData = gearData;\n\t\tthis.currentFilters = this.player.sim.getFilters();\n\n\t\tconst tabContentId = (label + '-tab').split(' ').join('');\n\t\tconst selected = label === config.selectedTab;\n\n\t\tconst epButton = ref<HTMLButtonElement>();\n\t\tthis.tabContent = (\n\t\t\t<div id={tabContentId} className={`selector-modal-tab-pane tab-pane fade ${selected ? 'active show' : ''}`}>\n\t\t\t\t<div className=\"selector-modal-filters\">\n\t\t\t\t\t<input className=\"selector-modal-search form-control\" type=\"text\" placeholder=\"Search...\" />\n\t\t\t\t\t{label == 'Items' && <button className=\"selector-modal-filters-button btn btn-primary\">Filters</button>}\n\t\t\t\t\t{/* <div className=\"selector-modal-phase-selector\"></div> */}\n\t\t\t\t\t<div className=\"sim-input selector-modal-boolean-option selector-modal-show-1h-weapons\"></div>\n\t\t\t\t\t<div className=\"sim-input selector-modal-boolean-option selector-modal-show-2h-weapons\"></div>\n\t\t\t\t\t<div className=\"sim-input selector-modal-boolean-option selector-modal-show-ep-values\"></div>\n\t\t\t\t\t<button className=\"selector-modal-simall-button btn btn-warning\">Add to Batch Sim</button>\n\t\t\t\t\t<button className=\"selector-modal-remove-button btn btn-danger\">Unequip Item</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"selector-modal-list-labels\">\n\t\t\t\t\t<label className=\"item-label\">\n\t\t\t\t\t\t<small>Item</small>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label className=\"source-label\">\n\t\t\t\t\t\t<small>Source</small>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label className=\"ep-label\">\n\t\t\t\t\t\t<small>EP</small>\n\t\t\t\t\t\t<i className=\"fa-solid fa-plus-minus fa-2xs\"></i>\n\t\t\t\t\t\t<button ref={epButton} className=\"btn btn-link p-0 ms-1\">\n\t\t\t\t\t\t\t<i className=\"far fa-question-circle fa-lg\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label className=\"favorite-label\"></label>\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"selector-modal-list\"></ul>\n\t\t\t</div>\n\t\t);\n\n\t\tparent.appendChild(this.tabContent);\n\n\t\tnew Tooltip(epButton.value!, {\n\t\t\ttitle: EP_TOOLTIP,\n\t\t});\n\n\t\tmakeShow1hWeaponsSelector(this.tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement, player.sim);\n\t\tmakeShow2hWeaponsSelector(this.tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement, player.sim);\n\n\t\tif (!(label == 'Items' && (slot == ItemSlot.ItemSlotMainHand || (slot == ItemSlot.ItemSlotOffHand && player.getClass() == Class.ClassWarrior)))) {\n\t\t\t(this.tabContent.getElementsByClassName('selector-modal-show-1h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t\t(this.tabContent.getElementsByClassName('selector-modal-show-2h-weapons')[0] as HTMLElement).style.display = 'none';\n\t\t}\n\n\t\t// makePhaseSelector(this.tabContent.getElementsByClassName('selector-modal-phase-selector')[0] as HTMLElement, player.sim);\n\n\t\tmakeShowEPValuesSelector(this.tabContent.getElementsByClassName('selector-modal-show-ep-values')[0] as HTMLElement, player.sim);\n\n\t\tif (label == 'Items') {\n\t\t\tconst filtersButton = this.tabContent.getElementsByClassName('selector-modal-filters-button')[0] as HTMLElement;\n\t\t\tfiltersButton.addEventListener('click', () => new FiltersMenu(parent, player, slot));\n\t\t}\n\n\t\tthis.listElem = this.tabContent.getElementsByClassName('selector-modal-list')[0] as HTMLElement;\n\n\t\tthis.itemsToDisplay = [];\n\n\t\tthis.scroller = new Clusterize(\n\t\t\t{\n\t\t\t\tgetNumberOfRows: () => {\n\t\t\t\t\treturn this.itemsToDisplay.length;\n\t\t\t\t},\n\t\t\t\tgenerateRows: (startIdx, endIdx) => {\n\t\t\t\t\tconst items = [];\n\t\t\t\t\tfor (let i = startIdx; i < endIdx; ++i) {\n\t\t\t\t\t\tif (i >= this.itemsToDisplay.length) break;\n\t\t\t\t\t\titems.push(this.createItemElem({ idx: this.itemsToDisplay[i], data: this.itemData[this.itemsToDisplay[i]] }));\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\trows: [],\n\t\t\t\tscroll_elem: this.listElem,\n\t\t\t\tcontent_elem: this.listElem,\n\t\t\t\titem_height: 56,\n\t\t\t\tshow_no_data_row: false,\n\t\t\t\tno_data_text: '',\n\t\t\t\ttag: 'li',\n\t\t\t\trows_in_block: 16,\n\t\t\t\tblocks_in_cluster: 2,\n\t\t\t},\n\t\t);\n\n\t\tconst removeButton = this.tabContent.getElementsByClassName('selector-modal-remove-button')[0] as HTMLButtonElement;\n\t\tremoveButton.addEventListener('click', _ => onRemove(TypedEvent.nextEventID()));\n\n\t\tif (label.startsWith('Enchants')) {\n\t\t\tremoveButton.textContent = 'Remove Enchant';\n\t\t} else if (label.startsWith('Rune')) {\n\t\t\tremoveButton.textContent = 'Remove Rune';\n\t\t}\n\n\t\tthis.updateSelected();\n\n\t\tthis.searchInput = this.tabContent.getElementsByClassName('selector-modal-search')[0] as HTMLInputElement;\n\t\tthis.searchInput.addEventListener('input', () => this.applyFilters());\n\n\t\tconst simAllButton = this.tabContent.getElementsByClassName('selector-modal-simall-button')[0] as HTMLButtonElement;\n\t\tif (label == 'Items') {\n\t\t\tsimAllButton.hidden = !player.sim.getShowExperimental();\n\t\t\tplayer.sim.showExperimentalChangeEmitter.on(() => {\n\t\t\t\tsimAllButton.hidden = !player.sim.getShowExperimental();\n\t\t\t});\n\t\t\tsimAllButton.addEventListener('click', _ => {\n\t\t\t\tif (simUI instanceof IndividualSimUI) {\n\t\t\t\t\tconst itemSpecs = Array<ItemSpec>();\n\t\t\t\t\tconst isRangedOrTrinket =\n\t\t\t\t\t\tthis.slot == ItemSlot.ItemSlotRanged || this.slot == ItemSlot.ItemSlotTrinket1 || this.slot == ItemSlot.ItemSlotTrinket2;\n\n\t\t\t\t\tconst curItem = this.equippedToItemFn(this.player.getEquippedItem(this.slot));\n\t\t\t\t\tlet curEP = 0;\n\t\t\t\t\tif (curItem != null) {\n\t\t\t\t\t\tcurEP = this.computeEP(curItem);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const i of this.itemsToDisplay) {\n\t\t\t\t\t\tconst idata = this.itemData[i];\n\t\t\t\t\t\tif (!isRangedOrTrinket && curEP > 0 && idata.baseEP < curEP / 2) {\n\t\t\t\t\t\t\tcontinue; // If we have EPs on current item, dont sim items with less than half the EP.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add any item that is either >0 EP or a trinket/ranged item.\n\t\t\t\t\t\tif (idata.baseEP > 0 || isRangedOrTrinket) {\n\t\t\t\t\t\t\titemSpecs.push(ItemSpec.create({ id: idata.id }));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsimUI.bt.addItems(itemSpecs);\n\t\t\t\t\t// TODO: should we open the bulk sim UI or should we run in the background showing progress, and then sort the items in the picker?\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// always hide non-items from being added to batch.\n\t\t\tsimAllButton.hidden = true;\n\t\t}\n\t}\n\n\tpublic sizeRefresh() {\n\t\tthis.scroller.refresh(true);\n\t\tthis.applyFilters();\n\t}\n\n\tpublic dispose() {\n\t\tthis.scroller.dispose();\n\t}\n\n\tpublic updateSelected() {\n\t\tconst newEquippedItem = this.gearData.getEquippedItem();\n\t\tconst newItem = this.equippedToItemFn(newEquippedItem);\n\n\t\tconst newItemId = newItem ? (this.label == 'Enchants' ? (newItem as unknown as Enchant).effectId : (newItem as unknown as Item | Rune).id) : 0;\n\t\tconst newEP = newItem ? this.computeEP(newItem) : 0;\n\n\t\tthis.scroller.elementUpdate(item => {\n\t\t\tconst idx = (item as HTMLElement).dataset.idx!;\n\t\t\tconst itemData = this.itemData[parseFloat(idx)];\n\t\t\tif (itemData.id == newItemId) item.classList.add('active');\n\t\t\telse item.classList.remove('active');\n\n\t\t\tconst epDeltaElem = item.getElementsByClassName('selector-modal-list-item-ep-delta')[0] as HTMLSpanElement;\n\t\t\tif (epDeltaElem) {\n\t\t\t\tepDeltaElem.textContent = '';\n\t\t\t\tif (itemData.item) {\n\t\t\t\t\tconst listItemEP = this.computeEP(itemData.item);\n\t\t\t\t\tif (newEP != listItemEP) {\n\t\t\t\t\t\tformatDeltaTextElem(epDeltaElem, newEP, listItemEP, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic applyFilters() {\n\t\tthis.currentFilters = this.player.sim.getFilters();\n\t\tlet itemIdxs = new Array<number>(this.itemData.length);\n\t\tfor (let i = 0; i < this.itemData.length; ++i) {\n\t\t\titemIdxs[i] = i;\n\t\t}\n\n\t\tconst currentEquippedItem = this.player.getEquippedItem(this.slot);\n\n\t\tif (this.label == 'Items') {\n\t\t\titemIdxs = this.player.filterItemData(itemIdxs, i => this.itemData[i].item as unknown as Item, this.slot);\n\t\t} else if (this.label == 'Enchants') {\n\t\t\titemIdxs = this.player.filterEnchantData(itemIdxs, i => this.itemData[i].item as unknown as Enchant, this.slot, currentEquippedItem);\n\t\t}\n\n\t\titemIdxs = itemIdxs.filter(i => {\n\t\t\tconst listItemData = this.itemData[i];\n\n\t\t\t// TODO: We can bring this back at level 60 but for now this isn't working correctly because a lot of gear is incorrectly labeled\n\t\t\t// if (listItemData.phase > this.player.sim.getPhase()) {\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\tif (this.searchInput.value.length > 0) {\n\t\t\t\tconst searchQuery = this.searchInput.value\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replaceAll(/[^a-zA-Z0-9\\s]/g, '')\n\t\t\t\t\t.split(' ');\n\t\t\t\tconst name = listItemData.name.toLowerCase().replaceAll(/[^a-zA-Z0-9\\s]/g, '');\n\n\t\t\t\tlet include = true;\n\t\t\t\tsearchQuery.forEach(v => {\n\t\t\t\t\tif (!name.includes(v)) include = false;\n\t\t\t\t});\n\t\t\t\tif (!include) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tlet sortFn: (itemA: T, itemB: T) => number;\n\t\tif (this.slot == ItemSlot.ItemSlotTrinket1 || this.slot == ItemSlot.ItemSlotTrinket2) {\n\t\t\t// Trinket EP is weird so just sort by ilvl instead.\n\t\t\tsortFn = (itemA, itemB) => (itemB as unknown as Item).ilvl - (itemA as unknown as Item).ilvl;\n\t\t} else {\n\t\t\tsortFn = (itemA, itemB) => {\n\t\t\t\tconst diff = this.computeEP(itemB) - this.computeEP(itemA);\n\t\t\t\t// if EP is same, sort by ilvl\n\t\t\t\tif (Math.abs(diff) < 0.01) {\n\t\t\t\t\tif ((itemB as unknown as Item).ilvl && (itemA as unknown as Item).ilvl) {\n\t\t\t\t\t\treturn (itemB as unknown as Item).ilvl - (itemA as unknown as Item).ilvl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (itemB as unknown as Item).name < (itemA as unknown as Item).name ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn diff;\n\t\t\t};\n\t\t}\n\n\t\titemIdxs = itemIdxs.sort((dataA, dataB) => {\n\t\t\tconst itemA = this.itemData[dataA];\n\t\t\tconst itemB = this.itemData[dataB];\n\t\t\tif (this.isItemFavorited(itemA) && !this.isItemFavorited(itemB)) return -1;\n\t\t\tif (this.isItemFavorited(itemB) && !this.isItemFavorited(itemA)) return 1;\n\n\t\t\treturn sortFn(itemA.item, itemB.item);\n\t\t});\n\n\t\tthis.itemsToDisplay = itemIdxs;\n\t\tthis.scroller.update();\n\n\t\tthis.hideOrShowEPValues();\n\t}\n\n\tpublic hideOrShowEPValues() {\n\t\tconst labels = this.tabContent.getElementsByClassName('ep-label');\n\t\tconst container = this.tabContent.getElementsByClassName('selector-modal-list');\n\t\tconst show = this.player.sim.getShowEPValues();\n\t\tconst display = show ? '' : 'none';\n\n\t\tfor (const label of labels) {\n\t\t\t(label as HTMLElement).style.display = display;\n\t\t}\n\n\t\tfor (const c of container) {\n\t\t\tif (show) c.classList.remove('hide-ep');\n\t\t\telse c.classList.add('hide-ep');\n\t\t}\n\t}\n\n\tprivate createItemElem(item: ItemDataWithIdx<T>): JSX.Element {\n\t\tconst itemData = item.data;\n\t\tconst itemEP = this.computeEP(itemData.item);\n\n\t\tconst equippedItem = this.equippedToItemFn(this.gearData.getEquippedItem());\n\t\tconst equippedItemID = equippedItem\n\t\t\t? this.label == 'Enchants'\n\t\t\t\t? (equippedItem as unknown as Enchant).effectId\n\t\t\t\t: (equippedItem as unknown as Item).id\n\t\t\t: 0;\n\t\tconst equippedItemEP = equippedItem ? this.computeEP(equippedItem) : 0;\n\n\t\tconst nameElem = ref<HTMLLabelElement>();\n\t\tconst anchorElem = ref<HTMLAnchorElement>();\n\t\tconst iconElem = ref<HTMLImageElement>();\n\t\tconst listItemElem = (\n\t\t\t<li className={`selector-modal-list-item ${equippedItemID == itemData.id ? 'active' : ''}`} dataset={{ idx: item.idx.toString() }}>\n\t\t\t\t<div className=\"selector-modal-list-label-cell\">\n\t\t\t\t\t<a className=\"selector-modal-list-item-link\" ref={anchorElem} dataset={{ whtticon: 'false' }}>\n\t\t\t\t\t\t<img className=\"selector-modal-list-item-icon\" ref={iconElem}></img>\n\t\t\t\t\t\t<label className=\"selector-modal-list-item-name\" ref={nameElem}>\n\t\t\t\t\t\t\t{itemData.name}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\n\t\tif (this.label == 'Items') {\n\t\t\tlistItemElem.appendChild(\n\t\t\t\t<div className=\"selector-modal-list-item-source-container\">{this.getSourceInfo(itemData.item as unknown as Item, this.player.sim)}</div>,\n\t\t\t);\n\t\t}\n\n\t\tif (this.slot != ItemSlot.ItemSlotTrinket1 && this.slot != ItemSlot.ItemSlotTrinket2) {\n\t\t\tlistItemElem.appendChild(\n\t\t\t\t<div className=\"selector-modal-list-item-ep\">\n\t\t\t\t\t<span className=\"selector-modal-list-item-ep-value\">{itemEP < 9.95 ? itemEP.toFixed(1).toString() : Math.round(itemEP).toString()}</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"selector-modal-list-item-ep-delta\"\n\t\t\t\t\t\tref={e => itemData.item && equippedItemEP != itemEP && formatDeltaTextElem(e, equippedItemEP, itemEP, 0)}></span>\n\t\t\t\t</div>,\n\t\t\t);\n\t\t}\n\n\t\tconst favoriteElem = ref<HTMLButtonElement>();\n\t\tlistItemElem.appendChild(\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"selector-modal-list-item-favorite btn btn-link p-0\"\n\t\t\t\t\tref={favoriteElem}\n\t\t\t\t\tonclick={() => setFavorite(listItemElem.dataset.fav == 'false')}>\n\t\t\t\t\t<i className=\"fa-star fa-xl\"></i>\n\t\t\t\t</button>\n\t\t\t</div>,\n\t\t);\n\n\t\tanchorElem.value!.addEventListener('click', (event: Event) => {\n\t\t\tevent.preventDefault();\n\t\t\tif (event.target === favoriteElem.value) return false;\n\t\t\tthis.onItemClick(itemData);\n\t\t});\n\n\t\titemData.actionId.fill().then(filledId => {\n\t\t\tfilledId.setWowheadHref(anchorElem.value!);\n\t\t\ticonElem.value!.src = filledId.iconUrl;\n\t\t});\n\n\t\tsetItemQualityCssClass(nameElem.value!, itemData.quality);\n\n\t\tnew Tooltip(favoriteElem.value!, {\n\t\t\ttitle: 'Add to favorites',\n\t\t});\n\t\tconst setFavorite = (isFavorite: boolean) => {\n\t\t\tconst filters = this.player.sim.getFilters();\n\t\t\tif (this.label == 'Items') {\n\t\t\t\tconst favId = itemData.id;\n\t\t\t\tif (isFavorite) {\n\t\t\t\t\tfilters.favoriteItems.push(favId);\n\t\t\t\t} else {\n\t\t\t\t\tconst favIdx = filters.favoriteItems.indexOf(favId);\n\t\t\t\t\tif (favIdx != -1) {\n\t\t\t\t\t\tfilters.favoriteItems.splice(favIdx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (this.label == 'Enchants') {\n\t\t\t\tconst favId = getUniqueEnchantString(itemData.item as unknown as Enchant);\n\t\t\t\tif (isFavorite) {\n\t\t\t\t\tfilters.favoriteEnchants.push(favId);\n\t\t\t\t} else {\n\t\t\t\t\tconst favIdx = filters.favoriteEnchants.indexOf(favId);\n\t\t\t\t\tif (favIdx != -1) {\n\t\t\t\t\t\tfilters.favoriteEnchants.splice(favIdx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfavoriteElem.value!.children[0].classList.toggle('fas');\n\t\t\tfavoriteElem.value!.children[0].classList.toggle('far');\n\t\t\tlistItemElem.dataset.fav = isFavorite.toString();\n\n\t\t\tthis.player.sim.setFilters(TypedEvent.nextEventID(), filters);\n\t\t};\n\n\t\tconst isFavorite = this.isItemFavorited(itemData);\n\n\t\tif (isFavorite) {\n\t\t\tfavoriteElem.value!.children[0].classList.add('fas');\n\t\t\tlistItemElem.dataset.fav = 'true';\n\t\t} else {\n\t\t\tfavoriteElem.value!.children[0].classList.add('far');\n\t\t\tlistItemElem.dataset.fav = 'false';\n\t\t}\n\n\t\treturn listItemElem;\n\t}\n\n\tprivate isItemFavorited(itemData: ItemData<T>): boolean {\n\t\tif (this.label == 'Items') {\n\t\t\treturn this.currentFilters.favoriteItems.includes(itemData.id);\n\t\t} else if (this.label == 'Enchants') {\n\t\t\treturn this.currentFilters.favoriteEnchants.includes(getUniqueEnchantString(itemData.item as unknown as Enchant));\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate getSourceInfo(item: Item, sim: Sim): JSX.Element {\n\t\tconst makeAnchor = (href: string, inner: string | JSX.Element) => {\n\t\t\treturn (\n\t\t\t\t<a href={href} target=\"_blank\" dataset={{ whtticon: 'false' }}>\n\t\t\t\t\t<small>{inner}</small>\n\t\t\t\t</a>\n\t\t\t);\n\t\t};\n\n\t\tif (!item.sources || item.sources.length == 0) {\n\t\t\tif (item.randomSuffixOptions.length) {\n\t\t\t\treturn makeAnchor(`${ActionId.makeItemUrl(item.id)}#dropped-by`, 'World Drop');\n\t\t\t}\n\n\t\t\treturn <></>;\n\t\t}\n\n\t\tlet source = item.sources[0];\n\t\tif (source.source.oneofKind == 'crafted') {\n\t\t\tconst src = source.source.crafted;\n\n\t\t\tif (src.spellId) {\n\t\t\t\treturn makeAnchor(ActionId.makeSpellUrl(src.spellId), professionNames.get(src.profession) ?? 'Unknown');\n\t\t\t}\n\t\t\treturn makeAnchor(ActionId.makeItemUrl(item.id), professionNames.get(src.profession) ?? 'Unknown');\n\t\t} else if (source.source.oneofKind == 'drop') {\n\t\t\tconst src = source.source.drop;\n\t\t\tconst zone = sim.db.getZone(src.zoneId);\n\t\t\tconst npc = sim.db.getNpc(src.npcId);\n\t\t\tif (!zone) {\n\t\t\t\treturn makeAnchor(`${ActionId.makeItemUrl(item.id)}#dropped-by`, 'World Drop');\n\t\t\t}\n\n\t\t\tconst category = src.category ? ` - ${src.category}` : '';\n\t\t\tif (npc) {\n\t\t\t\treturn makeAnchor(\n\t\t\t\t\tActionId.makeNpcUrl(npc.id),\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{zone.name}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{npc.name + category}\n\t\t\t\t\t</span>,\n\t\t\t\t);\n\t\t\t} else if (src.otherName) {\n\t\t\t\treturn makeAnchor(\n\t\t\t\t\tActionId.makeZoneUrl(zone.id),\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{zone.name}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{src.otherName}\n\t\t\t\t\t</span>,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn makeAnchor(ActionId.makeZoneUrl(zone.id), zone.name);\n\t\t} else if (source.source.oneofKind == 'quest' && source.source.quest.name) {\n\t\t\tconst src = source.source.quest;\n\t\t\treturn makeAnchor(\n\t\t\t\tActionId.makeQuestUrl(src.id),\n\t\t\t\t<>\n\t\t\t\t\t<span>Quest</span>\n\t\t\t\t\t<br />\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{src.name}\n\t\t\t\t\t\t{item.factionRestriction == UIItem_FactionRestriction.ALLIANCE_ONLY && (\n\t\t\t\t\t\t\t<img src=\"/sod/assets/img/alliance.png\" className=\"ms-1\" width=\"15\" height=\"15\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{item.factionRestriction == UIItem_FactionRestriction.HORDE_ONLY && (\n\t\t\t\t\t\t\t<img src=\"/sod/assets/img/horde.png\" className=\"ms-1\" width=\"15\" height=\"15\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</span>\n\t\t\t\t</>,\n\t\t\t);\n\t\t} else if ((source = item.sources.find(source => source.source.oneofKind == 'rep') ?? source).source.oneofKind == 'rep') {\n\t\t\tconst factionNames = item.sources\n\t\t\t\t.map(src => (src.source.oneofKind == 'rep' ? sim.db.getFaction(src.source.rep.repFactionId)?.name : ''))\n\t\t\t\t.filter(src => src != '');\n\t\t\t// We assume that if an item is available from multiple reputations, it's available at the same rep level from each.\n\t\t\t// The main case for multi-faction items are shared PVP items where this is always true, so it's not a big deal right now.\n\t\t\tconst src = source.source.rep;\n\t\t\treturn makeAnchor(\n\t\t\t\tActionId.makeItemUrl(item.id),\n\t\t\t\t<>\n\t\t\t\t\t{factionNames.map(name => (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t{item.factionRestriction == UIItem_FactionRestriction.ALLIANCE_ONLY && (\n\t\t\t\t\t\t\t\t<img src=\"/sod/assets/img/alliance.png\" className=\"ms-1\" width=\"15\" height=\"15\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{item.factionRestriction == UIItem_FactionRestriction.HORDE_ONLY && (\n\t\t\t\t\t\t\t\t<img src=\"/sod/assets/img/horde.png\" className=\"ms-1\" width=\"15\" height=\"15\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))}\n\t\t\t\t\t<span>{REP_LEVEL_NAMES[src.repLevel]}</span>\n\t\t\t\t</>,\n\t\t\t);\n\t\t} else if (source.source.oneofKind == 'soldBy') {\n\t\t\tconst src = source.source.soldBy;\n\t\t\treturn makeAnchor(\n\t\t\t\tActionId.makeNpcUrl(src.npcId),\n\t\t\t\t<span>\n\t\t\t\t\tSold by\n\t\t\t\t\t<br />\n\t\t\t\t\t{src.npcName}\n\t\t\t\t</span>,\n\t\t\t);\n\t\t}\n\t\treturn <></>;\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment } from 'tsx-vanilla';\n\nimport { Component } from '../components/component.js';\nimport { TypedEvent } from '../typed_event.js';\n\n// Config for displaying a warning to the user whenever a condition is met.\ninterface SimWarning {\n\tupdateOn: TypedEvent<any>;\n\tgetContent: () => string | Array<string>;\n}\n\ninterface WarningLinkArgs {\n\tparent: HTMLElement;\n\thref?: string;\n\ttext?: string;\n\ticon?: string;\n\ttooltip?: string;\n\tclasses?: string;\n\tonclick?: (_?: any) => void;\n}\n\nexport class ResultsViewer extends Component {\n\treadonly pendingElem: HTMLElement;\n\treadonly contentElem: HTMLElement;\n\treadonly warningElem: HTMLElement;\n\tprivate warningsLink: HTMLElement;\n\n\tprivate warnings: Array<SimWarning> = [];\n\n\tconstructor(parentElem: HTMLElement) {\n\t\tsuper(parentElem, 'results-viewer');\n\t\tthis.rootElem.appendChild(\n\t\t\t<>\n\t\t\t\t<div className=\"results-pending\">\n\t\t\t\t\t<div className=\"loader\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"results-content\"></div>\n\t\t\t\t<div className=\"warning-zone\" style=\"text-align: center\"></div>\n\t\t\t</>,\n\t\t);\n\t\tthis.pendingElem = this.rootElem.getElementsByClassName('results-pending')[0] as HTMLElement;\n\t\tthis.contentElem = this.rootElem.getElementsByClassName('results-content')[0] as HTMLElement;\n\t\tthis.warningElem = this.rootElem.getElementsByClassName('warning-zone')[0] as HTMLElement;\n\n\t\tthis.warningsLink = this.addWarningsLink();\n\t\tthis.updateWarnings();\n\n\t\tthis.hideAll();\n\t}\n\n\tprivate addWarningLink(args: WarningLinkArgs): HTMLElement {\n\t\tconst item = (\n\t\t\t<div className=\"sim-toolbar-item\">\n\t\t\t\t<a href={args.href ? args.href : 'javascript:void(0)'} target={args.href ? '_blank' : '_self'} className={args.classes}>\n\t\t\t\t\t{args.icon && <i className={args.icon}></i>}\n\t\t\t\t\t{args.text ? args.text : ''}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\n\t\tconst link = item.children[0] as HTMLElement;\n\n\t\tif (args.onclick) {\n\t\t\tlink.addEventListener('click', () => {\n\t\t\t\tif (args.onclick) args.onclick();\n\t\t\t});\n\t\t}\n\n\t\tlet cfg = {};\n\t\tif (args.tooltip) {\n\t\t\tcfg = {\n\t\t\t\ttitle: args.tooltip,\n\t\t\t\thtml: true,\n\t\t\t\tplacement: 'bottom',\n\t\t\t};\n\t\t\tlink.setAttribute('data-bs-title', args.tooltip);\n\t\t}\n\t\tnew Tooltip(link, cfg);\n\t\targs.parent.appendChild(item);\n\n\t\treturn item as HTMLElement;\n\t}\n\n\tprivate addWarningsLink(): HTMLElement {\n\t\treturn this.addWarningLink({\n\t\t\tparent: this.warningElem,\n\t\t\ticon: 'fas fa-exclamation-triangle fa-3x',\n\t\t\ttooltip: \"<ul class='text-start ps-3 mb-0'></ul>\",\n\t\t\tclasses: 'warning link-warning',\n\t\t}).children[0] as HTMLElement;\n\t}\n\n\taddWarning(warning: SimWarning) {\n\t\tthis.warnings.push(warning);\n\t\twarning.updateOn.on(() => this.updateWarnings());\n\t\tthis.updateWarnings();\n\t}\n\n\tprivate updateWarnings() {\n\t\tconst activeWarnings = this.warnings\n\t\t\t.map(warning => warning.getContent())\n\t\t\t.flat()\n\t\t\t.filter(content => content != '');\n\t\tconst tooltipFragment = document.createElement('fragment');\n\t\ttooltipFragment.innerHTML = this.warningsLink.getAttribute('data-bs-title') as string;\n\t\tconst list = tooltipFragment.children[0] as HTMLElement;\n\t\tlist.innerHTML = '';\n\t\tif (activeWarnings.length == 0) {\n\t\t\tthis.warningsLink.parentElement?.classList?.add('hide');\n\t\t} else {\n\t\t\tthis.warningsLink.parentElement?.classList?.remove('hide');\n\t\t\tactiveWarnings.forEach(warning => {\n\t\t\t\tconst listItem = document.createElement('li');\n\t\t\t\tlistItem.innerHTML = warning;\n\t\t\t\tlist.appendChild(listItem);\n\t\t\t});\n\t\t}\n\t\tthis.warningsLink.setAttribute('data-bs-title', list.outerHTML);\n\t\tnew Tooltip(this.warningsLink, {\n\t\t\ttitle: list.outerHTML,\n\t\t\thtml: true,\n\t\t\tplacement: 'bottom',\n\t\t});\n\t}\n\n\thideAll() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n\n\tsetPending() {\n\t\tthis.contentElem.style.display = 'none';\n\t\tthis.pendingElem.style.display = 'block';\n\t}\n\n\tsetContent(innerHTML: string) {\n\t\tthis.contentElem.innerHTML = innerHTML;\n\t\tthis.contentElem.style.display = 'block';\n\t\tthis.pendingElem.style.display = 'none';\n\t}\n}\n","import { SimUI } from \"../sim_ui\";\nimport { Component } from \"./component\";\n\nexport interface SimTabConfig {\n\tidentifier: string,\n\ttitle: string,\n}\n\nexport abstract class SimTab extends Component {\n\tprotected simUI: SimUI;\n\tprotected config: SimTabConfig;\n\n\treadonly navItem: HTMLElement;\n\treadonly navLink: HTMLElement;\n\treadonly contentContainer: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, simUI: SimUI, config: SimTabConfig) {\n\t\tsuper(parentElem, 'sim-tab');\n\n\t\tthis.rootElem.classList.add(config.identifier);\n\n\t\tthis.simUI = simUI;\n\t\tthis.config = config;\n\n\t\tthis.rootElem.id = this.config.identifier;\n\t\tthis.rootElem.classList.add('tab-pane', 'fade');\n\n\t\tif (parentElem.childNodes.length == 0)\n\t\t\tthis.rootElem.classList.add('active', 'show');\n\n\t\tthis.navItem = this.buildNavItem();\n\t\tthis.navLink = this.navItem.children[0] as HTMLElement;\n\t\tthis.contentContainer = document.createElement('div');\n\t\tthis.contentContainer.classList.add('tab-pane-content-container');\n\t\tthis.rootElem.appendChild(this.contentContainer);\n\n\t\tthis.simUI.simHeader.addSimTabLink(this);\n\t}\n\n\tprivate buildNavItem(): HTMLElement {\n\t\tconst tabFragment = document.createElement('fragment');\n\t\ttabFragment.innerHTML = `\n\t\t\t<li class=\"${this.config.identifier} nav-item\" role=\"presentation\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"nav-link\"\n\t\t\t\t\tdata-bs-toggle=\"tab\"\n\t\t\t\t\tdata-bs-target=\"#${this.config.identifier}\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\taria-controls=\"${this.config.identifier}\"\n\t\t\t\t>${this.config.title}</a>\n\t\t\t</li>\n\t\t`;\n\n\t\treturn tabFragment.children[0] as HTMLElement;\n\t}\n\n\tprotected abstract buildTabContent(): void;\n\n\tprotected buildColumn(index: number, customCssClass: string): HTMLElement {\n\t\tlet column = document.createElement('div');\n\t\tcolumn.classList.add('tab-panel-col', `${customCssClass}-${index}`)\n\t\treturn column;\n\t}\n}\n","import { IndividualSimUI } from '../../individual_sim_ui';\nimport { BulkComboResult, BulkSettings, ItemSpecWithSlot, ProgressMetrics } from '../../proto/api';\nimport { EquipmentSpec, ItemSpec, SimDatabase, SimEnchant, SimItem, Spec } from '../../proto/common';\nimport { UIEnchant, UIItem, UIItem_FactionRestriction } from '../../proto/ui';\nimport { Database } from '../../proto_utils/database';\nimport { EquippedItem } from '../../proto_utils/equipped_item';\nimport { canEquipItem, getEligibleItemSlots } from '../../proto_utils/utils';\nimport { TypedEvent } from '../../typed_event';\nimport { EventID } from '../../typed_event.js';\nimport { BooleanPicker } from '../boolean_picker';\nimport { Component } from '../component';\nimport { ContentBlock } from '../content_block';\nimport { ItemRenderer, SelectorModal, SelectorModalTabs } from '../gear_picker';\nimport { Importer } from '../importers';\nimport { ResultsViewer } from '../results_viewer';\nimport { SimTab } from '../sim_tab';\n\nexport class BulkGearJsonImporter<SpecType extends Spec> extends Importer {\n\tprivate readonly simUI: IndividualSimUI<SpecType>;\n\tprivate readonly bulkUI: BulkTab;\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<SpecType>, bulkUI: BulkTab) {\n\t\tsuper(parent, simUI, 'Bag Item Import', true);\n\t\tthis.simUI = simUI;\n\t\tthis.bulkUI = bulkUI;\n\t\tthis.descriptionElem.innerHTML = `\n      <p>Import bag items from a JSON file, which can be created by the WowSimsExporter in-game AddOn.</p>\n      <p>To import, upload the file or paste the text below, then click, 'Import'.</p>\n    `;\n\t}\n\n\tasync onImport(data: string) {\n\t\ttry {\n\t\t\tconst equipment = EquipmentSpec.fromJsonString(data, { ignoreUnknownFields: true });\n\t\t\tif (equipment?.items?.length > 0) {\n\t\t\t\tconst db = await Database.loadLeftoversIfNecessary(equipment);\n\t\t\t\tconst items = equipment.items.filter(spec => spec.id > 0 && db.lookupItemSpec(spec));\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\tthis.bulkUI.addItems(items);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.close();\n\t\t} catch (e: any) {\n\t\t\talert(e.toString());\n\t\t}\n\t}\n}\n\nclass BulkSimResultRenderer {\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<Spec>, result: BulkComboResult, baseResult: BulkComboResult) {\n\t\tconst dpsDivParent = document.createElement('div');\n\t\tdpsDivParent.classList.add('results-sim');\n\n\t\tconst dpsDiv = document.createElement('div');\n\t\tdpsDiv.classList.add('bulk-result-body-dps', 'bulk-items-text-line', 'results-sim-dps', 'damage-metrics');\n\t\tdpsDivParent.appendChild(dpsDiv);\n\n\t\tconst dpsNumber = document.createElement('span');\n\t\tdpsNumber.textContent = this.formatDps(result.unitMetrics?.dps?.avg!);\n\t\tdpsNumber.classList.add('topline-result-avg');\n\t\tdpsDiv.appendChild(dpsNumber);\n\n\t\tconst dpsDelta = result.unitMetrics?.dps?.avg! - baseResult.unitMetrics?.dps?.avg!;\n\t\tconst dpsDeltaSpan = document.createElement('span');\n\t\tdpsDeltaSpan.textContent = `${this.formatDpsDelta(dpsDelta)}`;\n\t\tdpsDeltaSpan.classList.add(dpsDelta >= 0 ? 'bulk-result-header-positive' : 'bulk-result-header-negative');\n\t\tdpsDiv.appendChild(dpsDeltaSpan);\n\n\t\tconst itemsContainer = document.createElement('div');\n\t\titemsContainer.classList.add('bulk-gear-combo');\n\t\tparent.appendChild(itemsContainer);\n\t\tparent.appendChild(dpsDivParent);\n\n\t\tif (result.itemsAdded && result.itemsAdded.length > 0) {\n\t\t\tconst equipBtn = document.createElement('button');\n\t\t\tequipBtn.textContent = 'Equip';\n\t\t\tequipBtn.classList.add('btn', 'btn-primary', 'bulk-equipit');\n\t\t\tequipBtn.onclick = () => {\n\t\t\t\tresult.itemsAdded.forEach(itemAdded => {\n\t\t\t\t\tconst item = simUI.sim.db.lookupItemSpec(itemAdded.item!);\n\t\t\t\t\tsimUI.player.equipItem(TypedEvent.nextEventID(), itemAdded.slot, item);\n\t\t\t\t\tsimUI.simHeader.activateTab('gear-tab');\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tparent.appendChild(equipBtn);\n\n\t\t\tfor (const is of result.itemsAdded) {\n\t\t\t\tconst item = simUI.sim.db.lookupItemSpec(is.item!);\n\t\t\t\tconst renderer = new ItemRenderer(parent, itemsContainer, simUI.player);\n\t\t\t\trenderer.update(item!);\n\n\t\t\t\tconst p = document.createElement('a');\n\t\t\t\tp.classList.add('bulk-result-item-slot');\n\t\t\t\tp.textContent = this.itemSlotName(is);\n\t\t\t\trenderer.nameElem.appendChild(p);\n\t\t\t}\n\t\t} else {\n\t\t\tconst p = document.createElement('p');\n\t\t\tp.textContent = 'No changes - this is your currently equipped gear!';\n\t\t\tparent.appendChild(p);\n\t\t\tdpsDeltaSpan.textContent = '';\n\t\t}\n\t}\n\n\tprivate formatDps(dps: number): string {\n\t\treturn (Math.round(dps * 100) / 100).toFixed(2);\n\t}\n\n\tprivate formatDpsDelta(delta: number): string {\n\t\treturn (delta >= 0 ? '+' : '') + this.formatDps(delta);\n\t}\n\n\tprivate itemSlotName(is: ItemSpecWithSlot): string {\n\t\treturn JSON.parse(ItemSpecWithSlot.toJsonString(is, { emitDefaultValues: true }))['slot'].replace('ItemSlot', '');\n\t}\n}\n\nexport class BulkItemPicker extends Component {\n\tprivate readonly itemElem: ItemRenderer;\n\treadonly simUI: IndividualSimUI<Spec>;\n\treadonly bulkUI: BulkTab;\n\treadonly index: number;\n\n\tprotected item: EquippedItem;\n\n\tconstructor(parent: HTMLElement, simUI: IndividualSimUI<Spec>, bulkUI: BulkTab, item: EquippedItem, index: number) {\n\t\tsuper(parent, 'bulk-item-picker');\n\t\tthis.simUI = simUI;\n\t\tthis.bulkUI = bulkUI;\n\t\tthis.index = index;\n\t\tthis.item = item;\n\t\tthis.itemElem = new ItemRenderer(parent, this.rootElem, simUI.player);\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tthis.setItem(item);\n\t\t\tconst slot = getEligibleItemSlots(this.item.item)[0];\n\t\t\tconst eligibleEnchants = this.simUI.sim.db.getEnchants(slot);\n\t\t\tconst openEnchantGemSelector = (event: Event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst changeEvent = new TypedEvent<void>();\n\t\t\t\tconst modal = new SelectorModal(this.bulkUI.rootElem, this.simUI, this.simUI.player, {\n\t\t\t\t\tselectedTab: SelectorModalTabs.Enchants,\n\t\t\t\t\tslot: slot,\n\t\t\t\t\tequippedItem: this.item,\n\t\t\t\t\teligibleItems: new Array<UIItem>(),\n\t\t\t\t\teligibleEnchants: eligibleEnchants,\n\t\t\t\t\teligibleRunes: [],\n\t\t\t\t\tgearData: {\n\t\t\t\t\t\tequipItem: (eventID: EventID, equippedItem: EquippedItem | null) => {\n\t\t\t\t\t\t\tif (equippedItem) {\n\t\t\t\t\t\t\t\tconst allItems = this.bulkUI.getItems();\n\t\t\t\t\t\t\t\tallItems[this.index] = equippedItem.asSpec();\n\t\t\t\t\t\t\t\tthis.item = equippedItem;\n\t\t\t\t\t\t\t\tthis.bulkUI.setItems(allItems);\n\t\t\t\t\t\t\t\tchangeEvent.emit(TypedEvent.nextEventID());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetEquippedItem: () => this.item,\n\t\t\t\t\t\tchangeEvent: changeEvent,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (eligibleEnchants.length > 0) {\n\t\t\t\t\tmodal.openTabName('Enchants');\n\t\t\t\t}\n\n\t\t\t\tconst destroyItemButton = document.createElement('button');\n\t\t\t\tdestroyItemButton.textContent = 'Remove from Batch';\n\t\t\t\tdestroyItemButton.classList.add('btn', 'btn-danger');\n\t\t\t\tdestroyItemButton.onclick = () => {\n\t\t\t\t\tbulkUI.setItems(\n\t\t\t\t\t\tbulkUI.getItems().filter((item, idx) => {\n\t\t\t\t\t\t\treturn idx != this.index;\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tmodal.close();\n\t\t\t\t};\n\t\t\t\tconst closeX = modal.header?.querySelector('.close-button');\n\t\t\t\tif (closeX != undefined) {\n\t\t\t\t\tmodal.header?.insertBefore(destroyItemButton, closeX);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.itemElem.iconElem.addEventListener('click', openEnchantGemSelector);\n\t\t\tthis.itemElem.nameElem.addEventListener('click', openEnchantGemSelector);\n\t\t\tthis.itemElem.enchantElem.addEventListener('click', openEnchantGemSelector);\n\t\t});\n\t}\n\n\tsetItem(newItem: EquippedItem | null) {\n\t\tthis.itemElem.clear();\n\t\tif (newItem != null) {\n\t\t\tthis.itemElem.update(newItem);\n\t\t\tthis.item = newItem;\n\t\t} else {\n\t\t\tthis.itemElem.rootElem.style.opacity = '30%';\n\t\t\tthis.itemElem.iconElem.style.backgroundImage = `url('/sod/assets/item_slots/empty.jpg')`;\n\t\t\tthis.itemElem.nameElem.textContent = 'Add new item (not implemented)';\n\t\t\tthis.itemElem.rootElem.style.alignItems = 'center';\n\t\t}\n\t}\n}\n\nexport class BulkTab extends SimTab {\n\treadonly simUI: IndividualSimUI<Spec>;\n\n\treadonly itemsChangedEmitter = new TypedEvent<void>();\n\n\treadonly leftPanel: HTMLElement;\n\treadonly rightPanel: HTMLElement;\n\n\treadonly column1: HTMLElement = this.buildColumn(1, 'raid-settings-col');\n\n\tprotected items: Array<ItemSpec> = new Array<ItemSpec>();\n\n\tprivate pendingResults: ResultsViewer;\n\tprivate pendingDiv: HTMLDivElement;\n\n\t// TODO: Make a real options probably\n\tprivate doCombos: boolean;\n\tprivate fastMode: boolean;\n\tprivate autoEnchant: boolean;\n\tprivate gemIconElements: HTMLImageElement[];\n\n\tconstructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n\t\tsuper(parentElem, simUI, { identifier: 'bulk-tab', title: 'Batch' });\n\t\tthis.simUI = simUI;\n\n\t\tthis.leftPanel = document.createElement('div');\n\t\tthis.leftPanel.classList.add('bulk-tab-left', 'tab-panel-left');\n\t\tthis.leftPanel.appendChild(this.column1);\n\n\t\tthis.rightPanel = document.createElement('div');\n\t\tthis.rightPanel.classList.add('bulk-tab-right', 'tab-panel-right');\n\n\t\tthis.pendingDiv = document.createElement('div');\n\t\tthis.pendingDiv.classList.add('results-pending-overlay');\n\t\tthis.pendingResults = new ResultsViewer(this.pendingDiv);\n\t\tthis.pendingResults.hideAll();\n\n\t\tthis.contentContainer.appendChild(this.leftPanel);\n\t\tthis.contentContainer.appendChild(this.rightPanel);\n\t\tthis.contentContainer.appendChild(this.pendingDiv);\n\n\t\tthis.doCombos = true;\n\t\tthis.fastMode = true;\n\t\tthis.autoEnchant = true;\n\t\tthis.gemIconElements = [];\n\t\tthis.buildTabContent();\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tthis.loadSettings();\n\t\t});\n\t}\n\n\tprivate getSettingsKey(): string {\n\t\treturn this.simUI.getStorageKey('bulk-settings.v1');\n\t}\n\n\tprivate loadSettings() {\n\t\tconst storedSettings = window.localStorage.getItem(this.getSettingsKey());\n\t\tif (storedSettings != null) {\n\t\t\tconst settings = BulkSettings.fromJsonString(storedSettings, { ignoreUnknownFields: true });\n\n\t\t\tthis.doCombos = settings.combinations;\n\t\t\tthis.fastMode = settings.fastMode;\n\t\t\tthis.autoEnchant = settings.autoEnchant;\n\t\t}\n\t}\n\n\tprivate storeSettings() {\n\t\tconst settings = this.createBulkSettings();\n\t\tconst setStr = BulkSettings.toJsonString(settings, { enumAsInteger: true });\n\n\t\twindow.localStorage.setItem(this.getSettingsKey(), setStr);\n\t}\n\n\tprotected createBulkSettings(): BulkSettings {\n\t\treturn BulkSettings.create({\n\t\t\titems: this.items,\n\t\t\t// TODO(Riotdog-GehennasEU): Make all of these configurable.\n\t\t\t// For now, it's always constant iteration combinations mode for \"sim my bags\".\n\t\t\tcombinations: this.doCombos,\n\t\t\tfastMode: this.fastMode,\n\t\t\tautoEnchant: this.autoEnchant,\n\t\t\titerationsPerCombo: this.simUI.sim.getIterations(), // TODO(Riotdog-GehennasEU): Define a new UI element for the iteration setting.\n\t\t});\n\t}\n\n\tprotected createBulkItemsDatabase(): SimDatabase {\n\t\tconst itemsDb = SimDatabase.create();\n\t\tfor (const is of this.items) {\n\t\t\tconst item = this.simUI.sim.db.lookupItemSpec(is);\n\t\t\tif (!item) {\n\t\t\t\tthrow new Error(`item with ID ${is.id} not found in database`);\n\t\t\t}\n\t\t\titemsDb.items.push(SimItem.fromJson(UIItem.toJson(item.item), { ignoreUnknownFields: true }));\n\t\t\tif (item.enchant) {\n\t\t\t\titemsDb.enchants.push(SimEnchant.fromJson(UIEnchant.toJson(item.enchant), { ignoreUnknownFields: true }));\n\t\t\t}\n\t\t}\n\n\t\treturn itemsDb;\n\t}\n\n\taddItems(items: Array<ItemSpec>) {\n\t\tif (this.items.length == 0) {\n\t\t\tthis.items = items;\n\t\t} else {\n\t\t\tthis.items = this.items.concat(items);\n\t\t}\n\t\tthis.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n\t}\n\n\tsetItems(items: Array<ItemSpec>) {\n\t\tthis.items = items;\n\t\tthis.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n\t}\n\n\tclearItems() {\n\t\tthis.items = new Array<ItemSpec>();\n\t\tthis.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n\t}\n\n\tgetItems(): Array<ItemSpec> {\n\t\tconst result = new Array<ItemSpec>();\n\t\tthis.items.forEach(spec => {\n\t\t\tresult.push(ItemSpec.clone(spec));\n\t\t});\n\t\treturn result;\n\t}\n\n\tsetCombinations(doCombos: boolean) {\n\t\tthis.doCombos = doCombos;\n\t\tthis.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n\t}\n\n\tsetFastMode(fastMode: boolean) {\n\t\tthis.fastMode = fastMode;\n\t\tthis.itemsChangedEmitter.emit(TypedEvent.nextEventID());\n\t}\n\n\tprotected async runBulkSim(onProgress: (_?: any) => void) {\n\t\tthis.pendingResults.setPending();\n\n\t\ttry {\n\t\t\tawait this.simUI.sim.runBulkSim(this.createBulkSettings(), this.createBulkItemsDatabase(), onProgress);\n\t\t} catch (e) {\n\t\t\tthis.simUI.handleCrash(e);\n\t\t}\n\t}\n\n\tprotected buildTabContent() {\n\t\tconst itemsBlock = new ContentBlock(this.column1, 'bulk-items', {\n\t\t\theader: { title: 'Items' },\n\t\t});\n\n\t\titemsBlock.bodyElement.classList.add('gear-picker-root');\n\n\t\tconst noticeWorkInProgress = document.createElement('div');\n\t\tnoticeWorkInProgress.classList.add('bulk-items-text-line');\n\t\titemsBlock.bodyElement.appendChild(noticeWorkInProgress);\n\t\tnoticeWorkInProgress.innerHTML =\n\t\t\t'<i>Notice: This is under very early but active development and experimental. You may also need to update your WoW AddOn if you want to import your bags.</i>';\n\n\t\tconst itemTextIntro = document.createElement('div');\n\t\titemTextIntro.classList.add('bulk-items-text-line');\n\t\titemsBlock.bodyElement.appendChild(itemTextIntro);\n\n\t\tconst itemList = document.createElement('div');\n\n\t\titemList.classList.add('tab-panel-col', 'bulk-gear-combo');\n\t\titemsBlock.bodyElement.appendChild(itemList);\n\n\t\tthis.itemsChangedEmitter.on(() => {\n\t\t\titemList.innerHTML = '';\n\t\t\tif (this.items.length > 0) {\n\t\t\t\titemTextIntro.textContent = 'The following items will be simmed together with your equipped gear.';\n\t\t\t\tfor (let i = 0; i < this.items.length; ++i) {\n\t\t\t\t\tconst spec = this.items[i];\n\t\t\t\t\tconst item = this.simUI.sim.db.lookupItemSpec(spec);\n\t\t\t\t\tnew BulkItemPicker(itemList, this.simUI, this, item!, i);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.clearItems();\n\n\t\tconst resultsBlock = new ContentBlock(this.column1, 'bulk-results', {\n\t\t\theader: {\n\t\t\t\ttitle: 'Results',\n\t\t\t\textraCssClasses: ['bulk-results-header'],\n\t\t\t},\n\t\t});\n\n\t\tresultsBlock.rootElem.hidden = true;\n\t\tresultsBlock.bodyElement.classList.add('gear-picker-root', 'tab-panel-col');\n\n\t\tthis.simUI.sim.bulkSimStartEmitter.on(() => {\n\t\t\tresultsBlock.rootElem.hidden = true;\n\t\t});\n\n\t\tthis.simUI.sim.bulkSimResultEmitter.on((_, bulkSimResult) => {\n\t\t\tresultsBlock.rootElem.hidden = bulkSimResult.results.length == 0;\n\t\t\tresultsBlock.bodyElement.innerHTML = '';\n\n\t\t\tfor (const r of bulkSimResult.results) {\n\t\t\t\tconst resultBlock = new ContentBlock(resultsBlock.bodyElement, 'bulk-result', { header: { title: '' }, bodyClasses: ['bulk-results-body'] });\n\t\t\t\tnew BulkSimResultRenderer(resultBlock.bodyElement, this.simUI, r, bulkSimResult.equippedGearResult!);\n\t\t\t}\n\t\t});\n\n\t\tconst settingsBlock = new ContentBlock(this.rightPanel, 'bulk-settings', {\n\t\t\theader: { title: 'Setup' },\n\t\t});\n\n\t\tconst bulkSimButton = document.createElement('button');\n\t\tbulkSimButton.classList.add('btn', 'btn-primary', 'w-100', 'bulk-settings-button');\n\t\tbulkSimButton.textContent = 'Simulate Batch';\n\t\tbulkSimButton.addEventListener('click', () => {\n\t\t\tthis.pendingDiv.style.display = 'flex';\n\t\t\tthis.leftPanel.classList.add('blurred');\n\t\t\tthis.rightPanel.classList.add('blurred');\n\n\t\t\tconst previousContents = bulkSimButton.innerHTML;\n\t\t\tbulkSimButton.disabled = true;\n\t\t\tbulkSimButton.classList.add('.disabled');\n\t\t\tbulkSimButton.innerHTML = `<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Running`;\n\n\t\t\tlet simStart = new Date().getTime();\n\t\t\tlet lastTotal = 0;\n\t\t\tlet rounds = 0;\n\t\t\tlet currentRound = 0;\n\t\t\tlet combinations = 0;\n\n\t\t\tthis.runBulkSim((progressMetrics: ProgressMetrics) => {\n\t\t\t\tconsole.log(progressMetrics);\n\n\t\t\t\tconst msSinceStart = new Date().getTime() - simStart;\n\t\t\t\tconst iterPerSecond = progressMetrics.completedIterations / (msSinceStart / 1000);\n\n\t\t\t\tif (combinations == 0) {\n\t\t\t\t\tcombinations = progressMetrics.totalSims;\n\t\t\t\t}\n\t\t\t\tif (this.fastMode) {\n\t\t\t\t\tif (rounds == 0 && progressMetrics.totalSims > 0) {\n\t\t\t\t\t\trounds = Math.ceil(Math.log(progressMetrics.totalSims / 20) / Math.log(2)) + 1;\n\t\t\t\t\t\tcurrentRound = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (progressMetrics.totalSims < lastTotal) {\n\t\t\t\t\t\tcurrentRound += 1;\n\t\t\t\t\t\tsimStart = new Date().getTime();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setSimProgress(progressMetrics, iterPerSecond, currentRound, rounds, combinations);\n\t\t\t\tlastTotal = progressMetrics.totalSims;\n\n\t\t\t\tif (progressMetrics.finalBulkResult != null) {\n\t\t\t\t\t// reset state\n\t\t\t\t\tthis.pendingDiv.style.display = 'none';\n\t\t\t\t\tthis.leftPanel.classList.remove('blurred');\n\t\t\t\t\tthis.rightPanel.classList.remove('blurred');\n\n\t\t\t\t\tthis.pendingResults.hideAll();\n\t\t\t\t\tbulkSimButton.disabled = false;\n\t\t\t\t\tbulkSimButton.classList.remove('.disabled');\n\t\t\t\t\tbulkSimButton.innerHTML = previousContents;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tsettingsBlock.bodyElement.appendChild(bulkSimButton);\n\n\t\tconst importButton = document.createElement('button');\n\t\timportButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n\t\timportButton.innerHTML = '<i class=\"fa fa-download\"></i> Import From Bags';\n\t\timportButton.addEventListener('click', () => new BulkGearJsonImporter(this.simUI.rootElem, this.simUI, this));\n\t\tsettingsBlock.bodyElement.appendChild(importButton);\n\n\t\tconst importFavsButton = document.createElement('button');\n\t\timportFavsButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n\t\timportFavsButton.innerHTML = '<i class=\"fa fa-download\"></i> Import Favorites';\n\t\timportFavsButton.addEventListener('click', () => {\n\t\t\tconst filters = this.simUI.player.sim.getFilters();\n\t\t\tconst items = filters.favoriteItems.map(itemID => {\n\t\t\t\treturn ItemSpec.create({ id: itemID });\n\t\t\t});\n\t\t\tthis.addItems(items);\n\t\t});\n\t\tsettingsBlock.bodyElement.appendChild(importFavsButton);\n\n\t\tconst searchButton = document.createElement('button');\n\t\tconst searchText = document.createElement('input');\n\t\tsearchText.type = 'text';\n\t\tsearchText.placeholder = 'search...';\n\t\tsearchText.style.display = 'none';\n\n\t\tconst searchResults = document.createElement('ul');\n\t\tsearchResults.classList.add('batch-search-results');\n\n\t\tlet allItems = Array<UIItem>();\n\n\t\tsearchText.addEventListener('keyup', ev => {\n\t\t\tif (ev.key == 'Enter') {\n\t\t\t\tconst toAdd = Array<ItemSpec>();\n\t\t\t\tsearchResults.childNodes.forEach(node => {\n\t\t\t\t\tconst strID = (node as HTMLElement).getAttribute('data-item-id');\n\t\t\t\t\tif (strID != null) {\n\t\t\t\t\t\ttoAdd.push(ItemSpec.create({ id: Number.parseInt(strID) }));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.addItems(toAdd);\n\t\t\t}\n\t\t});\n\n\t\tsearchText.addEventListener('input', () => {\n\t\t\tconst searchString = searchText.value;\n\t\t\tsearchResults.innerHTML = '';\n\t\t\tif (searchString.length == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst pieces = searchString.split(' ');\n\n\t\t\tlet displayCount = 0;\n\t\t\tallItems.every(item => {\n\t\t\t\tlet matched = true;\n\t\t\t\tconst lcName = item.name.toLowerCase();\n\t\t\t\tconst lcSetName = item.setName.toLowerCase();\n\n\t\t\t\tpieces.forEach(piece => {\n\t\t\t\t\tconst lcPiece = piece.toLowerCase();\n\t\t\t\t\tif (!lcName.includes(lcPiece) && !lcSetName.includes(lcPiece)) {\n\t\t\t\t\t\tmatched = false;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tif (matched) {\n\t\t\t\t\tconst itemElement = document.createElement('li');\n\t\t\t\t\titemElement.innerHTML = `<span>${item.name}</span>`;\n\t\t\t\t\titemElement.setAttribute('data-item-id', item.id.toString());\n\t\t\t\t\titemElement.addEventListener('click', () => {\n\t\t\t\t\t\tthis.addItems(Array<ItemSpec>(ItemSpec.create({ id: item.id })));\n\t\t\t\t\t});\n\t\t\t\t\tif (item.heroic) {\n\t\t\t\t\t\tconst htxt = document.createElement('span');\n\t\t\t\t\t\thtxt.style.color = 'green';\n\t\t\t\t\t\thtxt.innerText = '[H]';\n\t\t\t\t\t\titemElement.appendChild(htxt);\n\t\t\t\t\t}\n\t\t\t\t\tif (item.factionRestriction == UIItem_FactionRestriction.HORDE_ONLY) {\n\t\t\t\t\t\tconst ftxt = document.createElement('span');\n\t\t\t\t\t\tftxt.style.color = 'red';\n\t\t\t\t\t\tftxt.innerText = '(H)';\n\t\t\t\t\t\titemElement.appendChild(ftxt);\n\t\t\t\t\t}\n\t\t\t\t\tif (item.factionRestriction == UIItem_FactionRestriction.ALLIANCE_ONLY) {\n\t\t\t\t\t\tconst ftxt = document.createElement('span');\n\t\t\t\t\t\tftxt.style.color = 'blue';\n\t\t\t\t\t\tftxt.innerText = '(A)';\n\t\t\t\t\t\titemElement.appendChild(ftxt);\n\t\t\t\t\t}\n\t\t\t\t\tsearchResults.append(itemElement);\n\t\t\t\t\tdisplayCount++;\n\t\t\t\t}\n\n\t\t\t\treturn displayCount < 10;\n\t\t\t});\n\t\t});\n\n\t\tsearchButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n\t\tconst baseSearchHTML = '<i class=\"fa fa-search\"></i> Add Item';\n\t\tsearchButton.innerHTML = baseSearchHTML;\n\t\tsearchButton.addEventListener('click', () => {\n\t\t\tif (searchText.style.display == 'none') {\n\t\t\t\tsearchButton.innerHTML = 'Close Search Results';\n\t\t\t\tallItems = this.simUI.sim.db.getAllItems().filter(item => {\n\t\t\t\t\treturn canEquipItem(this.simUI.player, item, undefined);\n\t\t\t\t});\n\t\t\t\tsearchText.style.display = 'block';\n\t\t\t\tsearchText.focus();\n\t\t\t} else {\n\t\t\t\tsearchButton.innerHTML = baseSearchHTML;\n\t\t\t\tsearchText.style.display = 'none';\n\t\t\t\tsearchResults.innerHTML = '';\n\t\t\t}\n\t\t});\n\t\tsettingsBlock.bodyElement.appendChild(searchButton);\n\t\tsettingsBlock.bodyElement.appendChild(searchText);\n\t\tsettingsBlock.bodyElement.appendChild(searchResults);\n\n\t\tconst clearButton = document.createElement('button');\n\t\tclearButton.classList.add('btn', 'btn-secondary', 'w-100', 'bulk-settings-button');\n\t\tclearButton.textContent = 'Clear All';\n\t\tclearButton.addEventListener('click', () => {\n\t\t\tthis.clearItems();\n\t\t\tresultsBlock.rootElem.hidden = true;\n\t\t\tresultsBlock.bodyElement.innerHTML = '';\n\t\t});\n\t\tsettingsBlock.bodyElement.appendChild(clearButton);\n\n\t\tnew BooleanPicker<BulkTab>(settingsBlock.bodyElement, this, {\n\t\t\tlabel: 'Fast Mode',\n\t\t\tlabelTooltip: 'Fast mode reduces accuracy but will run faster.',\n\t\t\tchangedEvent: (_obj: BulkTab) => this.itemsChangedEmitter,\n\t\t\tgetValue: _obj => this.fastMode,\n\t\t\tsetValue: (id: EventID, obj: BulkTab, value: boolean) => {\n\t\t\t\tobj.fastMode = value;\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker<BulkTab>(settingsBlock.bodyElement, this, {\n\t\t\tlabel: 'Combinations',\n\t\t\tlabelTooltip:\n\t\t\t\t'When checked bulk simulator will create all possible combinations of the items. When disabled trinkets and rings will still run all combinations becausee they have two slots to fill each.',\n\t\t\tchangedEvent: (_obj: BulkTab) => this.itemsChangedEmitter,\n\t\t\tgetValue: _obj => this.doCombos,\n\t\t\tsetValue: (id: EventID, obj: BulkTab, value: boolean) => {\n\t\t\t\tobj.doCombos = value;\n\t\t\t},\n\t\t});\n\t\tnew BooleanPicker<BulkTab>(settingsBlock.bodyElement, this, {\n\t\t\tlabel: 'Auto Enchant',\n\t\t\tlabelTooltip: 'When checked bulk simulator apply the current enchant for a slot to each replacement item it can.',\n\t\t\tchangedEvent: (_obj: BulkTab) => this.itemsChangedEmitter,\n\t\t\tgetValue: _obj => this.autoEnchant,\n\t\t\tsetValue: (id: EventID, obj: BulkTab, value: boolean) => {\n\t\t\t\tobj.autoEnchant = value;\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate setSimProgress(progress: ProgressMetrics, iterPerSecond: number, currentRound: number, rounds: number, combinations: number) {\n\t\tconst secondsRemain = ((progress.totalIterations - progress.completedIterations) / iterPerSecond).toFixed();\n\n\t\tlet roundsText = '';\n\t\tif (rounds > 0) {\n\t\t\troundsText = `${currentRound} / ${rounds} refining rounds`;\n\t\t}\n\n\t\tthis.pendingResults.setContent(`\n      <div class=\"results-sim\">\n        <div class=\"\">${combinations} total combinations.</div>\n        <div class=\"\">${roundsText}</div>\n        <div class=\"\"> ${progress.completedSims} / ${progress.totalSims}<br>simulations complete</div>\n        <div class=\"\">\n          ${progress.completedIterations} / ${progress.totalIterations}<br>iterations complete\n        </div>\n        <div class=\"\">\n          ${secondsRemain} seconds remaining.\n        </div>\n      </div>\n    `);\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n\nimport { Component } from '../components/component.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { ContentBlock, ContentBlockHeaderConfig } from './content_block';\n\nexport type SavedDataManagerConfig<ModObject, T> = {\n\tlabel: string;\n\theader?: ContentBlockHeaderConfig;\n\tpresetsOnly?: boolean;\n\tstorageKey: string;\n\tchangeEmitters: Array<TypedEvent<any>>;\n\tequals: (a: T, b: T) => boolean;\n\tgetData: (modObject: ModObject) => T;\n\tsetData: (eventID: EventID, modObject: ModObject, data: T) => void;\n\ttoJson: (a: T) => any;\n\tfromJson: (obj: any) => T;\n};\n\nexport type SavedDataConfig<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\ttooltip?: string;\n\tisPreset?: boolean;\n\n\t// If set, will automatically hide the saved data when this evaluates to false.\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\ntype SavedData<ModObject, T> = {\n\tname: string;\n\tdata: T;\n\telem: HTMLElement;\n\tenableWhen?: (obj: ModObject) => boolean;\n};\n\nexport class SavedDataManager<ModObject, T> extends Component {\n\tprivate readonly modObject: ModObject;\n\tprivate readonly config: SavedDataManagerConfig<ModObject, T>;\n\n\tprivate readonly userData: Array<SavedData<ModObject, T>>;\n\tprivate readonly presets: Array<SavedData<ModObject, T>>;\n\n\tprivate readonly savedDataDiv: HTMLElement;\n\tprivate readonly presetDataDiv: HTMLElement;\n\tprivate readonly customDataDiv: HTMLElement;\n\tprivate readonly saveInput?: HTMLInputElement;\n\n\tprivate frozen: boolean;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: SavedDataManagerConfig<ModObject, T>) {\n\t\tsuper(parent, 'saved-data-manager-root');\n\t\tthis.modObject = modObject;\n\t\tthis.config = config;\n\n\t\tthis.userData = [];\n\t\tthis.presets = [];\n\t\tthis.frozen = false;\n\n\t\tconst contentBlock = new ContentBlock(this.rootElem, 'saved-data', { header: config.header });\n\n\t\tcontentBlock.bodyElement.innerHTML = `\n\t\t\t<div class=\"saved-data-container hide\">\n\t\t\t\t<div class=\"saved-data-presets\"></div>\n\t\t\t\t<div class=\"saved-data-custom\"></div>\n\t\t\t</div>\n\t\t`;\n\t\tthis.savedDataDiv = contentBlock.bodyElement.querySelector('.saved-data-container') as HTMLElement;\n\t\tthis.presetDataDiv = contentBlock.bodyElement.querySelector('.saved-data-presets') as HTMLElement;\n\t\tthis.customDataDiv = contentBlock.bodyElement.querySelector('.saved-data-custom') as HTMLElement;\n\n\t\tif (!config.presetsOnly) {\n\t\t\tcontentBlock.bodyElement.appendChild(this.buildCreateContainer());\n\t\t\tthis.saveInput = contentBlock.bodyElement.querySelector('.saved-data-save-input') as HTMLInputElement;\n\t\t}\n\t}\n\n\taddSavedData(config: SavedDataConfig<ModObject, T>) {\n\t\tthis.savedDataDiv.classList.remove('hide');\n\n\t\tconst newData = this.makeSavedData(config);\n\t\tconst dataArr = config.isPreset ? this.presets : this.userData;\n\t\tconst oldIdx = dataArr.findIndex(data => data.name == config.name);\n\n\t\tif (oldIdx == -1) {\n\t\t\tif (config.isPreset) {\n\t\t\t\tthis.presetDataDiv.appendChild(newData.elem);\n\t\t\t} else {\n\t\t\t\tthis.customDataDiv.appendChild(newData.elem);\n\t\t\t}\n\t\t\tdataArr.push(newData);\n\t\t} else {\n\t\t\tdataArr[oldIdx].elem.replaceWith(newData.elem);\n\t\t\tdataArr[oldIdx] = newData;\n\t\t}\n\t}\n\n\tprivate makeSavedData(config: SavedDataConfig<ModObject, T>): SavedData<ModObject, T> {\n\t\tconst dataElemFragment = document.createElement('fragment');\n\t\tdataElemFragment.innerHTML = `\n\t\t\t<button class=\"saved-data-set-chip badge rounded-pill\">\n\t\t\t\t<span class=\"saved-data-set-name\" role=\"button\">${config.name}</span>\n\t\t\t</button>\n\t\t`;\n\n\t\tconst dataElem = dataElemFragment.children[0] as HTMLElement;\n\t\tdataElem.addEventListener('click', event => {\n\t\t\tthis.config.setData(TypedEvent.nextEventID(), this.modObject, config.data);\n\n\t\t\tif (this.saveInput) this.saveInput.value = config.name;\n\t\t});\n\n\t\tif (!config.isPreset) {\n\t\t\tconst deleteFragment = document.createElement('fragment');\n\t\t\tdeleteFragment.innerHTML = `\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclass=\"saved-data-set-delete\"\n\t\t\t\t\trole=\"button\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"fa fa-times fa-lg\"></i>\n\t\t\t\t</a>\n\t\t\t`;\n\n\t\t\tconst deleteButton = deleteFragment.children[0] as HTMLElement;\n\t\t\tdataElem.appendChild(deleteButton);\n\n\t\t\tconst tooltip = Tooltip.getOrCreateInstance(deleteButton, { title: `Delete saved ${this.config.label}` });\n\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst shouldDelete = confirm(`Delete saved ${this.config.label} '${config.name}'?`);\n\t\t\t\tif (!shouldDelete) return;\n\n\t\t\t\ttooltip.dispose();\n\n\t\t\t\tconst idx = this.userData.findIndex(data => data.name == config.name);\n\t\t\t\tthis.userData[idx].elem.remove();\n\t\t\t\tthis.userData.splice(idx, 1);\n\t\t\t\tthis.saveUserData();\n\t\t\t});\n\t\t}\n\n\t\tif (config.tooltip) {\n\t\t\tTooltip.getOrCreateInstance(dataElem, {\n\t\t\t\ttitle: config.tooltip,\n\t\t\t\tplacement: 'bottom',\n\t\t\t\thtml: true,\n\t\t\t});\n\t\t}\n\n\t\tconst checkActive = () => {\n\t\t\tif (this.config.equals(config.data, this.config.getData(this.modObject))) {\n\t\t\t\tdataElem.classList.add('active');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('active');\n\t\t\t}\n\n\t\t\tif (config.enableWhen && !config.enableWhen(this.modObject)) {\n\t\t\t\tdataElem.classList.add('disabled');\n\t\t\t} else {\n\t\t\t\tdataElem.classList.remove('disabled');\n\t\t\t}\n\t\t};\n\n\t\tcheckActive();\n\t\tthis.config.changeEmitters.forEach(emitter => emitter.on(checkActive));\n\n\t\treturn {\n\t\t\tname: config.name,\n\t\t\tdata: config.data,\n\t\t\telem: dataElem,\n\t\t\tenableWhen: config.enableWhen,\n\t\t};\n\t}\n\n\t// Save data to window.localStorage.\n\tprivate saveUserData() {\n\t\tconst userData: Record<string, object> = {};\n\t\tthis.userData.forEach(savedData => {\n\t\t\tuserData[savedData.name] = this.config.toJson(savedData.data);\n\t\t});\n\n\t\tif (this.userData.length == 0 && this.presets.length == 0) this.savedDataDiv.classList.add('hide');\n\n\t\twindow.localStorage.setItem(this.config.storageKey, JSON.stringify(userData));\n\t}\n\n\t// Load data from window.localStorage.\n\tloadUserData() {\n\t\tconst dataStr = window.localStorage.getItem(this.config.storageKey);\n\t\tif (!dataStr) return;\n\n\t\tlet jsonData;\n\t\ttry {\n\t\t\tjsonData = JSON.parse(dataStr);\n\t\t} catch (e) {\n\t\t\tconsole.warn('Invalid json for local storage value: ' + dataStr);\n\t\t}\n\n\t\tfor (const name in jsonData) {\n\t\t\ttry {\n\t\t\t\tthis.addSavedData({\n\t\t\t\t\tname: name,\n\t\t\t\t\tdata: this.config.fromJson(jsonData[name]),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn('Failed parsing saved data: ' + jsonData[name]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prevent user input from creating / deleting saved data.\n\tfreeze() {\n\t\tthis.frozen = true;\n\t\tthis.rootElem.classList.add('frozen');\n\t}\n\n\tprivate buildCreateContainer(): HTMLElement {\n\t\tconst savedDataCreateFragment = document.createElement('fragment');\n\t\tsavedDataCreateFragment.innerHTML = `\n\t\t\t<div class=\"saved-data-create-container\">\n\t\t\t\t<label class=\"form-label\">${this.config.label} Name</label>\n\t\t\t\t<input class=\"saved-data-save-input form-control\" type=\"text\" placeholder=\"Name\">\n\t\t\t\t<button class=\"saved-data-save-button btn btn-primary\">Save ${this.config.label}</button>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst saveButton = savedDataCreateFragment.querySelector('.saved-data-save-button') as HTMLButtonElement;\n\n\t\tsaveButton.addEventListener('click', event => {\n\t\t\tif (this.frozen) return;\n\n\t\t\tconst newName = this.saveInput?.value;\n\t\t\tif (!newName) {\n\t\t\t\talert(`Choose a label for your saved ${this.config.label}!`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newName in this.presets) {\n\t\t\t\talert(`${this.config.label} with name ${newName} already exists.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.addSavedData({\n\t\t\t\tname: newName,\n\t\t\t\tdata: this.config.getData(this.modObject),\n\t\t\t});\n\t\t\tthis.saveUserData();\n\t\t});\n\n\t\treturn savedDataCreateFragment.children[0] as HTMLElement;\n\t}\n}\n","import { IndividualSimUI } from '../../individual_sim_ui';\nimport { Player } from '../../player';\nimport { EquipmentSpec, Spec, UnitStats } from '../../proto/common';\nimport { SavedGearSet } from '../../proto/ui';\nimport { Stats } from '../../proto_utils/stats';\nimport { EventID, TypedEvent } from '../../typed_event';\nimport { GearPicker } from '../gear_picker';\nimport { SavedDataManager } from '../saved_data_manager';\nimport { SimTab } from '../sim_tab';\n\nexport class GearTab extends SimTab {\n\tprotected simUI: IndividualSimUI<Spec>;\n\n\treadonly leftPanel: HTMLElement;\n\treadonly rightPanel: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n\t\tsuper(parentElem, simUI, { identifier: 'gear-tab', title: 'Gear' });\n\t\tthis.simUI = simUI;\n\n\t\tthis.leftPanel = document.createElement('div');\n\t\tthis.leftPanel.classList.add('gear-tab-left', 'tab-panel-left');\n\n\t\tthis.rightPanel = document.createElement('div');\n\t\tthis.rightPanel.classList.add('gear-tab-right', 'tab-panel-right');\n\n\t\tthis.contentContainer.appendChild(this.leftPanel);\n\t\tthis.contentContainer.appendChild(this.rightPanel);\n\n\t\tthis.buildTabContent();\n\t}\n\n\tprotected buildTabContent() {\n\t\tthis.buildGearPickers();\n\n\t\tthis.buildSavedGearsetPicker();\n\t}\n\n\tprivate buildGearPickers() {\n\t\tnew GearPicker(this.leftPanel, this.simUI, this.simUI.player);\n\t}\n\n\tprivate buildSavedGearsetPicker() {\n\t\tconst savedGearManager = new SavedDataManager<Player<any>, SavedGearSet>(this.rightPanel, this.simUI.player, {\n\t\t\theader: { title: 'Gear Sets' },\n\t\t\tlabel: 'Gear Set',\n\t\t\tstorageKey: this.simUI.getSavedGearStorageKey(),\n\t\t\tgetData: (player: Player<any>) => {\n\t\t\t\treturn SavedGearSet.create({\n\t\t\t\t\tgear: player.getGear().asSpec(),\n\t\t\t\t\tbonusStatsStats: player.getBonusStats().toProto(),\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetData: (eventID: EventID, player: Player<any>, newSavedGear: SavedGearSet) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setGear(eventID, this.simUI.sim.db.lookupEquipmentSpec(newSavedGear.gear || EquipmentSpec.create()));\n\t\t\t\t\tplayer.setBonusStats(eventID, Stats.fromProto(newSavedGear.bonusStatsStats || UnitStats.create()));\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.simUI.player.changeEmitter],\n\t\t\tequals: (a: SavedGearSet, b: SavedGearSet) => SavedGearSet.equals(a, b),\n\t\t\ttoJson: (a: SavedGearSet) => SavedGearSet.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedGearSet.fromJson(obj),\n\t\t});\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedGearManager.loadUserData();\n\t\t\tthis.simUI.individualConfig.presets.gear.forEach(presetGear => {\n\t\t\t\tsavedGearManager.addSavedData({\n\t\t\t\t\tname: presetGear.name,\n\t\t\t\t\ttooltip: presetGear.tooltip,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: SavedGearSet.create({\n\t\t\t\t\t\t// Convert to gear and back so order is always the same.\n\t\t\t\t\t\tgear: this.simUI.sim.db.lookupEquipmentSpec(presetGear.gear).asSpec(),\n\t\t\t\t\t\tbonusStatsStats: new Stats().toProto(),\n\t\t\t\t\t}),\n\t\t\t\t\tenableWhen: presetGear.enableWhen,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n","export const BUFFS_SECTION =\n\t'Buffs provided by other party/raid members. Note only the highest available buff rank will be applied, if possible, based on level selected';\nexport const WORLD_BUFFS_SECTION = 'World Buffs obtained from various sources across Azeroth.';\nexport const DEBUFFS_SECTION = 'Debuffs applied by other raid members.';\nexport const COOLDOWNS_SECTION =\n\t'Specify cooldown timings, in seconds. Cooldowns will be used as soon as possible after their specified timings. When not specified, cooldowns will be used when ready and it is sensible to do so.<br><br>Multiple timings can be provided by separating with commas. Any cooldown usages after the last provided timing will use the default logic.';\nexport const BLESSINGS_SECTION =\n\t'Specify Paladin Blessings for each role, in order of priority. Blessings in the 1st column will be used if there is at least 1 Paladin in the raid, 2nd column if at least 2, etc.';\n\nexport const BASIC_BIS_DISCLAIMER =\n\t\"<p>Preset gear lists are intended as rough approximations of BIS, and will often not be the absolute highest-DPS setup for you. Your optimal gear setup will depend on many factors; that's why we have a sim!</p><p>Items may also be omitted from the presets if they are highly contested and clearly better utilized on other classes, to encourage equitable gearing for the raid as a whole.</p>\";\n\nexport const HEALING_SIM_DISCLAIMER =\n\t'*** WARNING - USE AT YOUR OWN RISK ***\\n\\nThe entire concept of a healing sim is EXPERIMENTAL. All results should be taken with an EXTREMELY large grain of salt.\\n\\nThis tool is currently more similar to a spreadsheet than a true sim. Options for specifying incoming damage profiles in order to have proper reactive rotations have not yet been added.';\n\nexport const UNSPECT_TALENT_POINTS_WARNING = 'Unspent talent points.';\nexport const TOO_MANY_TALENT_POINTS_WARNING = 'More talent points spent than current level selected.';\n\nexport const TITANS_GRIP_WARNING = \"Dual wielding two-handed weapon(s) without Titan's Grip spec.\";\n\nexport const GEAR_MIN_LEVEL_WARNING = (playerLevel: number) => `Wearing gear with a minumum level requirement above level ${playerLevel}.`;\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment } from 'tsx-vanilla';\n\nimport { EventID, TypedEvent } from '../typed_event.js';\n\nimport { Input, InputConfig } from './input.js';\n\nexport type ListItemAction = 'create' | 'delete' | 'move' | 'copy';\n\nexport interface ListPickerActionsConfig {\n\tcreate?: {\n\t\t// Whether or not to use an icon for the create action button\n\t\t// defaults to FALSE\n\t\tuseIcon?: boolean\n\t}\n}\n\nexport interface ListPickerConfig<ModObject, ItemType> extends InputConfig<ModObject, Array<ItemType>> {\n\titemLabel: string,\n\tnewItem: () => ItemType,\n\tcopyItem: (oldItem: ItemType) => ItemType,\n\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<ModObject, ItemType>, index: number, config: ListItemPickerConfig<ModObject, ItemType>) => Input<ModObject, ItemType>,\n\tactions?: ListPickerActionsConfig\n\ttitle?: string,\n\ttitleTooltip?: string,\n\tinlineMenuBar?: boolean,\n\thideUi?: boolean,\n\thorizontalLayout?: boolean,\n\n\t// If set, only actions included in the list are allowed. Otherwise, all actions are allowed.\n\tallowedActions?: Array<ListItemAction>,\n}\n\nconst DEFAULT_CONFIG = {\n\tactions: {\n\t\tcreate: {\n\t\t\tuseIcon: false,\n\t\t}\n\t}\n}\n\nexport interface ListItemPickerConfig<ModObject, ItemType> extends InputConfig<ModObject, ItemType> {\n}\n\ninterface ItemPickerPair<ItemType> {\n\telem: HTMLElement,\n\tpicker: Input<any, ItemType>,\n\tidx: number,\n}\n\ninterface ListDragData<ModObject, ItemType> {\n\tlistPicker: ListPicker<ModObject, ItemType>;\n\titem: ItemPickerPair<ItemType>;\n}\n\nvar curDragData: ListDragData<any, any>|null = null;\n\nexport class ListPicker<ModObject, ItemType> extends Input<ModObject, Array<ItemType>> {\n\treadonly config: ListPickerConfig<ModObject, ItemType>;\n\tprivate readonly itemsDiv: HTMLElement;\n\n\tprivate itemPickerPairs: Array<ItemPickerPair<ItemType>>;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: ListPickerConfig<ModObject, ItemType>) {\n\t\tsuper(parent, 'list-picker-root', modObject, config);\n\t\tthis.config = {...DEFAULT_CONFIG, ...config};\n\t\tthis.itemPickerPairs = [];\n\n\t\tthis.rootElem.appendChild(\n\t\t\t<>\n\t\t\t\t{config.title &&\n\t\t\t\t\t<label className='list-picker-title form-label'>\n\t\t\t\t\t\t{config.title}\n\t\t\t\t\t</label>\n\t\t\t\t}\n\t\t\t\t<div className=\"list-picker-items\"></div>\n\t\t\t</>\n\t\t)\n\n\t\tif (this.config.hideUi) {\n\t\t\tthis.rootElem.classList.add('d-none');\n\t\t}\n\t\tif (this.config.horizontalLayout) {\n\t\t\tthis.config.inlineMenuBar = true;\n\t\t\tthis.rootElem.classList.add('horizontal');\n\t\t}\n\n\t\tif (this.config.titleTooltip) {\n\t\t\tlet cfg = {\n\t\t\t\ttitle: this.config.titleTooltip\n\t\t\t}\n\t\t\tTooltip.getOrCreateInstance(this.rootElem.querySelector('.list-picker-title') as HTMLElement, cfg);\n\t\t}\n\n\t\tthis.itemsDiv = this.rootElem.getElementsByClassName('list-picker-items')[0] as HTMLElement;\n\n\t\tif (this.actionEnabled('create')) {\n\t\t\tlet newItemButton = null;\n\t\t\tlet newButtonTooltip: Tooltip | null = null;\n\t\t\tif (this.config.actions?.create?.useIcon) {\n\t\t\t\tnewItemButton = ListPicker.makeActionElem('link-success', 'fa-plus')\n\t\t\t\tnewButtonTooltip = Tooltip.getOrCreateInstance(newItemButton, {title: `New ${config.itemLabel}`});\n\t\t\t} else {\n\t\t\t\tnewItemButton = document.createElement('button');\n\t\t\t\tnewItemButton.classList.add('btn', 'btn-primary');\n\t\t\t\tnewItemButton.textContent = `New ${config.itemLabel}`;\n\t\t\t}\n\t\t\tnewItemButton.classList.add('list-picker-new-button');\n\t\t\tnewItemButton.addEventListener('click', event => {\n\t\t\t\tconst newItem = this.config.newItem();\n\t\t\t\tconst newList = this.config.getValue(this.modObject).concat([newItem]);\n\t\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t\t\tif (newButtonTooltip) {\n\t\t\t\t\tnewButtonTooltip.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.rootElem.appendChild(newItemButton);\n\t\t}\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): Array<ItemType> {\n\t\treturn this.itemPickerPairs.map(pair => pair.picker.getInputValue());\n\t}\n\n\tsetInputValue(newValue: Array<ItemType>): void {\n\t\t// Add/remove pickers to make the lengths match.\n\t\tif (newValue.length < this.itemPickerPairs.length) {\n\t\t\tthis.itemPickerPairs.slice(newValue.length).forEach(ipp => ipp.elem.remove());\n\t\t\tthis.itemPickerPairs = this.itemPickerPairs.slice(0, newValue.length);\n\t\t} else if (newValue.length > this.itemPickerPairs.length) {\n\t\t\tconst numToAdd = newValue.length - this.itemPickerPairs.length;\n\t\t\tfor (let i = 0; i < numToAdd; i++) {\n\t\t\t\tthis.addNewPicker();\n\t\t\t}\n\t\t}\n\n\t\t// Set all the values.\n\t\tnewValue.forEach((val, i) => this.itemPickerPairs[i].picker.setInputValue(val))\n\t}\n\n\tprivate actionEnabled(action: ListItemAction): boolean {\n\t\treturn !this.config.allowedActions || this.config.allowedActions.includes(action);\n\t}\n\n\tprivate addNewPicker() {\n\t\tconst index = this.itemPickerPairs.length;\n\t\tconst itemContainer = document.createElement('div');\n\t\titemContainer.classList.add('list-picker-item-container');\n\t\tif (this.config.inlineMenuBar) {\n\t\t\titemContainer.classList.add('inline');\n\t\t}\n\t\tthis.itemsDiv.appendChild(itemContainer);\n\n\t\tconst itemElem = document.createElement('div');\n\t\titemElem.classList.add('list-picker-item');\n\n\t\tconst itemHeader = document.createElement('div');\n\t\titemHeader.classList.add('list-picker-item-header');\n\t\tconst itemHTML = '<div class=\"list-picker-item\"></div>';\n\n\t\tif (this.config.inlineMenuBar) {\n\t\t\titemContainer.appendChild(itemElem);\n\t\t\titemContainer.appendChild(itemHeader);\n\t\t} else {\n\t\t\titemContainer.appendChild(itemHeader);\n\t\t\titemContainer.appendChild(itemElem);\n\t\t\tif (this.config.itemLabel) {\n\t\t\t\tconst itemLabel = document.createElement('h6');\n\t\t\t\titemLabel.classList.add('list-picker-item-title');\n\t\t\t\titemLabel.textContent = `${this.config.itemLabel} ${this.itemPickerPairs.length + 1}`;\n\t\t\t\titemHeader.appendChild(itemLabel);\n\t\t\t}\n\t\t}\n\n\t\tconst itemPicker = this.config.newItemPicker(itemElem, this, index, {\n\t\t\tchangedEvent: this.config.changedEvent,\n\t\t\tgetValue: (modObj: ModObject) => this.getSourceValue()[index],\n\t\t\tsetValue: (eventID: EventID, modObj: ModObject, newValue: ItemType) => {\n\t\t\t\tconst newList = this.getSourceValue();\n\t\t\t\tnewList[index] = newValue;\n\t\t\t\tthis.config.setValue(eventID, modObj, newList);\n\t\t\t},\n\t\t});\n\n\t\tconst item: ItemPickerPair<ItemType> = { elem: itemContainer, picker: itemPicker, idx: index };\n\n\t\tif (this.actionEnabled('move')) {\n\t\t\tconst moveButton = ListPicker.makeActionElem('list-picker-item-move', 'fa-arrows-up-down');\n\t\t\titemHeader.appendChild(moveButton);\n\n\t\t\tconst moveButtonTooltip = Tooltip.getOrCreateInstance(moveButton, {title: 'Move (Drag+Drop)'});\n\t\t\tmoveButton.addEventListener('click', event => {\n\t\t\t\tmoveButtonTooltip.hide();\n\t\t\t});\n\n\t\t\tmoveButton.draggable = true;\n\t\t\tmoveButton.ondragstart = event => {\n\t\t\t\tif (event.target == moveButton) {\n\t\t\t\t\tevent.dataTransfer!.dropEffect = 'move';\n\t\t\t\t\tevent.dataTransfer!.effectAllowed = 'move';\n\t\t\t\t\titemContainer.classList.add('dragfrom');\n\t\t\t\t\tcurDragData = {\n\t\t\t\t\t\tlistPicker: this,\n\t\t\t\t\t\titem: item,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet dragEnterCounter = 0;\n\t\t\titemContainer.ondragenter = event => {\n\t\t\t\tif (!curDragData || curDragData.listPicker != this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tdragEnterCounter++;\n\t\t\t\titemContainer.classList.add('dragto');\n\t\t\t};\n\t\t\titemContainer.ondragleave = event => {\n\t\t\t\tif (!curDragData || curDragData.listPicker != this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tdragEnterCounter--;\n\t\t\t\tif (dragEnterCounter <= 0) {\n\t\t\t\t\titemContainer.classList.remove('dragto');\n\t\t\t\t}\n\t\t\t};\n\t\t\titemContainer.ondragover = event => {\n\t\t\t\tif (!curDragData || curDragData.listPicker != this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t};\n\t\t\titemContainer.ondrop = event => {\n\t\t\t\tif (!curDragData || curDragData.listPicker != this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tdragEnterCounter = 0;\n\t\t\t\titemContainer.classList.remove('dragto');\n\t\t\t\tcurDragData.item.elem.classList.remove('dragfrom');\n\n\t\t\t\tconst srcIdx = curDragData.item.idx;\n\t\t\t\tconst dstIdx = index;\n\t\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\t\tconst arrElem = newList[srcIdx];\n\t\t\t\tnewList.splice(srcIdx, 1);\n\t\t\t\tnewList.splice(dstIdx, 0, arrElem);\n\t\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\n\t\t\t\tcurDragData = null;\n\t\t\t};\n\t\t}\n\n\t\tif (this.actionEnabled('copy')) {\n\t\t\tconst copyButton = ListPicker.makeActionElem('list-picker-item-copy', 'fa-copy');\n\t\t\titemHeader.appendChild(copyButton);\n\t\t\tconst copyButtonTooltip = Tooltip.getOrCreateInstance(copyButton, {title: `Copy to New ${this.config.itemLabel}`});\n\n\t\t\tcopyButton.addEventListener('click', event => {\n\t\t\t\tconst newList = this.config.getValue(this.modObject).slice();\n\t\t\t\tnewList.splice(index, 0, this.config.copyItem(newList[index]));\n\t\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t\t\tcopyButtonTooltip.hide();\n\t\t\t});\n\t\t}\n\n\t\tif (this.actionEnabled('delete')) {\n\t\t\tconst deleteButton = ListPicker.makeActionElem('list-picker-item-delete', 'fa-times');\n\t\t\tdeleteButton.classList.add('link-danger');\n\t\t\titemHeader.appendChild(deleteButton);\n\t\t\tconst deleteButtonTooltip = Tooltip.getOrCreateInstance(deleteButton, { title: `Delete ${this.config.itemLabel}`});\n\n\t\t\tdeleteButton.addEventListener('click', event => {\n\t\t\t\tconst newList = this.config.getValue(this.modObject);\n\t\t\t\tnewList.splice(index, 1);\n\t\t\t\tthis.config.setValue(TypedEvent.nextEventID(), this.modObject, newList);\n\t\t\t\tdeleteButtonTooltip.hide();\n\t\t\t});\n\t\t}\n\n\t\tthis.itemPickerPairs.push(item);\n\t}\n\n\tstatic makeActionElem(cssClass: string, iconCssClass: string): HTMLElement {\n\t\tconst actionElem = document.createElement('a');\n\t\tactionElem.classList.add('list-picker-item-action', cssClass);\n\t\tactionElem.href = 'javascript:void(0)';\n\t\tactionElem.setAttribute('role', 'button');\n\n\t\tconst icon = document.createElement('i');\n\t\ticon.classList.add('fa', 'fa-xl', iconCssClass);\n\t\tactionElem.appendChild(icon);\n\n\t\treturn actionElem;\n\t}\n\n\tstatic getItemHeaderElem(itemPicker: Input<any, any>): HTMLElement {\n\t\tconst itemElem = itemPicker.rootElem.parentElement!;\n\t\tconst headerElem = (itemElem.nextElementSibling || itemElem.previousElementSibling);\n\t\tif (!headerElem?.classList.contains('list-picker-item-header')) {\n\t\t\tthrow new Error('Could not find list item header');\n\t\t}\n\t\treturn headerElem as HTMLElement;\n\t}\n}\n","import { EventID, TypedEvent } from '../../typed_event.js';\n\nimport { Input, InputConfig } from '../input.js';\n\n/**\n * Data for creating a string picker.\n */\nexport interface StringPickerConfig<ModObject> extends InputConfig<ModObject, string> {\n}\n\n// UI element for picking an arbitrary string field.\nexport class StringPicker<ModObject> extends Input<ModObject, string> {\n\tprivate readonly inputElem: HTMLSpanElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: StringPickerConfig<ModObject>) {\n\t\tsuper(parent, 'string-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('span');\n\t\tthis.inputElem.setAttribute('contenteditable', '');\n\t\tthis.inputElem.classList.add('string-picker-input');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('input', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): string {\n\t\treturn this.inputElem.textContent || '';\n\t}\n\n\tsetInputValue(newValue: string) {\n\t\tthis.inputElem.textContent = newValue;\n\t}\n}\n\n// A string picker which adapts its width to the input.\nexport class AdaptiveStringPicker<ModObject> extends Input<ModObject, string> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: InputConfig<ModObject, string>) {\n\t\tsuper(parent, 'adaptive-string-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'text';\n\t\tthis.inputElem.classList.add('form-control')\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t\tthis.inputElem.addEventListener('input', event => {\n\t\t\tthis.updateSize();\n\t\t});\n\t\tthis.updateSize();\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): string {\n\t\treturn this.inputElem.value;\n\t}\n\n\tsetInputValue(newValue: string) {\n\t\tthis.inputElem.value = newValue;\n\t\tthis.updateSize();\n\t}\n\n\tprivate updateSize() {\n\t\tconst newSize = Math.max(3, this.inputElem.value.length);\n\t\tif (this.inputElem.size != newSize)\n\t\t\tthis.inputElem.size = newSize;\n\t}\n}\n","import { Player, UnitMetadata } from '../../player.js';\nimport { ActionID, ItemSlot, OtherAction, UnitReference, UnitReference_Type as UnitType } from '../../proto/common.js';\nimport { UIRune as Rune } from '../../proto/ui.js';\nimport { ActionId, defaultTargetIcon, getPetIconFromName } from '../../proto_utils/action_id.js';\nimport { itemTypeNames } from '../../proto_utils/names.js';\nimport { EventID, TypedEvent } from '../../typed_event.js';\nimport { bucket } from '../../utils.js';\nimport { BooleanPicker } from '../boolean_picker.js';\nimport { DropdownPicker, DropdownPickerConfig, DropdownValueConfig } from '../dropdown_picker.js';\nimport { Input, InputConfig } from '../input.js';\nimport { AdaptiveStringPicker } from '../inputs/string_picker.js';\nimport { NumberPicker, NumberPickerConfig } from '../number_picker.js';\nimport { UnitPicker, UnitPickerConfig, UnitValue } from '../unit_picker.js';\n\nexport type ACTION_ID_SET =\n\t| 'auras'\n\t| 'stackable_auras'\n\t| 'icd_auras'\n\t| 'exclusive_effect_auras'\n\t| 'castable_spells'\n\t| 'channel_spells'\n\t| 'dot_spells'\n\t| 'shield_spells';\n\nconst actionIdSets: Record<\n\tACTION_ID_SET,\n\t{\n\t\tdefaultLabel: string;\n\t\tgetActionIDs: (metadata: UnitMetadata) => Promise<Array<DropdownValueConfig<ActionId>>>;\n\t}\n> = {\n\tauras: {\n\t\tdefaultLabel: 'Aura',\n\t\tgetActionIDs: async metadata => {\n\t\t\treturn metadata.getAuras().map(actionId => {\n\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\tconst hasRanks = metadata.getAuras().filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\tsubmenu: hasRanks ? [actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '')] : [],\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t},\n\tstackable_auras: {\n\t\tdefaultLabel: 'Aura',\n\t\tgetActionIDs: async metadata => {\n\t\t\treturn metadata\n\t\t\t\t.getAuras()\n\t\t\t\t.filter(aura => aura.data.maxStacks > 0)\n\t\t\t\t.map(actionId => {\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = metadata.getAuras().filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? [baseActionName] : [],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t},\n\t},\n\ticd_auras: {\n\t\tdefaultLabel: 'Aura',\n\t\tgetActionIDs: async metadata => {\n\t\t\treturn metadata\n\t\t\t\t.getAuras()\n\t\t\t\t.filter(aura => aura.data.hasIcd)\n\t\t\t\t.map(actionId => {\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = metadata.getAuras().filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? [baseActionName] : [],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t},\n\t},\n\texclusive_effect_auras: {\n\t\tdefaultLabel: 'Aura',\n\t\tgetActionIDs: async metadata => {\n\t\t\treturn metadata\n\t\t\t\t.getAuras()\n\t\t\t\t.filter(aura => aura.data.hasExclusiveEffect)\n\t\t\t\t.map(actionId => {\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = metadata.getAuras().filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? [baseActionName] : [],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t},\n\t},\n\tcastable_spells: {\n\t\tdefaultLabel: 'Spell',\n\t\tgetActionIDs: async metadata => {\n\t\t\tconst castableSpells = metadata.getSpells().filter(spell => spell.data.isCastable);\n\n\t\t\t// Split up non-cooldowns and cooldowns into separate sections for easier browsing.\n\t\t\tconst { spells: spells, cooldowns: cooldowns } = bucket(castableSpells, spell => (spell.data.isMajorCooldown ? 'cooldowns' : 'spells'));\n\n\t\t\tconst placeholders: Array<ActionId> = [ActionId.fromOtherId(OtherAction.OtherActionPotion)];\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: ActionId.fromEmpty(),\n\t\t\t\t\t\theaderText: 'Spells',\n\t\t\t\t\t\tsubmenu: ['Spells'],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t(spells || []).map(actionId => {\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = spells.filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? ['Spells', baseActionName] : ['Spells'],\n\t\t\t\t\t\textraCssClasses: actionId.data.prepullOnly\n\t\t\t\t\t\t\t? ['apl-prepull-actions-only']\n\t\t\t\t\t\t\t: actionId.data.encounterOnly\n\t\t\t\t\t\t\t\t? ['apl-priority-list-only']\n\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: ActionId.fromEmpty(),\n\t\t\t\t\t\theaderText: 'Cooldowns',\n\t\t\t\t\t\tsubmenu: ['Cooldowns'],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t(cooldowns || []).map(actionId => {\n\t\t\t\t\t// This regex also captures the percentages used in the custom Berserking cooldowns\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\([\\w\\s%]+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = cooldowns.filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? ['Cooldowns', baseActionName] : ['Cooldowns'],\n\t\t\t\t\t\textraCssClasses: actionId.data.prepullOnly\n\t\t\t\t\t\t\t? ['apl-prepull-actions-only']\n\t\t\t\t\t\t\t: actionId.data.encounterOnly\n\t\t\t\t\t\t\t\t? ['apl-priority-list-only']\n\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: ActionId.fromEmpty(),\n\t\t\t\t\t\theaderText: 'Placeholders',\n\t\t\t\t\t\tsubmenu: ['Placeholders'],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tplaceholders.map(actionId => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId,\n\t\t\t\t\t\tsubmenu: ['Placeholders'],\n\t\t\t\t\t\ttooltip: 'The Prepull Potion if CurrentTime < 0, or the Combat Potion if combat has started.',\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t].flat();\n\t\t},\n\t},\n\tchannel_spells: {\n\t\tdefaultLabel: 'Channeled Spell',\n\t\tgetActionIDs: async metadata => {\n\t\t\treturn metadata\n\t\t\t\t.getSpells()\n\t\t\t\t.filter(spell => spell.data.isCastable && spell.data.isChanneled)\n\t\t\t\t.map(actionId => {\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = metadata.getSpells().filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? [baseActionName] : [],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t},\n\t},\n\tdot_spells: {\n\t\tdefaultLabel: 'DoT Spell',\n\t\tgetActionIDs: async metadata => {\n\t\t\treturn metadata\n\t\t\t\t.getSpells()\n\t\t\t\t.filter(spell => spell.data.hasDot)\n\t\t\t\t.map(actionId => {\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = metadata.getSpells().filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? [baseActionName] : [],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t},\n\t},\n\tshield_spells: {\n\t\tdefaultLabel: 'Shield Spell',\n\t\tgetActionIDs: async metadata => {\n\t\t\treturn metadata\n\t\t\t\t.getSpells()\n\t\t\t\t.filter(spell => spell.data.hasShield)\n\t\t\t\t.map(actionId => {\n\t\t\t\t\tconst baseActionName = actionId.id.name.replace(/ \\(Rank \\d+\\)/g, '');\n\t\t\t\t\tconst rankedNameRegex = new RegExp(`${baseActionName} \\\\(Rank [0-9]+\\\\)`);\n\t\t\t\t\tconst hasRanks = metadata.getSpells().filter(spell => !!spell.id.name.match(rankedNameRegex)).length > 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: actionId.id,\n\t\t\t\t\t\tsubmenu: hasRanks ? [baseActionName] : [],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t},\n\t},\n};\n\nexport type DEFAULT_UNIT_REF = 'self' | 'currentTarget';\n\nexport interface APLActionIDPickerConfig<ModObject>\n\textends Omit<DropdownPickerConfig<ModObject, ActionID, ActionId>, 'defaultLabel' | 'equals' | 'setOptionContent' | 'values' | 'getValue' | 'setValue'> {\n\tactionIdSet: ACTION_ID_SET;\n\tgetUnitRef: (player: Player<any>) => UnitReference;\n\tdefaultUnitRef: DEFAULT_UNIT_REF;\n\tgetValue: (obj: ModObject) => ActionID;\n\tsetValue: (eventID: EventID, obj: ModObject, newValue: ActionID) => void;\n}\n\nexport class APLActionIDPicker extends DropdownPicker<Player<any>, ActionID, ActionId> {\n\tconstructor(parent: HTMLElement, player: Player<any>, config: APLActionIDPickerConfig<Player<any>>) {\n\t\tconst actionIdSet = actionIdSets[config.actionIdSet];\n\t\tsuper(parent, player, {\n\t\t\t...config,\n\t\t\tsourceToValue: (src: ActionID) => {\n\t\t\t\treturn src ? ActionId.fromProto(src) : ActionId.fromEmpty();\n\t\t\t},\n\t\t\tvalueToSource: (val: ActionId) => val.toProto(),\n\t\t\tdefaultLabel: actionIdSet.defaultLabel,\n\t\t\tequals: (a, b) => (a == null) == (b == null) && (!a || a.equals(b!)),\n\t\t\tsetOptionContent: (button, valueConfig) => {\n\t\t\t\tconst actionId = valueConfig.value;\n\n\t\t\t\tconst iconElem = document.createElement('a');\n\t\t\t\ticonElem.classList.add('apl-actionid-item-icon');\n\t\t\t\ticonElem.dataset.whtticon = 'false';\n\t\t\t\ticonElem.dataset.disableWowheadTouchTooltip = 'true';\n\t\t\t\tactionId.setBackgroundAndHref(iconElem);\n\t\t\t\tbutton.appendChild(iconElem);\n\n\t\t\t\tconst textElem = document.createTextNode(actionId.name);\n\t\t\t\tbutton.appendChild(textElem);\n\t\t\t},\n\t\t\tcreateMissingValue: value => {\n\t\t\t\tif (value.anyId() == 0) {\n\t\t\t\t\treturn new Promise<DropdownValueConfig<ActionId>>(() => {\n\t\t\t\t\t\tvalue: actionIdSet.defaultLabel;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn value.fill().then(filledId => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: filledId,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\tvalues: [],\n\t\t});\n\n\t\tconst getUnitRef = config.getUnitRef;\n\t\tconst defaultRef =\n\t\t\tconfig.defaultUnitRef == 'self' ? UnitReference.create({ type: UnitType.Self }) : UnitReference.create({ type: UnitType.CurrentTarget });\n\t\tconst getActionIDs = actionIdSet.getActionIDs;\n\t\tconst updateValues = async () => {\n\t\t\tconst unitRef = getUnitRef(player);\n\t\t\tconst metadata = player.sim.getUnitMetadata(unitRef, player, defaultRef);\n\t\t\tif (metadata) {\n\t\t\t\tconst values = await getActionIDs(metadata);\n\t\t\t\tthis.setOptions(values);\n\t\t\t}\n\t\t};\n\t\tupdateValues();\n\t\tTypedEvent.onAny([player.sim.unitMetadataEmitter, player.rotationChangeEmitter]).on(updateValues);\n\t}\n}\n\nexport interface APLRunePickerConfig<ModObject>\n\textends Omit<DropdownPickerConfig<ModObject, ActionID, Rune>, 'defaultLabel' | 'equals' | 'setOptionContent' | 'values' | 'getValue' | 'setValue'> {\n\tgetValue: (obj: ModObject) => ActionID;\n\tsetValue: (eventID: EventID, obj: ModObject, newValue: ActionID) => void;\n}\n\nexport class APLRunePicker extends DropdownPicker<Player<any>, ActionID, Rune> {\n\tconstructor(parent: HTMLElement, player: Player<any>, config: APLRunePickerConfig<Player<any>>) {\n\t\tsuper(parent, player, {\n\t\t\t...config,\n\t\t\tsourceToValue: (src: ActionID) => {\n\t\t\t\treturn src?.rawId.oneofKind == 'spellId' ? player.sim.db.getRuneById(src.rawId.spellId) : Rune.create();\n\t\t\t},\n\t\t\tvalueToSource: (val: Rune) => {\n\t\t\t\treturn ActionID.create({\n\t\t\t\t\trawId: {\n\t\t\t\t\t\toneofKind: 'spellId',\n\t\t\t\t\t\tspellId: val.id,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\tdefaultLabel: 'Runes',\n\t\t\tequals: (a, b) => a == b,\n\t\t\tsetOptionContent: (button, valueConfig) => {\n\t\t\t\tconst actionId = ActionId.fromSpellId(valueConfig.value.id);\n\t\t\t\tconst iconElem = document.createElement('a');\n\t\t\t\ticonElem.classList.add('apl-actionid-item-icon');\n\t\t\t\ticonElem.dataset.whtticon = 'false';\n\t\t\t\ticonElem.classList.add('apl-actionid-item-icon');\n\t\t\t\tactionId.fillAndSet(iconElem, true, true);\n\t\t\t\tbutton.appendChild(iconElem);\n\n\t\t\t\tconst textElem = document.createTextNode(valueConfig.value.name);\n\t\t\t\tbutton.appendChild(textElem);\n\t\t\t},\n\t\t\tvalues: [],\n\t\t});\n\n\t\tconst updateValues = async () => {\n\t\t\tconst values = Object.values(ItemSlot)\n\t\t\t\t.filter(v => typeof v != 'string')\n\t\t\t\t.map(slot => player.getRunes(slot as ItemSlot))\n\t\t\t\t.flat()\n\t\t\t\t.map(rune => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: rune,\n\t\t\t\t\t\tsubmenu: [itemTypeNames.get(rune.type) ?? ''],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\tthis.setOptions(values);\n\t\t};\n\t\tupdateValues();\n\t\tplayer.rotationChangeEmitter.on(() => this.update);\n\t}\n}\n\nexport type UNIT_SET = 'aura_sources' | 'aura_sources_targets_first' | 'targets';\n\nconst unitSets: Record<\n\tUNIT_SET,\n\t{\n\t\t// Uses target icon by default instead of person icon. This should be set to true for inputs that default to CurrentTarget.\n\t\ttargetUI?: boolean;\n\t\tgetUnits: (player: Player<any>) => Array<UnitReference | undefined>;\n\t}\n> = {\n\taura_sources: {\n\t\tgetUnits: player => {\n\t\t\treturn [\n\t\t\t\tundefined,\n\t\t\t\tplayer\n\t\t\t\t\t.getPetMetadatas()\n\t\t\t\t\t.asList()\n\t\t\t\t\t.map((petMetadata, i) => UnitReference.create({ type: UnitType.Pet, index: i, owner: UnitReference.create({ type: UnitType.Self }) })),\n\t\t\t\tUnitReference.create({ type: UnitType.CurrentTarget }),\n\t\t\t\tplayer.sim.encounter.targetsMetadata.asList().map((targetMetadata, i) => UnitReference.create({ type: UnitType.Target, index: i })),\n\t\t\t].flat();\n\t\t},\n\t},\n\taura_sources_targets_first: {\n\t\ttargetUI: true,\n\t\tgetUnits: player => {\n\t\t\treturn [\n\t\t\t\tundefined,\n\t\t\t\tplayer.sim.encounter.targetsMetadata.asList().map((targetMetadata, i) => UnitReference.create({ type: UnitType.Target, index: i })),\n\t\t\t\tUnitReference.create({ type: UnitType.Self }),\n\t\t\t\tplayer\n\t\t\t\t\t.getPetMetadatas()\n\t\t\t\t\t.asList()\n\t\t\t\t\t.map((petMetadata, i) => UnitReference.create({ type: UnitType.Pet, index: i, owner: UnitReference.create({ type: UnitType.Self }) })),\n\t\t\t].flat();\n\t\t},\n\t},\n\ttargets: {\n\t\ttargetUI: true,\n\t\tgetUnits: player => {\n\t\t\treturn [\n\t\t\t\tundefined,\n\t\t\t\tplayer.sim.encounter.targetsMetadata.asList().map((targetMetadata, i) => UnitReference.create({ type: UnitType.Target, index: i })),\n\t\t\t].flat();\n\t\t},\n\t},\n};\n\nexport interface APLUnitPickerConfig extends Omit<UnitPickerConfig<Player<any>>, 'values'> {\n\tunitSet: UNIT_SET;\n}\n\nexport class APLUnitPicker extends UnitPicker<Player<any>> {\n\tprivate readonly unitSet: UNIT_SET;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: APLUnitPickerConfig) {\n\t\tconst targetUI = !!unitSets[config.unitSet].targetUI;\n\t\tsuper(parent, player, {\n\t\t\t...config,\n\t\t\tsourceToValue: (src: UnitReference | undefined) => APLUnitPicker.refToValue(src, player, targetUI),\n\t\t\tvalueToSource: (val: UnitValue) => val.value,\n\t\t\tvalues: [],\n\t\t\thideLabelWhenDefaultSelected: true,\n\t\t});\n\t\tthis.unitSet = config.unitSet;\n\t\tthis.rootElem.classList.add('apl-unit-picker');\n\n\t\tthis.updateValues();\n\t\tplayer.sim.unitMetadataEmitter.on(() => this.updateValues());\n\t}\n\n\tprivate static refToValue(ref: UnitReference | undefined, thisPlayer: Player<any>, targetUI: boolean | undefined): UnitValue {\n\t\tif (!ref || ref.type == UnitType.Unknown) {\n\t\t\treturn {\n\t\t\t\tvalue: ref,\n\t\t\t\ticonUrl: targetUI ? 'fa-bullseye' : 'fa-user',\n\t\t\t\ttext: targetUI ? 'Current Target' : 'Self',\n\t\t\t};\n\t\t} else if (ref.type == UnitType.Self) {\n\t\t\treturn {\n\t\t\t\tvalue: ref,\n\t\t\t\ticonUrl: 'fa-user',\n\t\t\t\ttext: 'Self',\n\t\t\t};\n\t\t} else if (ref.type == UnitType.CurrentTarget) {\n\t\t\treturn {\n\t\t\t\tvalue: ref,\n\t\t\t\ticonUrl: 'fa-bullseye',\n\t\t\t\ttext: 'Current Target',\n\t\t\t};\n\t\t} else if (ref.type == UnitType.Player) {\n\t\t\tconst player = thisPlayer.sim.raid.getPlayer(ref.index);\n\t\t\tif (player) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: ref,\n\t\t\t\t\t//color: player.getClassColor(),\n\t\t\t\t\ticonUrl: player.getSpecIcon(),\n\t\t\t\t\ttext: `Player ${ref.index + 1}`,\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (ref.type == UnitType.Target) {\n\t\t\tconst targetMetadata = thisPlayer.sim.encounter.targetsMetadata.asList()[ref.index];\n\t\t\tif (targetMetadata) {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: ref,\n\t\t\t\t\ticonUrl: defaultTargetIcon,\n\t\t\t\t\ttext: `Target ${ref.index + 1}`,\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (ref.type == UnitType.Pet) {\n\t\t\tconst petMetadata = thisPlayer.sim.getUnitMetadata(ref, thisPlayer, UnitReference.create({ type: UnitType.Self }));\n\t\t\tlet name = `Pet ${ref.index + 1}`;\n\t\t\tlet icon: string | ActionId = 'fa-paw';\n\t\t\tif (petMetadata) {\n\t\t\t\tconst petName = petMetadata.getName();\n\t\t\t\tif (petName) {\n\t\t\t\t\tconst rmIdx = petName.indexOf(' - ');\n\t\t\t\t\tname = petName.substring(rmIdx + ' - '.length);\n\t\t\t\t\ticon = getPetIconFromName(name) || icon;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tvalue: ref,\n\t\t\t\ticonUrl: icon,\n\t\t\t\ttext: name,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tvalue: ref,\n\t\t};\n\t}\n\n\tprivate updateValues() {\n\t\tconst unitSet = unitSets[this.unitSet];\n\t\tconst values = unitSet.getUnits(this.modObject);\n\n\t\tthis.setOptions(\n\t\t\tvalues.map(v => {\n\t\t\t\tconst valueConfig: DropdownValueConfig<UnitValue> = {\n\t\t\t\t\tvalue: APLUnitPicker.refToValue(v, this.modObject, unitSet.targetUI),\n\t\t\t\t};\n\t\t\t\tif (v && v.type == UnitType.Pet) {\n\t\t\t\t\tif (unitSet.targetUI) {\n\t\t\t\t\t\tvalueConfig.submenu = [APLUnitPicker.refToValue(v.owner!, this.modObject, unitSet.targetUI)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalueConfig.submenu = [APLUnitPicker.refToValue(undefined, this.modObject, unitSet.targetUI)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn valueConfig;\n\t\t\t}),\n\t\t);\n\t}\n}\n\ntype APLPickerBuilderFieldFactory<F> = (\n\tparent: HTMLElement,\n\tplayer: Player<any>,\n\tconfig: InputConfig<Player<any>, F>,\n\tgetParentValue: () => any,\n) => Input<Player<any>, F>;\n\nexport interface APLPickerBuilderFieldConfig<T, F extends keyof T> {\n\tfield: F;\n\tnewValue: () => T[F];\n\tfactory: APLPickerBuilderFieldFactory<T[F]>;\n\n\tlabel?: string;\n\tlabelTooltip?: string;\n}\n\nexport interface APLPickerBuilderConfig<T> extends InputConfig<Player<any>, T> {\n\tnewValue: () => T;\n\tfields: Array<APLPickerBuilderFieldConfig<T, any>>;\n}\n\nexport interface APLPickerBuilderField<T, F extends keyof T> extends APLPickerBuilderFieldConfig<T, F> {\n\tpicker: Input<Player<any>, T[F]>;\n}\n\nexport class APLPickerBuilder<T> extends Input<Player<any>, T> {\n\tprivate readonly config: APLPickerBuilderConfig<T>;\n\tprivate readonly fieldPickers: Array<APLPickerBuilderField<T, any>>;\n\n\tconstructor(parent: HTMLElement, modObject: Player<any>, config: APLPickerBuilderConfig<T>) {\n\t\tsuper(parent, 'apl-picker-builder-root', modObject, config);\n\t\tthis.config = config;\n\n\t\tthis.fieldPickers = config.fields.map(fieldConfig => APLPickerBuilder.makeFieldPicker(this, fieldConfig));\n\n\t\tthis.init();\n\t}\n\n\tprivate static makeFieldPicker<T, F extends keyof T>(\n\t\tbuilder: APLPickerBuilder<T>,\n\t\tfieldConfig: APLPickerBuilderFieldConfig<T, F>,\n\t): APLPickerBuilderField<T, F> {\n\t\tconst field: F = fieldConfig.field;\n\t\tconst picker = fieldConfig.factory(\n\t\t\tbuilder.rootElem,\n\t\t\tbuilder.modObject,\n\t\t\t{\n\t\t\t\tlabel: fieldConfig.label,\n\t\t\t\tlabelTooltip: fieldConfig.labelTooltip,\n\t\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\t\tgetValue: () => {\n\t\t\t\t\tconst source = builder.getSourceValue();\n\t\t\t\t\tif (!source[field]) {\n\t\t\t\t\t\tsource[field] = fieldConfig.newValue();\n\t\t\t\t\t}\n\t\t\t\t\treturn source[field];\n\t\t\t\t},\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: any) => {\n\t\t\t\t\tbuilder.getSourceValue()[field] = newValue;\n\t\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t\t},\n\t\t\t},\n\t\t\t() => builder.getSourceValue(),\n\t\t);\n\n\t\tif (field === 'vals' || field === 'actions') {\n\t\t\tpicker.rootElem.classList.add('apl-picker-builder-multi');\n\t\t}\n\n\t\treturn {\n\t\t\t...fieldConfig,\n\t\t\tpicker: picker,\n\t\t};\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): T {\n\t\tconst val = this.config.newValue();\n\t\tthis.fieldPickers.forEach(pickerData => {\n\t\t\tval[pickerData.field as keyof T] = pickerData.picker.getInputValue();\n\t\t});\n\t\treturn val;\n\t}\n\n\tsetInputValue(newValue: T) {\n\t\tthis.fieldPickers.forEach(pickerData => {\n\t\t\tpickerData.picker.setInputValue(newValue[pickerData.field as keyof T]);\n\t\t});\n\t}\n}\n\nexport function actionIdFieldConfig(\n\tfield: string,\n\tactionIdSet: ACTION_ID_SET,\n\tunitRefField?: string,\n\tdefaultUnitRef?: DEFAULT_UNIT_REF,\n\toptions?: Partial<APLPickerBuilderFieldConfig<any, any>>,\n): APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => ActionID.create(),\n\t\tfactory: (parent, player, config, getParentValue) => {\n\t\t\treturn new APLActionIDPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tactionIdSet: actionIdSet,\n\t\t\t\tgetUnitRef: () => (unitRefField ? getParentValue()[unitRefField] : UnitReference.create()),\n\t\t\t\tdefaultUnitRef: defaultUnitRef || 'self',\n\t\t\t});\n\t\t},\n\t\t...(options || {}),\n\t};\n}\n\nexport function runeFieldConfig(field: string): APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => ActionID.create(),\n\t\tfactory: (parent, player, config, _getParentValue) => {\n\t\t\treturn new APLRunePicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t});\n\t\t},\n\t};\n}\n\nexport function unitFieldConfig(\n\tfield: string,\n\tunitSet: UNIT_SET,\n\toptions?: Partial<APLPickerBuilderFieldConfig<any, any>>,\n): APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => undefined,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew APLUnitPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tunitSet: unitSet,\n\t\t\t}),\n\t\t...(options || {}),\n\t};\n}\n\nexport function booleanFieldConfig(\n\tfield: string,\n\tlabel?: string,\n\toptions?: Partial<APLPickerBuilderFieldConfig<any, any>>,\n): APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => false,\n\t\tfactory: (parent, player, config) => {\n\t\t\tconfig.extraCssClasses = ['input-inline'].concat(config.extraCssClasses || []);\n\t\t\treturn new BooleanPicker(parent, player, config);\n\t\t},\n\t\t...(options || {}),\n\t\tlabel: label,\n\t};\n}\n\nexport function numberFieldConfig(\n\tfield: string,\n\tfloat: boolean,\n\toptions?: Partial<APLPickerBuilderFieldConfig<any, any>>,\n): APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => 0,\n\t\tfactory: (parent, player, config) => {\n\t\t\tconst numberPickerConfig = config as NumberPickerConfig<Player<any>>;\n\t\t\tnumberPickerConfig.float = float;\n\t\t\tnumberPickerConfig.extraCssClasses = ['input-inline'].concat(config.extraCssClasses || []);\n\t\t\treturn new NumberPicker(parent, player, numberPickerConfig);\n\t\t},\n\t\t...(options || {}),\n\t};\n}\n\nexport function stringFieldConfig(field: string, options?: Partial<APLPickerBuilderFieldConfig<any, any>>): APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => '',\n\t\tfactory: (parent, player, config) => {\n\t\t\tconfig.extraCssClasses = ['input-inline'].concat(config.extraCssClasses || []);\n\t\t\treturn new AdaptiveStringPicker(parent, player, config);\n\t\t},\n\t\t...(options || {}),\n\t};\n}\n\n/*\nexport function runeTypeFieldConfig(field: string, includeDeath: boolean): APLPickerBuilderFieldConfig<any, any> {\n\n       let values = [\n\n\t\t{ value: APLValueRuneType.RuneBlood, label: 'Blood' },\n\t\t{ value: APLValueRuneType.RuneFrost, label: 'Frost' },\n\t\t{ value: APLValueRuneType.RuneUnholy, label: 'Unholy' },\n\n\t]\n\n\tif (includeDeath) {\n\t\t//values.push({ value: APLValueRuneType.RuneDeath, label: 'Death' })\n\t}\n\n\treturn {\n\t\tfield: field,\n\t\t//newValue: () => APLValueRuneType.RuneBlood,\n\t\tfactory: (parent, player, config) => new TextDropdownPicker(parent, player, {\n\t\t\t...config,\n\t\t\tdefaultLabel: 'None',\n\t\t\tequals: (a, b) => a == b,\n\t\t\tvalues: values,\n\t\t}),\n\t};\n\n}\n\nexport function runeSlotFieldConfig(field: string): APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => APLValueRuneSlot.SlotLeftBlood,\n\t\tfactory: (parent, player, config) => new TextDropdownPicker(parent, player, {\n\t\t\t...config,\n\t\t\tdefaultLabel: 'None',\n\t\t\tequals: (a, b) => a == b,\n\t\t\tvalues: [\n\t\t\t\t{ value: APLValueRuneSlot.SlotLeftBlood, label: 'Blood Left' },\n\t\t\t\t{ value: APLValueRuneSlot.SlotRightBlood, label: 'Blood Right' },\n\t\t\t\t{ value: APLValueRuneSlot.SlotLeftFrost, label: 'Frost Left' },\n\t\t\t\t{ value: APLValueRuneSlot.SlotRightFrost, label: 'Frost Right' },\n\t\t\t\t{ value: APLValueRuneSlot.SlotLeftUnholy, label: 'Unholy Left' },\n\t\t\t\t{ value: APLValueRuneSlot.SlotRightUnholy, label: 'Unholy Right' },\n\t\t\t],\n\t\t}),\n\n\t};\n}\n\nexport function rotationTypeFieldConfig(field: string): APLPickerBuilderFieldConfig<any, any> {\n\tlet values = [\n\t\t{ value: FeralDruid_Rotation_AplType.SingleTarget, label: 'Single Target' },\n\t\t{ value: FeralDruid_Rotation_AplType.Aoe, label: 'AOE' },\n\t]\n\n\treturn {\n\t\tfield: field,\n\t\tlabel: 'Type',\n\t\tnewValue: () => FeralDruid_Rotation_AplType.SingleTarget,\n\t\tfactory: (parent, player, config) => new TextDropdownPicker(parent, player, {\n\t\t\t...config,\n\t\t\tdefaultLabel: 'Single Target',\n\t\t\tequals: (a, b) => a == b,\n\t\t\tvalues: values,\n\t\t}),\n\t};\n}\n*/\n\nexport function aplInputBuilder<T>(\n\tnewValue: () => T,\n\tfields: Array<APLPickerBuilderFieldConfig<T, keyof T>>,\n): (parent: HTMLElement, player: Player<any>, config: InputConfig<Player<any>, T>) => Input<Player<any>, T> {\n\treturn (parent, player, config) => {\n\t\treturn new APLPickerBuilder(parent, player, {\n\t\t\t...config,\n\t\t\tnewValue: newValue,\n\t\t\tfields: fields,\n\t\t});\n\t};\n}\n","import { Player } from '../../player.js';\nimport {\n\tAPLValue,\n\tAPLValueAnd,\n\tAPLValueAuraICDIsReadyWithReactionTime,\n\tAPLValueAuraInternalCooldown,\n\tAPLValueAuraIsActive,\n\tAPLValueAuraIsActiveWithReactionTime,\n\tAPLValueAuraIsKnown,\n\tAPLValueAuraNumStacks,\n\tAPLValueAuraRemainingTime,\n\tAPLValueAuraShouldRefresh,\n\tAPLValueAutoSwingTime,\n\tAPLValueAutoSwingTime_SwingType as AutoSwingType,\n\tAPLValueAutoTimeToNext,\n\tAPLValueAutoTimeToNext_AttackType as AutoAttackType,\n\tAPLValueCatExcessEnergy,\n\tAPLValueCatNewSavageRoarDuration,\n\tAPLValueChannelClipDelay,\n\tAPLValueCompare,\n\tAPLValueCompare_ComparisonOperator as ComparisonOperator,\n\tAPLValueConst,\n\tAPLValueCurrentComboPoints,\n\tAPLValueCurrentEnergy,\n\tAPLValueCurrentHealth,\n\tAPLValueCurrentHealthPercent,\n\tAPLValueCurrentMana,\n\tAPLValueCurrentManaPercent,\n\tAPLValueCurrentRage,\n\tAPLValueCurrentSealRemainingTime,\n\tAPLValueCurrentTime,\n\tAPLValueCurrentTimePercent,\n\tAPLValueDotIsActive,\n\tAPLValueDotRemainingTime,\n\tAPLValueEnergyThreshold,\n\tAPLValueFrontOfTarget,\n\tAPLValueGCDIsReady,\n\tAPLValueGCDTimeToReady,\n\tAPLValueIsExecutePhase,\n\tAPLValueIsExecutePhase_ExecutePhaseThreshold as ExecutePhaseThreshold,\n\tAPLValueMath,\n\tAPLValueMath_MathOperator as MathOperator,\n\tAPLValueMax,\n\tAPLValueMin,\n\tAPLValueNot,\n\tAPLValueNumberTargets,\n\tAPLValueOr,\n\tAPLValueRemainingTime,\n\tAPLValueRemainingTimePercent,\n\tAPLValueRuneIsEquipped,\n\tAPLValueSequenceIsComplete,\n\tAPLValueSequenceIsReady,\n\tAPLValueSequenceTimeToReady,\n\tAPLValueSpellCanCast,\n\tAPLValueSpellCastTime,\n\tAPLValueSpellChanneledTicks,\n\tAPLValueSpellCPM,\n\tAPLValueSpellCurrentCost,\n\tAPLValueSpellIsChanneling,\n\tAPLValueSpellIsKnown,\n\tAPLValueSpellIsReady,\n\tAPLValueSpellTimeToReady,\n\tAPLValueSpellTravelTime,\n\tAPLValueTimeToEnergyTick,\n\tAPLValueTotemRemainingTime,\n\tAPLValueWarlockCurrentPetMana,\n\tAPLValueWarlockCurrentPetManaPercent,\n\tAPLValueWarlockShouldRecastDrainSoul,\n\tAPLValueWarlockShouldRefreshCorruption,\n} from '../../proto/apl.js';\nimport { Class, Spec } from '../../proto/common.js';\nimport { ShamanTotems_TotemType as TotemType } from '../../proto/shaman.js';\nimport { EventID } from '../../typed_event.js';\nimport { TextDropdownPicker, TextDropdownValueConfig } from '../dropdown_picker.js';\nimport { Input, InputConfig } from '../input.js';\nimport { ListItemPickerConfig, ListPicker } from '../list_picker.js';\nimport * as AplHelpers from './apl_helpers.js';\n\nexport interface APLValuePickerConfig extends InputConfig<Player<any>, APLValue | undefined> {}\n\nexport type APLValueKind = APLValue['value']['oneofKind'];\nexport type APLValueImplStruct<F extends APLValueKind> = Extract<APLValue['value'], { oneofKind: F }>;\ntype APLValueImplTypesUnion = {\n\t[f in NonNullable<APLValueKind>]: f extends keyof APLValueImplStruct<f> ? APLValueImplStruct<f>[f] : never;\n};\nexport type APLValueImplType = APLValueImplTypesUnion[NonNullable<APLValueKind>] | undefined;\n\nexport class APLValuePicker extends Input<Player<any>, APLValue | undefined> {\n\tprivate kindPicker: TextDropdownPicker<Player<any>, APLValueKind>;\n\n\tprivate currentKind: APLValueKind;\n\tprivate valuePicker: Input<Player<any>, any> | null;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: APLValuePickerConfig) {\n\t\tsuper(parent, 'apl-value-picker-root', player, config);\n\n\t\tconst isPrepull = this.rootElem.closest('.apl-prepull-action-picker') != null;\n\n\t\tconst allValueKinds = (Object.keys(valueKindFactories) as Array<NonNullable<APLValueKind>>).filter(\n\t\t\tvalueKind => valueKindFactories[valueKind].includeIf?.(player, isPrepull) ?? true,\n\t\t);\n\n\t\tthis.kindPicker = new TextDropdownPicker(this.rootElem, player, {\n\t\t\tdefaultLabel: 'No Condition',\n\t\t\tvalues: [\n\t\t\t\t{\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t\tlabel: '<None>',\n\t\t\t\t} as TextDropdownValueConfig<APLValueKind>,\n\t\t\t].concat(\n\t\t\t\tallValueKinds.map(kind => {\n\t\t\t\t\tconst factory = valueKindFactories[kind];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: kind,\n\t\t\t\t\t\tlabel: factory.label,\n\t\t\t\t\t\tsubmenu: factory.submenu,\n\t\t\t\t\t\ttooltip: factory.fullDescription ? `<p>${factory.shortDescription}</p> ${factory.fullDescription}` : factory.shortDescription,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t),\n\t\t\tequals: (a, b) => a == b,\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (_player: Player<any>) => this.getSourceValue()?.value.oneofKind,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newKind: APLValueKind) => {\n\t\t\t\tconst sourceValue = this.getSourceValue();\n\t\t\t\tconst oldKind = sourceValue?.value.oneofKind;\n\t\t\t\tif (oldKind == newKind) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (newKind) {\n\t\t\t\t\tconst factory = valueKindFactories[newKind];\n\t\t\t\t\tlet newSourceValue = this.makeAPLValue(newKind, factory.newValue());\n\t\t\t\t\tif (sourceValue) {\n\t\t\t\t\t\t// Some pre-fill logic when swapping kinds.\n\t\t\t\t\t\tif (oldKind && this.valuePicker) {\n\t\t\t\t\t\t\tif (newKind == 'not') {\n\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'not'>).not.val = this.makeAPLValue(oldKind, this.valuePicker.getInputValue());\n\t\t\t\t\t\t\t} else if (sourceValue.value.oneofKind == 'not' && sourceValue.value.not.val?.value.oneofKind == newKind) {\n\t\t\t\t\t\t\t\tnewSourceValue = sourceValue.value.not.val;\n\t\t\t\t\t\t\t} else if (newKind == 'and') {\n\t\t\t\t\t\t\t\tif (sourceValue.value.oneofKind == 'or') {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'and'>).and.vals = sourceValue.value.or.vals;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'and'>).and.vals = [\n\t\t\t\t\t\t\t\t\t\tthis.makeAPLValue(oldKind, this.valuePicker.getInputValue()),\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (newKind == 'or') {\n\t\t\t\t\t\t\t\tif (sourceValue.value.oneofKind == 'and') {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'or'>).or.vals = sourceValue.value.and.vals;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'or'>).or.vals = [this.makeAPLValue(oldKind, this.valuePicker.getInputValue())];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (newKind == 'min') {\n\t\t\t\t\t\t\t\tif (sourceValue.value.oneofKind == 'max') {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'min'>).min.vals = sourceValue.value.max.vals;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'min'>).min.vals = [\n\t\t\t\t\t\t\t\t\t\tthis.makeAPLValue(oldKind, this.valuePicker.getInputValue()),\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (newKind == 'max') {\n\t\t\t\t\t\t\t\tif (sourceValue.value.oneofKind == 'min') {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'max'>).max.vals = sourceValue.value.min.vals;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'max'>).max.vals = [\n\t\t\t\t\t\t\t\t\t\tthis.makeAPLValue(oldKind, this.valuePicker.getInputValue()),\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (sourceValue.value.oneofKind == 'and' && sourceValue.value.and.vals?.[0]?.value.oneofKind == newKind) {\n\t\t\t\t\t\t\t\tnewSourceValue = sourceValue.value.and.vals[0];\n\t\t\t\t\t\t\t} else if (sourceValue.value.oneofKind == 'or' && sourceValue.value.or.vals?.[0]?.value.oneofKind == newKind) {\n\t\t\t\t\t\t\t\tnewSourceValue = sourceValue.value.or.vals[0];\n\t\t\t\t\t\t\t} else if (sourceValue.value.oneofKind == 'min' && sourceValue.value.min.vals?.[0]?.value.oneofKind == newKind) {\n\t\t\t\t\t\t\t\tnewSourceValue = sourceValue.value.min.vals[0];\n\t\t\t\t\t\t\t} else if (sourceValue.value.oneofKind == 'max' && sourceValue.value.max.vals?.[0]?.value.oneofKind == newKind) {\n\t\t\t\t\t\t\t\tnewSourceValue = sourceValue.value.max.vals[0];\n\t\t\t\t\t\t\t} else if (newKind == 'cmp') {\n\t\t\t\t\t\t\t\t(newSourceValue.value as APLValueImplStruct<'cmp'>).cmp.lhs = this.makeAPLValue(oldKind, this.valuePicker.getInputValue());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (sourceValue) {\n\t\t\t\t\t\tsourceValue.value = newSourceValue.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setSourceValue(eventID, newSourceValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.setSourceValue(eventID, undefined);\n\t\t\t\t}\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.currentKind = undefined;\n\t\tthis.valuePicker = null;\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): APLValue | undefined {\n\t\tconst kind = this.kindPicker.getInputValue();\n\t\tif (!kind) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn APLValue.create({\n\t\t\t\tvalue: {\n\t\t\t\t\toneofKind: kind,\n\t\t\t\t\t...(() => {\n\t\t\t\t\t\tconst val: any = {};\n\t\t\t\t\t\tif (kind && this.valuePicker) {\n\t\t\t\t\t\t\tval[kind] = this.valuePicker.getInputValue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t})(),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetInputValue(newValue: APLValue | undefined) {\n\t\tconst newKind = newValue?.value.oneofKind;\n\t\tthis.updateValuePicker(newKind);\n\n\t\tif (newKind && newValue) {\n\t\t\tthis.valuePicker!.setInputValue((newValue.value as any)[newKind]);\n\t\t}\n\t}\n\n\tprivate makeAPLValue<K extends NonNullable<APLValueKind>>(kind: K, implVal: APLValueImplTypesUnion[K]): APLValue {\n\t\tif (!kind) {\n\t\t\treturn APLValue.create();\n\t\t}\n\t\tconst obj: any = { oneofKind: kind };\n\t\tobj[kind] = implVal;\n\t\treturn APLValue.create({ value: obj });\n\t}\n\n\tprivate updateValuePicker(newKind: APLValueKind) {\n\t\tconst oldKind = this.currentKind;\n\t\tif (newKind == oldKind) {\n\t\t\treturn;\n\t\t}\n\t\tthis.currentKind = newKind;\n\n\t\tif (this.valuePicker) {\n\t\t\tthis.valuePicker.rootElem.remove();\n\t\t\tthis.valuePicker = null;\n\t\t}\n\n\t\tif (!newKind) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.kindPicker.setInputValue(newKind);\n\n\t\tconst factory = valueKindFactories[newKind];\n\t\tthis.valuePicker = factory.factory(this.rootElem, this.modObject, {\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: () => {\n\t\t\t\tconst sourceVal = this.getSourceValue();\n\t\t\t\treturn sourceVal ? (sourceVal.value as any)[newKind] || factory.newValue() : factory.newValue();\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: any) => {\n\t\t\t\tconst sourceVal = this.getSourceValue();\n\t\t\t\tif (sourceVal) {\n\t\t\t\t\t(sourceVal.value as any)[newKind] = newValue;\n\t\t\t\t}\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t}\n}\n\ntype ValueKindConfig<T> = {\n\tlabel: string;\n\tsubmenu?: Array<string>;\n\tshortDescription: string;\n\tfullDescription?: string;\n\tnewValue: () => T;\n\tincludeIf?: (player: Player<any>, isPrepull: boolean) => boolean;\n\tfactory: (parent: HTMLElement, player: Player<any>, config: InputConfig<Player<any>, T>) => Input<Player<any>, T>;\n};\n\nfunction comparisonOperatorFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => ComparisonOperator.OpEq,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew TextDropdownPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tdefaultLabel: 'None',\n\t\t\t\tequals: (a, b) => a == b,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ value: ComparisonOperator.OpEq, label: '==' },\n\t\t\t\t\t{ value: ComparisonOperator.OpNe, label: '!=' },\n\t\t\t\t\t{ value: ComparisonOperator.OpGe, label: '>=' },\n\t\t\t\t\t{ value: ComparisonOperator.OpGt, label: '>' },\n\t\t\t\t\t{ value: ComparisonOperator.OpLe, label: '<=' },\n\t\t\t\t\t{ value: ComparisonOperator.OpLt, label: '<' },\n\t\t\t\t],\n\t\t\t}),\n\t};\n}\n\nfunction mathOperatorFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => MathOperator.OpAdd,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew TextDropdownPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tdefaultLabel: 'None',\n\t\t\t\tequals: (a, b) => a == b,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ value: MathOperator.OpAdd, label: '+' },\n\t\t\t\t\t{ value: MathOperator.OpSub, label: '-' },\n\t\t\t\t\t{ value: MathOperator.OpMul, label: '*' },\n\t\t\t\t\t{ value: MathOperator.OpDiv, label: '/' },\n\t\t\t\t],\n\t\t\t}),\n\t};\n}\n\nfunction autoTypeFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => AutoAttackType.Any,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew TextDropdownPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tdefaultLabel: 'None',\n\t\t\t\tequals: (a, b) => a == b,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ value: AutoAttackType.Any, label: 'Any' },\n\t\t\t\t\t{ value: AutoAttackType.Melee, label: 'Melee' },\n\t\t\t\t\t{ value: AutoAttackType.MainHand, label: 'Main Hand' },\n\t\t\t\t\t{ value: AutoAttackType.OffHand, label: 'Off Hand' },\n\t\t\t\t\t{ value: AutoAttackType.Ranged, label: 'Ranged' },\n\t\t\t\t],\n\t\t\t}),\n\t};\n}\n\nfunction autoSwingTypeFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => AutoSwingType.MainHand,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew TextDropdownPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tdefaultLabel: 'None',\n\t\t\t\tequals: (a, b) => a == b,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ value: AutoSwingType.MainHand, label: 'Main Hand' },\n\t\t\t\t\t{ value: AutoSwingType.OffHand, label: 'Off Hand' },\n\t\t\t\t\t{ value: AutoSwingType.Ranged, label: 'Ranged' },\n\t\t\t\t],\n\t\t\t}),\n\t};\n}\n\nfunction executePhaseThresholdFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => ExecutePhaseThreshold.E20,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew TextDropdownPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tdefaultLabel: 'None',\n\t\t\t\tequals: (a, b) => a == b,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ value: ExecutePhaseThreshold.E20, label: '20%' },\n\t\t\t\t\t{ value: ExecutePhaseThreshold.E25, label: '25%' },\n\t\t\t\t\t{ value: ExecutePhaseThreshold.E35, label: '35%' },\n\t\t\t\t],\n\t\t\t}),\n\t};\n}\n\nfunction totemTypeFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => TotemType.Water,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew TextDropdownPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tdefaultLabel: 'None',\n\t\t\t\tequals: (a, b) => a == b,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ value: TotemType.Earth, label: 'Earth' },\n\t\t\t\t\t{ value: TotemType.Air, label: 'Air' },\n\t\t\t\t\t{ value: TotemType.Fire, label: 'Fire' },\n\t\t\t\t\t{ value: TotemType.Water, label: 'Water' },\n\t\t\t\t],\n\t\t\t}),\n\t};\n}\n\nexport function valueFieldConfig(\n\tfield: string,\n\toptions?: Partial<AplHelpers.APLPickerBuilderFieldConfig<any, any>>,\n): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: APLValue.create,\n\t\tfactory: (parent, player, config) => new APLValuePicker(parent, player, config),\n\t\t...(options || {}),\n\t};\n}\n\nexport function valueListFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => [],\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew ListPicker<Player<any>, APLValue | undefined>(parent, player, {\n\t\t\t\t...config,\n\t\t\t\t// Override setValue to replace undefined elements with default messages.\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<APLValue | undefined>) => {\n\t\t\t\t\tconfig.setValue(\n\t\t\t\t\t\teventID,\n\t\t\t\t\t\tplayer,\n\t\t\t\t\t\tnewValue.map(val => val || APLValue.create()),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\titemLabel: 'Value',\n\t\t\t\tnewItem: APLValue.create,\n\t\t\t\tcopyItem: (oldValue: APLValue | undefined) => (oldValue ? APLValue.clone(oldValue) : oldValue),\n\t\t\t\tnewItemPicker: (\n\t\t\t\t\tparent: HTMLElement,\n\t\t\t\t\tlistPicker: ListPicker<Player<any>, APLValue | undefined>,\n\t\t\t\t\tindex: number,\n\t\t\t\t\tconfig: ListItemPickerConfig<Player<any>, APLValue | undefined>,\n\t\t\t\t) => new APLValuePicker(parent, player, config),\n\t\t\t\tallowedActions: ['create', 'delete'],\n\t\t\t\tactions: {\n\t\t\t\t\tcreate: {\n\t\t\t\t\t\tuseIcon: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t};\n}\n\nfunction inputBuilder<T extends APLValueImplType>(config: {\n\tlabel: string;\n\tsubmenu?: Array<string>;\n\tshortDescription: string;\n\tfullDescription?: string;\n\tnewValue: () => T;\n\tincludeIf?: (player: Player<any>, isPrepull: boolean) => boolean;\n\tfields: Array<AplHelpers.APLPickerBuilderFieldConfig<T, keyof T>>;\n}): ValueKindConfig<T> {\n\treturn {\n\t\tlabel: config.label,\n\t\tsubmenu: config.submenu,\n\t\tshortDescription: config.shortDescription,\n\t\tfullDescription: config.fullDescription,\n\t\tnewValue: config.newValue,\n\t\tincludeIf: config.includeIf,\n\t\tfactory: AplHelpers.aplInputBuilder(config.newValue, config.fields),\n\t};\n}\n\nconst valueKindFactories: { [f in NonNullable<APLValueKind>]: ValueKindConfig<APLValueImplTypesUnion[f]> } = {\n\t// Operators\n\tconst: inputBuilder({\n\t\tlabel: 'Const',\n\t\tshortDescription: 'A fixed value.',\n\t\tfullDescription: `\n\t\t<p>\n\t\t\tExamples:\n\t\t\t<ul>\n\t\t\t\t<li><b>Number:</b> '123', '0.5', '-10'</li>\n\t\t\t\t<li><b>Time:</b> '100ms', '5s', '3m'</li>\n\t\t\t\t<li><b>Percentage:</b> '30%'</li>\n\t\t\t</ul>\n\t\t</p>\n\t\t`,\n\t\tnewValue: APLValueConst.create,\n\t\tfields: [AplHelpers.stringFieldConfig('val')],\n\t}),\n\tcmp: inputBuilder({\n\t\tlabel: 'Compare',\n\t\tsubmenu: ['Logic'],\n\t\tshortDescription: 'Compares two values.',\n\t\tnewValue: APLValueCompare.create,\n\t\tfields: [valueFieldConfig('lhs'), comparisonOperatorFieldConfig('op'), valueFieldConfig('rhs')],\n\t}),\n\tmath: inputBuilder({\n\t\tlabel: 'Math',\n\t\tsubmenu: ['Logic'],\n\t\tshortDescription: 'Do basic math on two values.',\n\t\tnewValue: APLValueMath.create,\n\t\tfields: [valueFieldConfig('lhs'), mathOperatorFieldConfig('op'), valueFieldConfig('rhs')],\n\t}),\n\tmax: inputBuilder({\n\t\tlabel: 'Max',\n\t\tsubmenu: ['Logic'],\n\t\tshortDescription: 'Returns the largest value among the subvalues.',\n\t\tnewValue: APLValueMax.create,\n\t\tfields: [valueListFieldConfig('vals')],\n\t}),\n\tmin: inputBuilder({\n\t\tlabel: 'Min',\n\t\tsubmenu: ['Logic'],\n\t\tshortDescription: 'Returns the smallest value among the subvalues.',\n\t\tnewValue: APLValueMin.create,\n\t\tfields: [valueListFieldConfig('vals')],\n\t}),\n\tand: inputBuilder({\n\t\tlabel: 'All of',\n\t\tsubmenu: ['Logic'],\n\t\tshortDescription: 'Returns <b>True</b> if all of the sub-values are <b>True</b>, otherwise <b>False</b>',\n\t\tnewValue: APLValueAnd.create,\n\t\tfields: [valueListFieldConfig('vals')],\n\t}),\n\tor: inputBuilder({\n\t\tlabel: 'Any of',\n\t\tsubmenu: ['Logic'],\n\t\tshortDescription: 'Returns <b>True</b> if any of the sub-values are <b>True</b>, otherwise <b>False</b>',\n\t\tnewValue: APLValueOr.create,\n\t\tfields: [valueListFieldConfig('vals')],\n\t}),\n\tnot: inputBuilder({\n\t\tlabel: 'Not',\n\t\tsubmenu: ['Logic'],\n\t\tshortDescription: 'Returns the opposite of the inner value, i.e. <b>True</b> if the value is <b>False</b> and vice-versa.',\n\t\tnewValue: APLValueNot.create,\n\t\tfields: [valueFieldConfig('val')],\n\t}),\n\n\t// Encounter\n\tcurrentTime: inputBuilder({\n\t\tlabel: 'Current Time',\n\t\tsubmenu: ['Encounter'],\n\t\tshortDescription: 'Elapsed time of the current sim iteration.',\n\t\tnewValue: APLValueCurrentTime.create,\n\t\tfields: [],\n\t}),\n\tcurrentTimePercent: inputBuilder({\n\t\tlabel: 'Current Time (%)',\n\t\tsubmenu: ['Encounter'],\n\t\tshortDescription: 'Elapsed time of the current sim iteration, as a percentage.',\n\t\tnewValue: APLValueCurrentTimePercent.create,\n\t\tfields: [],\n\t}),\n\tremainingTime: inputBuilder({\n\t\tlabel: 'Remaining Time',\n\t\tsubmenu: ['Encounter'],\n\t\tshortDescription: 'Elapsed time of the remaining sim iteration.',\n\t\tnewValue: APLValueRemainingTime.create,\n\t\tfields: [],\n\t}),\n\tremainingTimePercent: inputBuilder({\n\t\tlabel: 'Remaining Time (%)',\n\t\tsubmenu: ['Encounter'],\n\t\tshortDescription: 'Elapsed time of the remaining sim iteration, as a percentage.',\n\t\tnewValue: APLValueRemainingTimePercent.create,\n\t\tfields: [],\n\t}),\n\tisExecutePhase: inputBuilder({\n\t\tlabel: 'Is Execute Phase',\n\t\tsubmenu: ['Encounter'],\n\t\tshortDescription:\n\t\t\t\"<b>True</b> if the encounter is in Execute Phase, meaning the target's health is less than the given threshold, otherwise <b>False</b>.\",\n\t\tnewValue: APLValueIsExecutePhase.create,\n\t\tfields: [executePhaseThresholdFieldConfig('threshold')],\n\t}),\n\tnumberTargets: inputBuilder({\n\t\tlabel: 'Number of Targets',\n\t\tsubmenu: ['Encounter'],\n\t\tshortDescription: 'Count of targets in the current encounter',\n\t\tnewValue: APLValueNumberTargets.create,\n\t\tfields: [],\n\t}),\n\tfrontOfTarget: inputBuilder({\n\t\tlabel: 'Front of Target',\n\t\tsubmenu: ['Encounter'],\n\t\tshortDescription: '<b>True</b> if facing from of target',\n\t\tnewValue: APLValueFrontOfTarget.create,\n\t\tfields: [],\n\t}),\n\n\t// Resources\n\tcurrentHealth: inputBuilder({\n\t\tlabel: 'Health',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Amount of currently available Health.',\n\t\tnewValue: APLValueCurrentHealth.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources')],\n\t}),\n\tcurrentHealthPercent: inputBuilder({\n\t\tlabel: 'Health (%)',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Amount of currently available Health, as a percentage.',\n\t\tnewValue: APLValueCurrentHealthPercent.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources')],\n\t}),\n\tcurrentMana: inputBuilder({\n\t\tlabel: 'Mana',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Amount of currently available Mana.',\n\t\tnewValue: APLValueCurrentMana.create,\n\t\tfields: [],\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() != Class.ClassRogue && player.getClass() != Class.ClassWarrior,\n\t}),\n\tcurrentManaPercent: inputBuilder({\n\t\tlabel: 'Mana (%)',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Amount of currently available Mana, as a percentage.',\n\t\tnewValue: APLValueCurrentManaPercent.create,\n\t\tfields: [],\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() != Class.ClassRogue && player.getClass() != Class.ClassWarrior,\n\t}),\n\tcurrentRage: inputBuilder({\n\t\tlabel: 'Rage',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Amount of currently available Rage.',\n\t\tnewValue: APLValueCurrentRage.create,\n\t\tfields: [],\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassWarrior || player.getClass() == Class.ClassDruid,\n\t}),\n\tcurrentEnergy: inputBuilder({\n\t\tlabel: 'Energy',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Amount of currently available Energy.',\n\t\tnewValue: APLValueCurrentEnergy.create,\n\t\tfields: [],\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassRogue || player.getClass() == Class.ClassDruid,\n\t}),\n\ttimeToEnergyTick: inputBuilder({\n\t\tlabel: 'Time to Next Energy Tick',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Time until the next energy regen tick will happen',\n\t\tnewValue: APLValueTimeToEnergyTick.create,\n\t\tfields: [],\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassRogue || player.getClass() == Class.ClassDruid,\n\t}),\n\tenergyThreshold: inputBuilder({\n\t\tlabel: 'Energy Threshold',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Compares current energy to a threshold value.',\n\t\tnewValue: APLValueEnergyThreshold.create,\n\t\tfields: [\n\t\t\tAplHelpers.numberFieldConfig('threshold', false, {\n\t\t\t\tlabel: '>=',\n\t\t\t\tlabelTooltip: \"Energy threshold. Subtracted from maximum energy if negative.\",\n\t\t\t}),\n\t\t],\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassRogue || player.getClass() == Class.ClassDruid,\n\t}),\n\tcurrentComboPoints: inputBuilder({\n\t\tlabel: 'Combo Points',\n\t\tsubmenu: ['Resources'],\n\t\tshortDescription: 'Amount of currently available Combo Points.',\n\t\tnewValue: APLValueCurrentComboPoints.create,\n\t\tfields: [],\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassRogue || player.getClass() == Class.ClassDruid,\n\t}),\n\n\t// GCD\n\tgcdIsReady: inputBuilder({\n\t\tlabel: 'GCD Is Ready',\n\t\tsubmenu: ['GCD'],\n\t\tshortDescription: '<b>True</b> if the GCD is not on cooldown, otherwise <b>False</b>.',\n\t\tnewValue: APLValueGCDIsReady.create,\n\t\tfields: [],\n\t}),\n\tgcdTimeToReady: inputBuilder({\n\t\tlabel: 'GCD Time To Ready',\n\t\tsubmenu: ['GCD'],\n\t\tshortDescription: 'Amount of time remaining before the GCD comes off cooldown, or <b>0</b> if it is not on cooldown.',\n\t\tnewValue: APLValueGCDTimeToReady.create,\n\t\tfields: [],\n\t}),\n\n\t// Auto attacks\n\tautoTimeToNext: inputBuilder({\n\t\tlabel: 'Time To Next Auto',\n\t\tsubmenu: ['Auto'],\n\t\tshortDescription: 'Amount of time remaining before the next Main-hand or Off-hand melee attack, or <b>0</b> if autoattacks are not engaged.',\n\t\tnewValue: APLValueAutoTimeToNext.create,\n\t\tfields: [autoTypeFieldConfig('autoType')],\n\t}),\n\tautoSwingTime: inputBuilder({\n\t\tlabel: 'Auto Swing Time',\n\t\tsubmenu: ['Auto'],\n\t\tshortDescription: 'Total swing duration including all haste buffs.',\n\t\tnewValue: APLValueAutoSwingTime.create,\n\t\tfields: [autoSwingTypeFieldConfig('autoType')],\n\t}),\n\n\t// Spells\n\tspellIsKnown: inputBuilder({\n\t\tlabel: 'Spell Known',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: '<b>True</b> if the spell is currently known, otherwise <b>False</b>.',\n\t\tnewValue: APLValueSpellIsKnown.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellCurrentCost: inputBuilder({\n\t\tlabel: 'Current Cost',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: 'Returns current resource cost of spell',\n\t\tnewValue: APLValueSpellCurrentCost.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellCanCast: inputBuilder({\n\t\tlabel: 'Can Cast',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: '<b>True</b> if all requirements for casting the spell are currently met, otherwise <b>False</b>.',\n\t\tfullDescription: `\n\t\t\t<p>The <b>Cast Spell</b> action does not need to be conditioned on this, because it applies this check automatically.</p>\n\t\t`,\n\t\tnewValue: APLValueSpellCanCast.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellIsReady: inputBuilder({\n\t\tlabel: 'Is Ready',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: '<b>True</b> if the spell is not on cooldown, otherwise <b>False</b>.',\n\t\tnewValue: APLValueSpellIsReady.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellTimeToReady: inputBuilder({\n\t\tlabel: 'Time To Ready',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: 'Amount of time remaining before the spell comes off cooldown, or <b>0</b> if it is not on cooldown.',\n\t\tnewValue: APLValueSpellTimeToReady.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellCastTime: inputBuilder({\n\t\tlabel: 'Cast Time',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: 'Amount of time to cast the spell including any haste and spell cast time adjustments.',\n\t\tnewValue: APLValueSpellCastTime.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellTravelTime: inputBuilder({\n\t\tlabel: 'Travel Time',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: 'Amount of time for the spell to travel to the target.',\n\t\tnewValue: APLValueSpellTravelTime.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellCpm: inputBuilder({\n\t\tlabel: 'CPM',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: 'Casts Per Minute for the spell so far in the current iteration.',\n\t\tnewValue: APLValueSpellCPM.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', '')],\n\t}),\n\tspellIsChanneling: inputBuilder({\n\t\tlabel: 'Is Channeling',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: '<b>True</b> if this spell is currently being channeled, otherwise <b>False</b>.',\n\t\tnewValue: APLValueSpellIsChanneling.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'channel_spells', '')],\n\t}),\n\tspellChanneledTicks: inputBuilder({\n\t\tlabel: 'Channeled Ticks',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: 'The number of completed ticks in the current channel of this spell, or <b>0</b> if the spell is not being channeled.',\n\t\tnewValue: APLValueSpellChanneledTicks.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'channel_spells', '')],\n\t}),\n\tchannelClipDelay: inputBuilder({\n\t\tlabel: 'Channel Clip Delay',\n\t\tsubmenu: ['Spell'],\n\t\tshortDescription: 'The amount of time specified by the <b>Channel Clip Delay</b> setting.',\n\t\tnewValue: APLValueChannelClipDelay.create,\n\t\tfields: [],\n\t}),\n\n\t// Auras\n\tauraIsKnown: inputBuilder({\n\t\tlabel: 'Aura Known',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription: '<b>True</b> if the aura is currently known, otherwise <b>False</b>.',\n\t\tnewValue: APLValueAuraIsKnown.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources'), AplHelpers.actionIdFieldConfig('auraId', 'auras', 'sourceUnit')],\n\t}),\n\tauraIsActive: inputBuilder({\n\t\tlabel: 'Aura Active',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription: '<b>True</b> if the aura is currently active, otherwise <b>False</b>.',\n\t\tnewValue: APLValueAuraIsActive.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources'), AplHelpers.actionIdFieldConfig('auraId', 'auras', 'sourceUnit')],\n\t}),\n\tauraIsActiveWithReactionTime: inputBuilder({\n\t\tlabel: 'Aura Active (with Reaction Time)',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription:\n\t\t\t'<b>True</b> if the aura is currently active AND it has been active for at least as long as the player reaction time (configured in Settings), otherwise <b>False</b>.',\n\t\tnewValue: APLValueAuraIsActiveWithReactionTime.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources'), AplHelpers.actionIdFieldConfig('auraId', 'auras', 'sourceUnit')],\n\t}),\n\tauraRemainingTime: inputBuilder({\n\t\tlabel: 'Aura Remaining Time',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription: 'Time remaining before this aura will expire, or 0 if the aura is not currently active.',\n\t\tnewValue: APLValueAuraRemainingTime.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources'), AplHelpers.actionIdFieldConfig('auraId', 'auras', 'sourceUnit')],\n\t}),\n\tauraNumStacks: inputBuilder({\n\t\tlabel: 'Aura Num Stacks',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription: 'Number of stacks of the aura.',\n\t\tnewValue: APLValueAuraNumStacks.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources'), AplHelpers.actionIdFieldConfig('auraId', 'stackable_auras', 'sourceUnit')],\n\t}),\n\tauraInternalCooldown: inputBuilder({\n\t\tlabel: 'Aura Remaining ICD',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription: \"Time remaining before this aura's internal cooldown will be ready, or <b>0</b> if the ICD is ready now.\",\n\t\tnewValue: APLValueAuraInternalCooldown.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources'), AplHelpers.actionIdFieldConfig('auraId', 'icd_auras', 'sourceUnit')],\n\t}),\n\tauraIcdIsReadyWithReactionTime: inputBuilder({\n\t\tlabel: 'Aura ICD Is Ready (with Reaction Time)',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription:\n\t\t\t\"<b>True</b> if the aura's ICD is currently ready OR it was put on CD recently, within the player's reaction time (configured in Settings), otherwise <b>False</b>.\",\n\t\tnewValue: APLValueAuraICDIsReadyWithReactionTime.create,\n\t\tfields: [AplHelpers.unitFieldConfig('sourceUnit', 'aura_sources'), AplHelpers.actionIdFieldConfig('auraId', 'icd_auras', 'sourceUnit')],\n\t}),\n\tauraShouldRefresh: inputBuilder({\n\t\tlabel: 'Should Refresh Aura',\n\t\tsubmenu: ['Aura'],\n\t\tshortDescription: 'Whether this aura should be refreshed, e.g. for the purpose of maintaining a debuff.',\n\t\tfullDescription: `\n\t\t<p>This condition checks not only the specified aura but also any other auras on the same unit, including auras applied by other raid members, which apply the same debuff category.</p>\n\t\t<p>For example, 'Should Refresh Debuff(Sunder Armor)' will return <b>False</b> if the unit has an active Expose Armor aura.</p>\n\t\t`,\n\t\tnewValue: () =>\n\t\t\tAPLValueAuraShouldRefresh.create({\n\t\t\t\tmaxOverlap: {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\toneofKind: 'const',\n\t\t\t\t\t\tconst: {\n\t\t\t\t\t\t\tval: '0ms',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.unitFieldConfig('sourceUnit', 'aura_sources_targets_first'),\n\t\t\tAplHelpers.actionIdFieldConfig('auraId', 'exclusive_effect_auras', 'sourceUnit', 'currentTarget'),\n\t\t\tvalueFieldConfig('maxOverlap', {\n\t\t\t\tlabel: 'Overlap',\n\t\t\t\tlabelTooltip: 'Maximum amount of time before the aura expires when it may be refreshed.',\n\t\t\t}),\n\t\t],\n\t}),\n\n\t// Runes\n\truneIsEquipped: inputBuilder({\n\t\tlabel: 'Rune Equipped',\n\t\tsubmenu: ['Rune'],\n\t\tshortDescription: '<b>True</b> if the rune is currently equipped, otherwise <b>False</b>.',\n\t\tnewValue: APLValueRuneIsEquipped.create,\n\t\tfields: [AplHelpers.runeFieldConfig('runeId')],\n\t}),\n\n\t// DoT\n\tdotIsActive: inputBuilder({\n\t\tlabel: 'Dot Is Active',\n\t\tsubmenu: ['DoT'],\n\t\tshortDescription: '<b>True</b> if the specified dot is currently ticking, otherwise <b>False</b>.',\n\t\tnewValue: APLValueDotIsActive.create,\n\t\tfields: [AplHelpers.unitFieldConfig('targetUnit', 'targets'), AplHelpers.actionIdFieldConfig('spellId', 'dot_spells', '')],\n\t}),\n\tdotRemainingTime: inputBuilder({\n\t\tlabel: 'Dot Remaining Time',\n\t\tsubmenu: ['DoT'],\n\t\tshortDescription: 'Time remaining before the last tick of this DoT will occur, or 0 if the DoT is not currently ticking.',\n\t\tnewValue: APLValueDotRemainingTime.create,\n\t\tfields: [AplHelpers.unitFieldConfig('targetUnit', 'targets'), AplHelpers.actionIdFieldConfig('spellId', 'dot_spells', '')],\n\t}),\n\tsequenceIsComplete: inputBuilder({\n\t\tlabel: 'Sequence Is Complete',\n\t\tsubmenu: ['Sequence'],\n\t\tshortDescription: '<b>True</b> if there are no more subactions left to execute in the sequence, otherwise <b>False</b>.',\n\t\tnewValue: APLValueSequenceIsComplete.create,\n\t\tfields: [AplHelpers.stringFieldConfig('sequenceName')],\n\t}),\n\tsequenceIsReady: inputBuilder({\n\t\tlabel: 'Sequence Is Ready',\n\t\tsubmenu: ['Sequence'],\n\t\tshortDescription: '<b>True</b> if the next subaction in the sequence is ready to be executed, otherwise <b>False</b>.',\n\t\tnewValue: APLValueSequenceIsReady.create,\n\t\tfields: [AplHelpers.stringFieldConfig('sequenceName')],\n\t}),\n\tsequenceTimeToReady: inputBuilder({\n\t\tlabel: 'Sequence Time To Ready',\n\t\tsubmenu: ['Sequence'],\n\t\tshortDescription: 'Returns the amount of time remaining until the next subaction in the sequence will be ready.',\n\t\tnewValue: APLValueSequenceTimeToReady.create,\n\t\tfields: [AplHelpers.stringFieldConfig('sequenceName')],\n\t}),\n\n\t// Class/spec specific values\n\ttotemRemainingTime: inputBuilder({\n\t\tlabel: 'Totem Remaining Time',\n\t\tsubmenu: ['Shaman'],\n\t\tshortDescription: 'Returns the amount of time remaining until the totem will expire.',\n\t\tnewValue: APLValueTotemRemainingTime.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassShaman,\n\t\tfields: [totemTypeFieldConfig('totemType')],\n\t}),\n\tcatExcessEnergy: inputBuilder({\n\t\tlabel: 'Excess Energy',\n\t\tsubmenu: ['Feral Druid'],\n\t\tshortDescription: 'Returns the amount of excess energy available, after subtracting energy that will be needed to maintain DoTs.',\n\t\tnewValue: APLValueCatExcessEnergy.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.spec == Spec.SpecFeralDruid,\n\t\tfields: [],\n\t}),\n\tcatNewSavageRoarDuration: inputBuilder({\n\t\tlabel: 'New Savage Roar Duration',\n\t\tsubmenu: ['Feral Druid'],\n\t\tshortDescription: 'Returns duration of savage roar based on current combo points',\n\t\tnewValue: APLValueCatNewSavageRoarDuration.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.spec == Spec.SpecFeralDruid,\n\t\tfields: [],\n\t}),\n\twarlockShouldRecastDrainSoul: inputBuilder({\n\t\tlabel: 'Should Recast Drain Soul',\n\t\tsubmenu: ['Warlock'],\n\t\tshortDescription: 'Returns <b>True</b> if the current Drain Soul channel should be immediately recast, to get a better snapshot.',\n\t\tnewValue: APLValueWarlockShouldRecastDrainSoul.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassWarlock,\n\t\tfields: [],\n\t}),\n\twarlockShouldRefreshCorruption: inputBuilder({\n\t\tlabel: 'Should Refresh Corruption',\n\t\tsubmenu: ['Warlock'],\n\t\tshortDescription: 'Returns <b>True</b> if the current Corruption has expired, or should be refreshed to get a better snapshot.',\n\t\tnewValue: APLValueWarlockShouldRefreshCorruption.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassWarlock,\n\t\tfields: [AplHelpers.unitFieldConfig('targetUnit', 'targets')],\n\t}),\n\twarlockCurrentPetMana: inputBuilder({\n\t\tlabel: 'Pet Mana',\n\t\tsubmenu: ['Warlock'],\n\t\tshortDescription: 'Amount of currently available pet mana.',\n\t\tnewValue: APLValueWarlockCurrentPetMana.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassWarlock,\n\t\tfields: [],\n\t}),\n\twarlockCurrentPetManaPercent: inputBuilder({\n\t\tlabel: 'Pet Mana (%)',\n\t\tsubmenu: ['Warlock'],\n\t\tshortDescription: 'Amount of currently available pet mana, as a percentage.',\n\t\tnewValue: APLValueWarlockCurrentPetManaPercent.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassWarlock,\n\t\tfields: [],\n\t}),\n\tcurrentSealRemainingTime: inputBuilder({\n\t\tlabel: 'Current Seal Remaining Time',\n\t\tsubmenu: ['Paladin'],\n\t\tshortDescription: \"Returns the amount of time remaining until the Paladin's current Seal aura will expire.\",\n\t\tnewValue: APLValueCurrentSealRemainingTime.create,\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.getClass() == Class.ClassPaladin,\n\t\tfields: [],\n\t}),\n};\n","import { itemSwapEnabledSpecs } from '../../individual_sim_ui.js';\nimport { Player } from '../../player.js';\nimport {\n\tAPLAction,\n\tAPLActionActivateAura,\n\tAPLActionActivateAuraWithStacks,\n\tAPLActionAddComboPoints,\n\tAPLActionAutocastOtherCooldowns,\n\tAPLActionCancelAura,\n\tAPLActionCastPaladinPrimarySeal,\n\tAPLActionCastSpell,\n\tAPLActionCatOptimalRotationAction,\n\tAPLActionChangeTarget,\n\tAPLActionChannelSpell,\n\tAPLActionCustomRotation,\n\tAPLActionItemSwap,\n\tAPLActionItemSwap_SwapSet as ItemSwapSet,\n\tAPLActionMove,\n\tAPLActionMultidot,\n\tAPLActionMultishield,\n\tAPLActionResetSequence,\n\tAPLActionSchedule,\n\tAPLActionSequence,\n\tAPLActionStrictSequence,\n\tAPLActionTriggerICD,\n\tAPLActionWait,\n\tAPLActionWaitUntil,\n\tAPLValue,\n} from '../../proto/apl.js';\nimport { Spec } from '../../proto/common.js';\nimport { isHealingSpec } from '../../proto_utils/utils.js';\nimport { EventID } from '../../typed_event.js';\nimport { TextDropdownPicker } from '../dropdown_picker.js';\nimport { Input, InputConfig } from '../input.js';\nimport { ListItemPickerConfig, ListPicker } from '../list_picker.js';\nimport * as AplHelpers from './apl_helpers.js';\nimport * as AplValues from './apl_values.js';\n\nexport interface APLActionPickerConfig extends InputConfig<Player<any>, APLAction> {}\n\nexport type APLActionKind = APLAction['action']['oneofKind'];\ntype APLActionImplStruct<F extends APLActionKind> = Extract<APLAction['action'], { oneofKind: F }>;\ntype APLActionImplTypesUnion = {\n\t[f in NonNullable<APLActionKind>]: f extends keyof APLActionImplStruct<f> ? APLActionImplStruct<f>[f] : never;\n};\nexport type APLActionImplType = APLActionImplTypesUnion[NonNullable<APLActionKind>] | undefined;\n\nexport class APLActionPicker extends Input<Player<any>, APLAction> {\n\tprivate kindPicker: TextDropdownPicker<Player<any>, APLActionKind>;\n\n\tprivate readonly actionDiv: HTMLElement;\n\tprivate currentKind: APLActionKind;\n\tprivate actionPicker: Input<Player<any>, any> | null;\n\n\tprivate readonly conditionPicker: AplValues.APLValuePicker;\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: APLActionPickerConfig) {\n\t\tsuper(parent, 'apl-action-picker-root', player, config);\n\n\t\tthis.conditionPicker = new AplValues.APLValuePicker(this.rootElem, this.modObject, {\n\t\t\tlabel: 'If:',\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (_: Player<any>) => this.getSourceValue()?.condition,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: APLValue | undefined) => {\n\t\t\t\tconst srcVal = this.getSourceValue();\n\t\t\t\tif (srcVal) {\n\t\t\t\t\tsrcVal.condition = newValue;\n\t\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setSourceValue(\n\t\t\t\t\t\teventID,\n\t\t\t\t\t\tAPLAction.create({\n\t\t\t\t\t\t\tcondition: newValue,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis.conditionPicker.rootElem.classList.add('apl-action-condition', 'apl-priority-list-only');\n\n\t\tthis.actionDiv = document.createElement('div');\n\t\tthis.actionDiv.classList.add('apl-action-picker-action');\n\t\tthis.rootElem.appendChild(this.actionDiv);\n\n\t\tconst isPrepull = this.rootElem.closest('.apl-prepull-action-picker') != null;\n\n\t\tconst allActionKinds = (Object.keys(actionKindFactories) as Array<NonNullable<APLActionKind>>).filter(\n\t\t\tactionKind => actionKindFactories[actionKind].includeIf?.(player, isPrepull) ?? true,\n\t\t);\n\n\t\tthis.kindPicker = new TextDropdownPicker(this.actionDiv, player, {\n\t\t\tdefaultLabel: 'Action',\n\t\t\tvalues: allActionKinds.map(actionKind => {\n\t\t\t\tconst factory = actionKindFactories[actionKind];\n\t\t\t\treturn {\n\t\t\t\t\tvalue: actionKind,\n\t\t\t\t\tlabel: factory.label,\n\t\t\t\t\tsubmenu: factory.submenu,\n\t\t\t\t\ttooltip: factory.fullDescription ? `<p>${factory.shortDescription}</p> ${factory.fullDescription}` : factory.shortDescription,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tequals: (a, b) => a == b,\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (_player: Player<any>) => this.getSourceValue()?.action.oneofKind,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newKind: APLActionKind) => {\n\t\t\t\tconst sourceValue = this.getSourceValue();\n\t\t\t\tconst oldKind = sourceValue?.action.oneofKind;\n\t\t\t\tif (oldKind == newKind) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (newKind) {\n\t\t\t\t\tconst factory = actionKindFactories[newKind];\n\t\t\t\t\tlet newSourceValue = this.makeAPLAction(newKind, factory.newValue());\n\t\t\t\t\tif (sourceValue) {\n\t\t\t\t\t\t// Some pre-fill logic when swapping kinds.\n\t\t\t\t\t\tif (oldKind && this.actionPicker) {\n\t\t\t\t\t\t\tif (newKind == 'sequence') {\n\t\t\t\t\t\t\t\tif (sourceValue.action.oneofKind == 'strictSequence') {\n\t\t\t\t\t\t\t\t\t(newSourceValue.action as APLActionImplStruct<'sequence'>).sequence.actions = sourceValue.action.strictSequence.actions;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t(newSourceValue.action as APLActionImplStruct<'sequence'>).sequence.actions = [\n\t\t\t\t\t\t\t\t\t\tthis.makeAPLAction(oldKind, this.actionPicker.getInputValue()),\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (newKind == 'strictSequence') {\n\t\t\t\t\t\t\t\tif (sourceValue.action.oneofKind == 'sequence') {\n\t\t\t\t\t\t\t\t\t(newSourceValue.action as APLActionImplStruct<'strictSequence'>).strictSequence.actions =\n\t\t\t\t\t\t\t\t\t\tsourceValue.action.sequence.actions;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t(newSourceValue.action as APLActionImplStruct<'strictSequence'>).strictSequence.actions = [\n\t\t\t\t\t\t\t\t\t\tthis.makeAPLAction(oldKind, this.actionPicker.getInputValue()),\n\t\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (sourceValue.action.oneofKind == 'sequence' && sourceValue.action.sequence.actions?.[0]?.action.oneofKind == newKind) {\n\t\t\t\t\t\t\t\tnewSourceValue = sourceValue.action.sequence.actions[0];\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tsourceValue.action.oneofKind == 'strictSequence' &&\n\t\t\t\t\t\t\t\tsourceValue.action.strictSequence.actions?.[0]?.action.oneofKind == newKind\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tnewSourceValue = sourceValue.action.strictSequence.actions[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (sourceValue) {\n\t\t\t\t\t\tsourceValue.action = newSourceValue.action;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setSourceValue(eventID, newSourceValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsourceValue.action = {\n\t\t\t\t\t\toneofKind: newKind,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.currentKind = undefined;\n\t\tthis.actionPicker = null;\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): APLAction {\n\t\tconst actionKind = this.kindPicker.getInputValue();\n\t\treturn APLAction.create({\n\t\t\tcondition: this.conditionPicker.getInputValue(),\n\t\t\taction: {\n\t\t\t\toneofKind: actionKind,\n\t\t\t\t...(() => {\n\t\t\t\t\tconst val: any = {};\n\t\t\t\t\tif (actionKind && this.actionPicker) {\n\t\t\t\t\t\tval[actionKind] = this.actionPicker.getInputValue();\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t})(),\n\t\t\t},\n\t\t});\n\t}\n\n\tsetInputValue(newValue: APLAction) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.conditionPicker.setInputValue(newValue.condition || APLValue.create());\n\n\t\tconst newActionKind = newValue.action.oneofKind;\n\t\tthis.updateActionPicker(newActionKind);\n\n\t\tif (newActionKind) {\n\t\t\tthis.actionPicker!.setInputValue((newValue.action as any)[newActionKind]);\n\t\t}\n\t}\n\n\tprivate makeAPLAction<K extends NonNullable<APLActionKind>>(kind: K, implVal: APLActionImplTypesUnion[K]): APLAction {\n\t\tif (!kind) {\n\t\t\treturn APLAction.create();\n\t\t}\n\t\tconst obj: any = { oneofKind: kind };\n\t\tobj[kind] = implVal;\n\t\treturn APLAction.create({ action: obj });\n\t}\n\n\tprivate updateActionPicker(newActionKind: APLActionKind) {\n\t\tconst actionKind = this.currentKind;\n\t\tif (newActionKind == actionKind) {\n\t\t\treturn;\n\t\t}\n\t\tthis.currentKind = newActionKind;\n\n\t\tif (this.actionPicker) {\n\t\t\tthis.actionPicker.rootElem.remove();\n\t\t\tthis.actionPicker = null;\n\t\t}\n\n\t\tif (!newActionKind) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.kindPicker.setInputValue(newActionKind);\n\n\t\tconst factory = actionKindFactories[newActionKind];\n\t\tthis.actionPicker = factory.factory(this.actionDiv, this.modObject, {\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: () => (this.getSourceValue()?.action as any)?.[newActionKind] || factory.newValue(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: any) => {\n\t\t\t\tconst sourceValue = this.getSourceValue();\n\t\t\t\tif (sourceValue) {\n\t\t\t\t\t(sourceValue?.action as any)[newActionKind] = newValue;\n\t\t\t\t}\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.actionPicker.rootElem.classList.add('apl-action-' + newActionKind);\n\t}\n}\n\ntype ActionKindConfig<T> = {\n\tlabel: string;\n\tsubmenu?: Array<string>;\n\tshortDescription: string;\n\tfullDescription?: string;\n\tincludeIf?: (player: Player<any>, isPrepull: boolean) => boolean;\n\tnewValue: () => T;\n\tfactory: (parent: HTMLElement, player: Player<any>, config: InputConfig<Player<any>, T>) => Input<Player<any>, T>;\n};\n\nfunction itemSwapSetFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => ItemSwapSet.Swap1,\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew TextDropdownPicker(parent, player, {\n\t\t\t\t...config,\n\t\t\t\tdefaultLabel: 'None',\n\t\t\t\tequals: (a, b) => a == b,\n\t\t\t\tvalues: [\n\t\t\t\t\t{ value: ItemSwapSet.Main, label: 'Main' },\n\t\t\t\t\t{ value: ItemSwapSet.Swap1, label: 'Swapped' },\n\t\t\t\t],\n\t\t\t}),\n\t};\n}\n\nfunction actionFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: APLValue.create,\n\t\tfactory: (parent, player, config) => new APLActionPicker(parent, player, config),\n\t};\n}\n\nfunction actionListFieldConfig(field: string): AplHelpers.APLPickerBuilderFieldConfig<any, any> {\n\treturn {\n\t\tfield: field,\n\t\tnewValue: () => [],\n\t\tfactory: (parent, player, config) =>\n\t\t\tnew ListPicker<Player<any>, APLAction>(parent, player, {\n\t\t\t\t...config,\n\t\t\t\t// Override setValue to replace undefined elements with default messages.\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<APLAction>) => {\n\t\t\t\t\tconfig.setValue(\n\t\t\t\t\t\teventID,\n\t\t\t\t\t\tplayer,\n\t\t\t\t\t\tnewValue.map(val => val || APLAction.create()),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\titemLabel: 'Action',\n\t\t\t\tnewItem: APLAction.create,\n\t\t\t\tcopyItem: (oldValue: APLAction) => (oldValue ? APLAction.clone(oldValue) : oldValue),\n\t\t\t\tnewItemPicker: (\n\t\t\t\t\tparent: HTMLElement,\n\t\t\t\t\tlistPicker: ListPicker<Player<any>, APLAction>,\n\t\t\t\t\tindex: number,\n\t\t\t\t\tconfig: ListItemPickerConfig<Player<any>, APLAction>,\n\t\t\t\t) => new APLActionPicker(parent, player, config),\n\t\t\t\tallowedActions: ['create', 'delete', 'move'],\n\t\t\t\tactions: {\n\t\t\t\t\tcreate: {\n\t\t\t\t\t\tuseIcon: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t};\n}\n\nfunction inputBuilder<T>(config: {\n\tlabel: string;\n\tsubmenu?: Array<string>;\n\tshortDescription: string;\n\tfullDescription?: string;\n\tincludeIf?: (player: Player<any>, isPrepull: boolean) => boolean;\n\tnewValue: () => T;\n\tfields: Array<AplHelpers.APLPickerBuilderFieldConfig<T, any>>;\n}): ActionKindConfig<T> {\n\treturn {\n\t\tlabel: config.label,\n\t\tsubmenu: config.submenu,\n\t\tshortDescription: config.shortDescription,\n\t\tfullDescription: config.fullDescription,\n\t\tincludeIf: config.includeIf,\n\t\tnewValue: config.newValue,\n\t\tfactory: AplHelpers.aplInputBuilder(config.newValue, config.fields),\n\t};\n}\n\nconst actionKindFactories: { [f in NonNullable<APLActionKind>]: ActionKindConfig<APLActionImplTypesUnion[f]> } = {\n\t['castSpell']: inputBuilder({\n\t\tlabel: 'Cast',\n\t\tshortDescription: 'Casts the spell if possible, i.e. resource/cooldown/GCD/etc requirements are all met.',\n\t\tnewValue: APLActionCastSpell.create,\n\t\tfields: [AplHelpers.actionIdFieldConfig('spellId', 'castable_spells', ''), AplHelpers.unitFieldConfig('target', 'targets')],\n\t}),\n\t['multidot']: inputBuilder({\n\t\tlabel: 'Multi Dot',\n\t\tsubmenu: ['Casting'],\n\t\tshortDescription: 'Keeps a DoT active on multiple targets by casting the specified spell.',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: () =>\n\t\t\tAPLActionMultidot.create({\n\t\t\t\tmaxDots: 3,\n\t\t\t\tmaxOverlap: {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\toneofKind: 'const',\n\t\t\t\t\t\tconst: {\n\t\t\t\t\t\t\tval: '0ms',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.actionIdFieldConfig('spellId', 'dot_spells', ''),\n\t\t\tAplHelpers.numberFieldConfig('maxDots', false, {\n\t\t\t\tlabel: 'Max Dots',\n\t\t\t\tlabelTooltip: 'Maximum number of DoTs to simultaneously apply.',\n\t\t\t}),\n\t\t\tAplValues.valueFieldConfig('maxOverlap', {\n\t\t\t\tlabel: 'Overlap',\n\t\t\t\tlabelTooltip: 'Maximum amount of time before a DoT expires when it may be refreshed.',\n\t\t\t}),\n\t\t],\n\t}),\n\t['multishield']: inputBuilder({\n\t\tlabel: 'Multi Shield',\n\t\tsubmenu: ['Casting'],\n\t\tshortDescription: 'Keeps a Shield active on multiple targets by casting the specified spell.',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull && isHealingSpec(player.spec),\n\t\tnewValue: () =>\n\t\t\tAPLActionMultishield.create({\n\t\t\t\tmaxShields: 3,\n\t\t\t\tmaxOverlap: {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\toneofKind: 'const',\n\t\t\t\t\t\tconst: {\n\t\t\t\t\t\t\tval: '0ms',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.actionIdFieldConfig('spellId', 'shield_spells', ''),\n\t\t\tAplHelpers.numberFieldConfig('maxShields', false, {\n\t\t\t\tlabel: 'Max Shields',\n\t\t\t\tlabelTooltip: 'Maximum number of Shields to simultaneously apply.',\n\t\t\t}),\n\t\t\tAplValues.valueFieldConfig('maxOverlap', {\n\t\t\t\tlabel: 'Overlap',\n\t\t\t\tlabelTooltip: 'Maximum amount of time before a Shield expires when it may be refreshed.',\n\t\t\t}),\n\t\t],\n\t}),\n\t['channelSpell']: inputBuilder({\n\t\tlabel: 'Channel',\n\t\tsubmenu: ['Casting'],\n\t\tshortDescription: 'Channels the spell if possible, i.e. resource/cooldown/GCD/etc requirements are all met.',\n\t\tfullDescription: `\n\t\t\t<p>The difference between channeling a spell vs casting the spell is that channels can be interrupted. If the <b>Interrupt If</b> parameter is empty, this action is equivalent to <b>Cast</b>.</p>\n\t\t\t<p>The channel will be interrupted only if Instant Interrupt is true OR all of the following are true:</p>\n\t\t\t<ul>\n\t\t\t\t<li>Immediately following a tick of the channel</li>\n\t\t\t\t<li>The <b>Interrupt If</b> condition evaluates to <b>True</b></li>\n\t\t\t\t<li>Another action in the APL list is available</li>\n\t\t\t</ul>\n\t\t\t<p>Note that if you simply want to allow other actions to interrupt the channel, set <b>Interrupt If</b> to <b>True</b>.</p>\n\t\t`,\n\t\tnewValue: () =>\n\t\t\tAPLActionChannelSpell.create({\n\t\t\t\tinterruptIf: {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\toneofKind: 'gcdIsReady',\n\t\t\t\t\t\tgcdIsReady: {},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.actionIdFieldConfig('spellId', 'channel_spells', ''),\n\t\t\tAplHelpers.unitFieldConfig('target', 'targets'),\n\t\t\tAplValues.valueFieldConfig('interruptIf', {\n\t\t\t\tlabel: 'Interrupt If',\n\t\t\t\tlabelTooltip: 'Condition which must be true to allow the channel to be interrupted.',\n\t\t\t}),\n\t\t\tAplHelpers.booleanFieldConfig('instantInterrupt', 'Instant Interrupt', {\n\t\t\t\tlabelTooltip: 'If checked, interrupts of this channel will happen instantly after the cast.',\n\t\t\t}),\n\t\t\tAplHelpers.booleanFieldConfig('allowRecast', 'Recast', {\n\t\t\t\tlabelTooltip: 'If checked, interrupts of this channel will recast the spell.',\n\t\t\t}),\n\t\t],\n\t}),\n\t['autocastOtherCooldowns']: inputBuilder({\n\t\tlabel: 'Autocast Other Cooldowns',\n\t\tsubmenu: ['Casting'],\n\t\tshortDescription: 'Auto-casts cooldowns as soon as they are ready.',\n\t\tfullDescription: `\n\t\t\t<ul>\n\t\t\t\t<li>Does not auto-cast cooldowns which are already controlled by other actions in the priority list.</li>\n\t\t\t\t<li>Cooldowns are usually cast immediately upon becoming ready, but there are some basic smart checks in place, e.g. don't use Mana CDs when near full mana.</li>\n\t\t\t</ul>\n\t\t`,\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: APLActionAutocastOtherCooldowns.create,\n\t\tfields: [],\n\t}),\n\t['wait']: inputBuilder({\n\t\tlabel: 'Wait',\n\t\tsubmenu: ['Timing'],\n\t\tshortDescription: 'Pauses all APL actions for a specified amount of time.',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: () =>\n\t\t\tAPLActionWait.create({\n\t\t\t\tduration: {\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\toneofKind: 'const',\n\t\t\t\t\t\tconst: {\n\t\t\t\t\t\t\tval: '1000ms',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\tfields: [AplValues.valueFieldConfig('duration')],\n\t}),\n\t['waitUntil']: inputBuilder({\n\t\tlabel: 'Wait Until',\n\t\tsubmenu: ['Timing'],\n\t\tshortDescription: 'Pauses all APL actions until the specified condition is <b>True</b>.',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: () => APLActionWaitUntil.create(),\n\t\tfields: [AplValues.valueFieldConfig('condition')],\n\t}),\n\t['schedule']: inputBuilder({\n\t\tlabel: 'Scheduled Action',\n\t\tsubmenu: ['Timing'],\n\t\tshortDescription: 'Executes the inner action once at each specified timing.',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: () =>\n\t\t\tAPLActionSchedule.create({\n\t\t\t\tschedule: '0s, 60s',\n\t\t\t\tinnerAction: {\n\t\t\t\t\taction: { oneofKind: 'castSpell', castSpell: {} },\n\t\t\t\t},\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.stringFieldConfig('schedule', {\n\t\t\t\tlabel: 'Do At',\n\t\t\t\tlabelTooltip: 'Comma-separated list of timings. The inner action will be performed once at each timing.',\n\t\t\t}),\n\t\t\tactionFieldConfig('innerAction'),\n\t\t],\n\t}),\n\t['sequence']: inputBuilder({\n\t\tlabel: 'Sequence',\n\t\tsubmenu: ['Sequences'],\n\t\tshortDescription: 'A list of sub-actions to execute in the specified order.',\n\t\tfullDescription: `\n\t\t\t<p>Once one of the sub-actions has been performed, the next sub-action will not necessarily be immediately executed next. The system will restart at the beginning of the whole actions list (not the sequence). If the sequence is executed again, it will perform the next sub-action.</p>\n\t\t\t<p>When all actions have been performed, the sequence does NOT automatically reset; instead, it will be skipped from now on. Use the <b>Reset Sequence</b> action to reset it, if desired.</p>\n\t\t`,\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: APLActionSequence.create,\n\t\tfields: [AplHelpers.stringFieldConfig('name'), actionListFieldConfig('actions')],\n\t}),\n\t['resetSequence']: inputBuilder({\n\t\tlabel: 'Reset Sequence',\n\t\tsubmenu: ['Sequences'],\n\t\tshortDescription: 'Restarts a sequence, so that the next time it executes it will perform its first sub-action.',\n\t\tfullDescription: `\n\t\t\t<p>Use the <b>name</b> field to refer to the sequence to be reset. The desired sequence must have the same (non-empty) value for its <b>name</b>.</p>\n\t\t`,\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: APLActionResetSequence.create,\n\t\tfields: [AplHelpers.stringFieldConfig('sequenceName')],\n\t}),\n\t['strictSequence']: inputBuilder({\n\t\tlabel: 'Strict Sequence',\n\t\tsubmenu: ['Sequences'],\n\t\tshortDescription:\n\t\t\t'Like a regular <b>Sequence</b>, except all sub-actions are executed immediately after each other and the sequence resets automatically upon completion.',\n\t\tfullDescription: `\n\t\t\t<p>Strict Sequences do not begin unless ALL sub-actions are ready.</p>\n\t\t`,\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => !isPrepull,\n\t\tnewValue: APLActionStrictSequence.create,\n\t\tfields: [actionListFieldConfig('actions')],\n\t}),\n\t['changeTarget']: inputBuilder({\n\t\tlabel: 'Change Target',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: 'Sets the current target, which is the target of auto attacks and most casts by default.',\n\t\tnewValue: () => APLActionChangeTarget.create(),\n\t\tfields: [AplHelpers.unitFieldConfig('newTarget', 'targets')],\n\t}),\n\t['activateAura']: inputBuilder({\n\t\tlabel: 'Activate Aura',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: 'Activates an aura',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => isPrepull,\n\t\tnewValue: () => APLActionActivateAura.create(),\n\t\tfields: [AplHelpers.actionIdFieldConfig('auraId', 'auras')],\n\t}),\n\t['activateAuraWithStacks']: inputBuilder({\n\t\tlabel: 'Activate Aura With Stacks',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: 'Activates an aura with the specified number of stacks',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => isPrepull,\n\t\tnewValue: () =>\n\t\t\tAPLActionActivateAuraWithStacks.create({\n\t\t\t\tnumStacks: '1',\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.actionIdFieldConfig('auraId', 'stackable_auras'),\n\t\t\tAplHelpers.stringFieldConfig('numStacks', {\n\t\t\t\tlabel: 'stacks',\n\t\t\t\tlabelTooltip: 'Desired number of initial aura stacks.',\n\t\t\t}),\n\t\t],\n\t}),\n\t['addComboPoints']: inputBuilder({\n\t\tlabel: 'Add Combo Points',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: 'Add combo points to target.',\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => isPrepull,\n\t\tnewValue: () =>\n\t\t\tAPLActionAddComboPoints.create({\n\t\t\t\tnumPoints: '1',\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.stringFieldConfig('numPoints', {\n\t\t\t\tlabelTooltip: 'Desired number of initial combo points.',\n\t\t\t}),\n\t\t],\n\t}),\n\t['cancelAura']: inputBuilder({\n\t\tlabel: 'Cancel Aura',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: 'Deactivates an aura, equivalent to /cancelaura.',\n\t\tnewValue: () => APLActionCancelAura.create(),\n\t\tfields: [AplHelpers.actionIdFieldConfig('auraId', 'auras')],\n\t}),\n\t['triggerIcd']: inputBuilder({\n\t\tlabel: 'Trigger ICD',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: \"Triggers an aura's ICD, putting it on cooldown. Example usage would be to desync an ICD cooldown before combat starts.\",\n\t\tincludeIf: (player: Player<any>, isPrepull: boolean) => isPrepull,\n\t\tnewValue: () => APLActionTriggerICD.create(),\n\t\tfields: [AplHelpers.actionIdFieldConfig('auraId', 'icd_auras')],\n\t}),\n\t['itemSwap']: inputBuilder({\n\t\tlabel: 'Item Swap',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: 'Swaps items, using the swap set specified in Settings.',\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => itemSwapEnabledSpecs.includes(player.spec),\n\t\tnewValue: () => APLActionItemSwap.create(),\n\t\tfields: [itemSwapSetFieldConfig('swapSet')],\n\t}),\n\t['move']: inputBuilder({\n\t\tlabel: 'Move',\n\t\tsubmenu: ['Misc'],\n\t\tshortDescription: 'Starts a move to the desired range from target.',\n\t\tnewValue: () => APLActionMove.create(),\n\t\tfields: [\n\t\t\tAplValues.valueFieldConfig('rangeFromTarget', {\n\t\t\t\tlabel: 'to Range',\n\t\t\t\tlabelTooltip: 'Desired range from target.',\n\t\t\t}),\n\t\t],\n\t}),\n\t['customRotation']: inputBuilder({\n\t\tlabel: 'Custom Rotation',\n\t\t//submenu: ['Misc'],\n\t\tshortDescription: 'INTERNAL ONLY',\n\t\tincludeIf: (_player: Player<any>, _isPrepull: boolean) => false, // Never show this, because its internal only.\n\t\tnewValue: () => APLActionCustomRotation.create(),\n\t\tfields: [],\n\t}),\n\n\t// Class/spec specific actions\n\t['catOptimalRotationAction']: inputBuilder({\n\t\tlabel: 'Optimal Rotation Action',\n\t\tsubmenu: ['Feral Druid'],\n\t\tshortDescription: 'Executes optimized Feral DPS rotation using hardcoded legacy algorithm.',\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.spec == Spec.SpecFeralDruid,\n\t\tnewValue: () =>\n\t\t\tAPLActionCatOptimalRotationAction.create({\n\t\t\t\tminCombosForRip: 3,\n\t\t\t\tmaxWaitTime: 2.0,\n\t\t\t\tmaintainFaerieFire: false,\n\t\t\t\tuseShredTrick: false,\n\t\t\t}),\n\t\tfields: [\n\t\t\tAplHelpers.numberFieldConfig('minCombosForRip', false, {\n\t\t\t\tlabel: 'Min Rip CP',\n\t\t\t\tlabelTooltip: 'Combo Point threshold for allowing a Rip cast',\n\t\t\t}),\n\t\t\tAplHelpers.numberFieldConfig('maxWaitTime', true, {\n\t\t\t\tlabel: 'Max Wait Time',\n\t\t\t\tlabelTooltip: 'Max seconds to wait for an Energy tick to cast rather than powershifting',\n\t\t\t}),\n\t\t\tAplHelpers.booleanFieldConfig('maintainFaerieFire', 'Maintain Faerie Fire', {\n\t\t\t\tlabelTooltip: 'If checked, bundle Faerie Fire refreshes with powershifts. Ignored if an external Faerie Fire debuff is selected in settings.',\n\t\t\t}),\n\t\t\tAplHelpers.booleanFieldConfig('useShredTrick', 'Use Shred Trick', {\n\t\t\t\tlabelTooltip:\n\t\t\t\t\t'If checked, enable the \"Shred trick\" micro-optimization. This should only be used on short fight lengths with full powershifting uptime.',\n\t\t\t}),\n\t\t],\n\t}),\n\t['castPaladinPrimarySeal']: inputBuilder({\n\t\tlabel: 'Cast Primary Seal',\n\t\tsubmenu: ['Paladin'],\n\t\tshortDescription: \"Casts the Paladin's designated primary seal spell.\",\n\t\tincludeIf: (player: Player<any>, _isPrepull: boolean) => player.spec == Spec.SpecRetributionPaladin,\n\t\tnewValue: () => APLActionCastPaladinPrimarySeal.create({}),\n\t\tfields: [],\n\t}),\n};\n","import { Tooltip } from 'bootstrap';\n\nimport { Player } from '../../player.js';\nimport {\n\tAPLAction,\n\tAPLListItem,\n\tAPLPrepullAction,\n\tAPLValue\n} from '../../proto/apl.js';\nimport { EventID, TypedEvent } from '../../typed_event.js';\nimport { ListItemPickerConfig, ListPicker } from '../list_picker.js';\nimport { AdaptiveStringPicker } from '../inputs/string_picker.js';\n\nimport { ActionId } from '../../proto_utils/action_id.js';\nimport { SimUI } from '../../sim_ui.js';\nimport { Component } from '../component.js';\nimport { Input, InputConfig } from '../input.js';\n\nimport { APLActionPicker } from './apl_actions.js';\nimport { APLValueImplStruct } from './apl_values.js';\n\nexport class APLRotationPicker extends Component {\n\tconstructor(parent: HTMLElement, simUI: SimUI, modPlayer: Player<any>) {\n\t\tsuper(parent, 'apl-rotation-picker-root');\n\n\t\tnew ListPicker<Player<any>, APLPrepullAction>(this.rootElem, modPlayer, {\n\t\t\textraCssClasses: ['apl-prepull-action-picker'],\n\t\t\ttitle: 'Prepull Actions',\n\t\t\ttitleTooltip: 'Actions to perform before the pull.',\n\t\t\titemLabel: 'Prepull Action',\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.aplRotation.prepullActions,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<APLPrepullAction>) => {\n\t\t\t\tplayer.aplRotation.prepullActions = newValue;\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tnewItem: () => APLPrepullAction.create({\n\t\t\t\taction: {},\n\t\t\t\tdoAtValue: {\n\t\t\t\t\tvalue: {oneofKind: 'const', const: { val: '-1s' }}\n\t\t\t\t},\n\t\t\t}),\n\t\t\tcopyItem: (oldItem: APLPrepullAction) => APLPrepullAction.clone(oldItem),\n\t\t\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<Player<any>, APLPrepullAction>, index: number, config: ListItemPickerConfig<Player<any>, APLPrepullAction>) => new APLPrepullActionPicker(parent, modPlayer, config, index),\n\t\t\tinlineMenuBar: true,\n\t\t});\n\n\t\tnew ListPicker<Player<any>, APLListItem>(this.rootElem, modPlayer, {\n\t\t\textraCssClasses: ['apl-list-item-picker'],\n\t\t\ttitle: 'Priority List',\n\t\t\ttitleTooltip: 'At each decision point, the simulation will perform the first valid action from this list.',\n\t\t\titemLabel: 'Action',\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.aplRotation.priorityList,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<APLListItem>) => {\n\t\t\t\tplayer.aplRotation.priorityList = newValue;\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tnewItem: () => APLListItem.create({\n\t\t\t\taction: {},\n\t\t\t}),\n\t\t\tcopyItem: (oldItem: APLListItem) => APLListItem.clone(oldItem),\n\t\t\tnewItemPicker: (parent: HTMLElement, listPicker: ListPicker<Player<any>, APLListItem>, index: number, config: ListItemPickerConfig<Player<any>, APLListItem>) => new APLListItemPicker(parent, modPlayer, config, index),\n\t\t\tinlineMenuBar: true,\n\t\t});\n\n\t\t//modPlayer.rotationChangeEmitter.on(() => console.log('APL: ' + APLRotation.toJsonString(modPlayer.aplRotation)))\n\t}\n}\n\nclass APLPrepullActionPicker extends Input<Player<any>, APLPrepullAction> {\n\tprivate readonly player: Player<any>;\n\n\tprivate readonly hidePicker: Input<Player<any>, boolean>;\n\tprivate readonly doAtPicker: Input<Player<any>, string>;\n\tprivate readonly actionPicker: APLActionPicker;\n\n\tprivate getItem(): APLPrepullAction {\n\t\treturn this.getSourceValue() || APLPrepullAction.create({\n\t\t\taction: {},\n\t\t});\n\t}\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: ListItemPickerConfig<Player<any>, APLPrepullAction>, index: number) {\n\t\tconfig.enableWhen = () => !this.getItem().hide;\n\t\tsuper(parent, 'apl-list-item-picker-root', player, config);\n\t\tthis.player = player;\n\n\t\tconst itemHeaderElem = ListPicker.getItemHeaderElem(this);\n\t\tmakeListItemWarnings(itemHeaderElem, player, player => player.getCurrentStats().rotationStats?.prepullActions[index]?.warnings || []);\n\n\t\tthis.hidePicker = new HidePicker(itemHeaderElem, player, {\n\t\t\tchangedEvent: () => this.player.rotationChangeEmitter,\n\t\t\tgetValue: () => this.getItem().hide,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: boolean) => {\n\t\t\t\tthis.getItem().hide = newValue;\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.doAtPicker = new AdaptiveStringPicker(this.rootElem, this.player, {\n\t\t\tlabel: 'Do At',\n\t\t\tlabelTooltip: 'Time before pull to do the action. Should be negative, and formatted like, \\'-1s\\' or \\'-2500ms\\'.',\n\t\t\textraCssClasses: ['apl-prepull-actions-doat'],\n\t\t\tchangedEvent: () => this.player.rotationChangeEmitter,\n\t\t\tgetValue: () => (this.getItem().doAtValue?.value as APLValueImplStruct<'const'>|undefined)?.const.val || '',\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: string) => {\n\t\t\t\tif (newValue) {\n\t\t\t\t\tthis.getItem().doAtValue = APLValue.create({\n\t\t\t\t\t\tvalue: {oneofKind: 'const', const: { val: newValue }}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.getItem().doAtValue = undefined;\n\t\t\t\t}\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tinline: true,\n\t\t});\n\t\t//this.doAtPicker = new APLValuePicker(this.rootElem, this.player, {\n\t\t//\tlabel: 'Do At',\n\t\t//\tlabelTooltip: 'Time before pull to do the action. Should be negative, and formatted like, \\'-1s\\' or \\'-2500ms\\'.',\n\t\t//\textraCssClasses: ['apl-prepull-actions-doat'],\n\t\t//\tchangedEvent: () => this.player.rotationChangeEmitter,\n\t\t//\tgetValue: () => this.getItem().doAtValue,\n\t\t//\tsetValue: (eventID: EventID, player: Player<any>, newValue: APLValue | undefined) => {\n\t\t//\t\tthis.getItem().doAtValue = newValue;\n\t\t//\t\tthis.player.rotationChangeEmitter.emit(eventID);\n\t\t//\t},\n\t\t//\tinline: true,\n\t\t//});\n\n\t\tthis.actionPicker = new APLActionPicker(this.rootElem, this.player, {\n\t\t\tchangedEvent: () => this.player.rotationChangeEmitter,\n\t\t\tgetValue: () => this.getItem().action!,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: APLAction) => {\n\t\t\t\tthis.getItem().action = newValue;\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): APLPrepullAction {\n\t\tconst item = APLPrepullAction.create({\n\t\t\thide: this.hidePicker.getInputValue(),\n\t\t\tdoAtValue: {\n\t\t\t\tvalue: {oneofKind: 'const', const: { val: this.doAtPicker.getInputValue() }},\n\t\t\t},\n\t\t\taction: this.actionPicker.getInputValue(),\n\t\t});\n\t\treturn item;\n\t}\n\n\tsetInputValue(newValue: APLPrepullAction) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hidePicker.setInputValue(newValue.hide);\n\t\tthis.doAtPicker.setInputValue((newValue.doAtValue?.value as APLValueImplStruct<'const'>|undefined)?.const.val || '');\n\t\tthis.actionPicker.setInputValue(newValue.action || APLAction.create());\n\t}\n}\n\nclass APLListItemPicker extends Input<Player<any>, APLListItem> {\n\tprivate readonly player: Player<any>;\n\n\tprivate readonly hidePicker: Input<Player<any>, boolean>;\n\tprivate readonly actionPicker: APLActionPicker;\n\n\tprivate getItem(): APLListItem {\n\t\treturn this.getSourceValue() || APLListItem.create({\n\t\t\taction: {},\n\t\t});\n\t}\n\n\tconstructor(parent: HTMLElement, player: Player<any>, config: ListItemPickerConfig<Player<any>, APLListItem>, index: number) {\n\t\tconfig.enableWhen = () => !this.getItem().hide;\n\t\tsuper(parent, 'apl-list-item-picker-root', player, config);\n\t\tthis.player = player;\n\n\t\tconst itemHeaderElem = ListPicker.getItemHeaderElem(this);\n\t\tmakeListItemWarnings(itemHeaderElem, player, player => player.getCurrentStats().rotationStats?.priorityList[index]?.warnings || []);\n\n\t\tthis.hidePicker = new HidePicker(itemHeaderElem, player, {\n\t\t\tchangedEvent: () => this.player.rotationChangeEmitter,\n\t\t\tgetValue: () => this.getItem().hide,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: boolean) => {\n\t\t\t\tthis.getItem().hide = newValue;\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.actionPicker = new APLActionPicker(this.rootElem, this.player, {\n\t\t\tchangedEvent: () => this.player.rotationChangeEmitter,\n\t\t\tgetValue: () => this.getItem().action!,\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: APLAction) => {\n\t\t\t\tthis.getItem().action = newValue;\n\t\t\t\tthis.player.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\n\tgetInputValue(): APLListItem {\n\t\tconst item = APLListItem.create({\n\t\t\thide: this.hidePicker.getInputValue(),\n\t\t\taction: this.actionPicker.getInputValue(),\n\t\t});\n\t\treturn item;\n\t}\n\n\tsetInputValue(newValue: APLListItem) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis.hidePicker.setInputValue(newValue.hide);\n\t\tthis.actionPicker.setInputValue(newValue.action || APLAction.create());\n\t}\n}\n\nfunction makeListItemWarnings(itemHeaderElem: HTMLElement, player: Player<any>, getWarnings: (player: Player<any>) => Array<string>) {\n\tconst warningsElem = ListPicker.makeActionElem('apl-warnings', 'fa-exclamation-triangle');\n\twarningsElem.classList.add('warning', 'link-warning');\n\twarningsElem.setAttribute('data-bs-html', 'true');\n\tconst warningsTooltip = Tooltip.getOrCreateInstance(warningsElem, {\n\t\tcustomClass: 'dropdown-tooltip',\n\t\ttitle: 'Warnings',\n\t\thtml: true,\n\t});\n\titemHeaderElem.appendChild(warningsElem);\n\n\tconst updateWarnings = async () => {\n\t\twarningsTooltip.setContent({ '.tooltip-inner': '' });\n\t\tconst warnings = getWarnings(player);\n\t\tif (warnings.length == 0) {\n\t\t\twarningsElem.style.visibility = 'hidden';\n\t\t} else {\n\t\t\twarningsElem.style.visibility = 'visible';\n\t\t\tconst formattedWarnings = await Promise.all(warnings.map(w => ActionId.replaceAllInString(w)));\n\t\t\twarningsTooltip.setContent({\n\t\t\t\t'.tooltip-inner': `\n\t\t\t\t<p>This action has warnings, and might not behave as expected.</p>\n\t\t\t\t<ul>\n\t\t\t\t\t${formattedWarnings.map(w => `<li>${w}</li>`).join('')}\n\t\t\t\t</ul>\n\t\t\t`});\n\t\t}\n\t};\n\tupdateWarnings();\n\tplayer.currentStatsEmitter.on(updateWarnings);\n}\n\nclass HidePicker extends Input<Player<any>, boolean> {\n\tprivate readonly inputElem: HTMLElement;\n\tprivate readonly iconElem: HTMLElement;\n\tprivate tooltip: Tooltip;\n\n\tconstructor(parent: HTMLElement, modObject: Player<any>, config: InputConfig<Player<any>, boolean>) {\n\t\tsuper(parent, 'hide-picker-root', modObject, config);\n\n\t\tthis.inputElem = ListPicker.makeActionElem('hide-picker-button', 'fa-eye');\n\t\tthis.iconElem = this.inputElem.childNodes[0] as HTMLElement;\n\t\tthis.rootElem.appendChild(this.inputElem);\n\t\tthis.tooltip = Tooltip.getOrCreateInstance(this.inputElem, { title: 'Enable/Disable' });\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('click', () => {\n\t\t\tthis.setInputValue(!this.getInputValue());\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): boolean {\n\t\treturn this.iconElem.classList.contains('fa-eye-slash');\n\t}\n\n\tsetInputValue(newValue: boolean) {\n\t\tif (newValue) {\n\t\t\tthis.iconElem.classList.add('fa-eye-slash');\n\t\t\tthis.iconElem.classList.remove('fa-eye');\n\t\t\tthis.tooltip.setContent({ '.tooltip-inner': 'Enable Action' });\n\t\t} else {\n\t\t\tthis.iconElem.classList.add('fa-eye');\n\t\t\tthis.iconElem.classList.remove('fa-eye-slash');\n\t\t\tthis.tooltip.setContent({ '.tooltip-inner': 'Disable Action' });\n\t\t}\n\t}\n}","import { EventID, TypedEvent } from '../typed_event.js';\nimport { arrayEquals } from '../utils.js';\n\nimport { Input, InputConfig } from './input.js';\n\n/**\n * Data for creating a number list picker.\n */\nexport interface NumberListPickerConfig<ModObject> extends InputConfig<ModObject, Array<number>> {\n\tplaceholder?: string,\n}\n\n// UI element for picking an arbitrary number list field.\nexport class NumberListPicker<ModObject> extends Input<ModObject, Array<number>> {\n\tprivate readonly inputElem: HTMLInputElement;\n\n\tconstructor(parent: HTMLElement, modObject: ModObject, config: NumberListPickerConfig<ModObject>) {\n\t\tsuper(parent, 'number-list-picker-root', modObject, config);\n\n\t\tthis.inputElem = document.createElement('input');\n\t\tthis.inputElem.type = 'text';\n\t\tthis.inputElem.placeholder = config.placeholder || '';\n\t\tthis.inputElem.classList.add('number-list-picker-input', 'form-control');\n\t\tthis.rootElem.appendChild(this.inputElem);\n\n\t\tthis.init();\n\n\t\tthis.inputElem.addEventListener('change', event => {\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\n\t\t});\n\t}\n\n\tgetInputElem(): HTMLElement {\n\t\treturn this.inputElem;\n\t}\n\n\tgetInputValue(): Array<number> {\n\t\tconst str = this.inputElem.value;\n\t\tif (!str) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn str.split(',').map(parseFloat).filter(val => !isNaN(val));\n\t}\n\n\tsetInputValue(newValue: Array<number>) {\n\t\tif (arrayEquals(this.getInputValue(), newValue)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputElem.value = newValue.map(v => String(v)).join(',');\n\t}\n}\n","import { Component } from '../component.js';\nimport { IconEnumPicker, IconEnumValueConfig } from '../icon_enum_picker.js';\nimport { NumberListPicker } from '../number_list_picker.js';\nimport { Player } from '../../player.js';\nimport { EventID, TypedEvent } from '../../typed_event.js';\nimport { ActionID as ActionIdProto } from '../../proto/common.js';\nimport { Cooldown } from '../../proto/common.js';\nimport { ActionId } from '../../proto_utils/action_id.js';\nimport { Tooltip } from 'bootstrap';\n\nexport class CooldownsPicker extends Component {\n\treadonly player: Player<any>;\n\n\tprivate cooldownPickers: Array<HTMLElement>;\n\n\tconstructor(parentElem: HTMLElement, player: Player<any>) {\n\t\tsuper(parentElem, 'cooldowns-picker-root');\n\t\tthis.player = player;\n\t\tthis.cooldownPickers = [];\n\n\t\tTypedEvent.onAny([this.player.rotationChangeEmitter, this.player.sim.unitMetadataEmitter]).on(_eventID => {\n\t\t\tthis.update();\n\t\t});\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tthis.rootElem.innerHTML = '';\n\t\tconst cooldowns = this.player.getSimpleCooldowns().cooldowns;\n\n\t\tthis.cooldownPickers = [];\n\t\tfor (let i = 0; i < cooldowns.length + 1; i++) {\n\t\t\tconst cooldown = cooldowns[i];\n\n\t\t\tconst row = document.createElement('div');\n\t\t\trow.classList.add('cooldown-picker');\n\t\t\tif (i == cooldowns.length) {\n\t\t\t\trow.classList.add('add-cooldown-picker');\n\t\t\t}\n\t\t\tthis.rootElem.appendChild(row);\n\n\t\t\tconst _actionPicker = this.makeActionPicker(row, i);\n\n\t\t\tconst label = document.createElement('label');\n\t\t\tlabel.classList.add('cooldown-picker-label', 'form-label');\n\t\t\tif (cooldown && cooldown.id) {\n\t\t\t\tActionId.fromProto(cooldown.id).fill(this.player.getRaidIndex()).then(filledId => label.textContent = filledId.name);\n\t\t\t}\n\t\t\trow.appendChild(label);\n\n\t\t\tconst _timingsPicker = this.makeTimingsPicker(row, i);\n\n\t\t\tlet deleteButtonFragment = document.createElement('fragment');\n\t\t\tdeleteButtonFragment.innerHTML = `\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclass=\"delete-cooldown link-danger\"\n\t\t\t\t\trole=\"button\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"fa fa-times fa-xl\"></i>\n\t\t\t\t</a>\n\t\t\t`\n\t\t\tconst deleteButton = deleteButtonFragment.children[0] as HTMLElement;\n\t\t\tconst deleteButtonTooltip = Tooltip.getOrCreateInstance(deleteButton, {title: 'Delete Cooldown'});\n\t\t\tdeleteButton.addEventListener('click', _event => {\n\t\t\t\tconst newCooldowns = this.player.getSimpleCooldowns();\n\t\t\t\tnewCooldowns.cooldowns.splice(i, 1);\n\t\t\t\tthis.player.setSimpleCooldowns(TypedEvent.nextEventID(), newCooldowns);\n\t\t\t\tdeleteButtonTooltip.hide();\n\t\t\t});\n\t\t\trow.appendChild(deleteButton);\n\n\t\t\tthis.cooldownPickers.push(row);\n\t\t}\n\t}\n\n\tprivate makeActionPicker(parentElem: HTMLElement, cooldownIndex: number): IconEnumPicker<Player<any>, ActionIdProto> {\n\t\tconst availableCooldowns = this.player.getMetadata().getSpells().filter(spell => spell.data.isMajorCooldown).map(spell => spell.id);\n\n\t\tconst actionPicker = new IconEnumPicker<Player<any>, ActionIdProto>(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-action-picker',\n\t\t\t],\n\t\t\tnumColumns: 3,\n\t\t\tvalues: ([\n\t\t\t\t{ color: '#grey', value: ActionIdProto.create() },\n\t\t\t] as Array<IconEnumValueConfig<Player<any>, ActionIdProto>>).concat(availableCooldowns.map(cooldownAction => {\n\t\t\t\treturn { actionId: () => cooldownAction, value: cooldownAction.toProto() };\n\t\t\t})),\n\t\t\tequals: (a: ActionIdProto, b: ActionIdProto) => ActionIdProto.equals(a, b),\n\t\t\tzeroValue: ActionIdProto.create(),\n\t\t\tbackupIconUrl: (value: ActionIdProto) => ActionId.fromProto(value),\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getSimpleCooldowns().cooldowns[cooldownIndex]?.id || ActionIdProto.create(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: ActionIdProto) => {\n\t\t\t\tconst newCooldowns = player.getSimpleCooldowns();\n\n\t\t\t\twhile (newCooldowns.cooldowns.length < cooldownIndex) {\n\t\t\t\t\tnewCooldowns.cooldowns.push(Cooldown.create());\n\t\t\t\t}\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex] = Cooldown.create({\n\t\t\t\t\tid: newValue,\n\t\t\t\t\ttimings: [],\n\t\t\t\t});\n\n\t\t\t\tplayer.setSimpleCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n\n\tprivate makeTimingsPicker(parentElem: HTMLElement, cooldownIndex: number): NumberListPicker<Player<any>> {\n\t\tconst actionPicker = new NumberListPicker(parentElem, this.player, {\n\t\t\textraCssClasses: [\n\t\t\t\t'cooldown-timings-picker',\n\t\t\t],\n\t\t\tplaceholder: '20, 40, ...',\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => {\n\t\t\t\treturn player.getSimpleCooldowns().cooldowns[cooldownIndex]?.timings || [];\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: Array<number>) => {\n\t\t\t\tconst newCooldowns = player.getSimpleCooldowns();\n\t\t\t\tnewCooldowns.cooldowns[cooldownIndex].timings = newValue;\n\t\t\t\tplayer.setSimpleCooldowns(eventID, newCooldowns);\n\t\t\t},\n\t\t\tenableWhen: (player: Player<any>) => {\n\t\t\t\tconst curCooldown = player.getSimpleCooldowns().cooldowns[cooldownIndex];\n\t\t\t\treturn curCooldown && !ActionIdProto.equals(curCooldown.id, ActionIdProto.create());\n\t\t\t},\n\t\t});\n\t\treturn actionPicker;\n\t}\n}\n","import * as Tooltips from '../../constants/tooltips.js';\nimport { IndividualSimUI, InputSection } from \"../../individual_sim_ui\";\nimport { Player } from \"../../player\";\nimport {\n\tAPLRotation,\n\tAPLRotation_Type as APLRotationType,\n} from \"../../proto/apl\";\nimport {\n\tSpec,\n} from \"../../proto/common\";\nimport {\n\tSavedRotation,\n} from \"../../proto/ui\";\nimport { EventID, TypedEvent } from \"../../typed_event\";\nimport { BooleanPicker } from \"../boolean_picker\";\nimport { ContentBlock } from \"../content_block\";\nimport { EnumPicker } from \"../enum_picker\";\nimport * as IconInputs from '../icon_inputs.js';\nimport { Input } from \"../input\";\nimport { NumberPicker } from \"../number_picker\";\nimport { SavedDataManager } from \"../saved_data_manager\";\nimport { SimTab } from \"../sim_tab\";\nimport { APLRotationPicker } from \"./apl_rotation_picker\";\nimport { CooldownsPicker } from \"./cooldowns_picker\";\n\nexport class RotationTab extends SimTab {\n\tprotected simUI: IndividualSimUI<Spec>;\n\n\treadonly leftPanel: HTMLElement;\n\treadonly rightPanel: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n\t\tsuper(parentElem, simUI, { identifier: 'rotation-tab', title: 'Rotation' });\n\t\tthis.simUI = simUI;\n\n\t\tthis.leftPanel = document.createElement('div');\n\t\tthis.leftPanel.classList.add('rotation-tab-left', 'tab-panel-left');\n\n\t\tthis.rightPanel = document.createElement('div');\n\t\tthis.rightPanel.classList.add('rotation-tab-right', 'tab-panel-right');\n\n\t\tthis.contentContainer.appendChild(this.leftPanel);\n\t\tthis.contentContainer.appendChild(this.rightPanel);\n\n\t\tthis.buildTabContent();\n\n\t\tthis.updateSections();\n\t\tthis.simUI.player.rotationChangeEmitter.on(() => this.updateSections());\n\t}\n\n\tprotected buildTabContent() {\n\t\tthis.buildHeader();\n\n\t\tthis.buildAutoContent();\n\t\tthis.buildAplContent();\n\t\tthis.buildSimpleContent();\n\n\t\tthis.buildSavedDataPickers();\n\t}\n\n\tprivate updateSections() {\n\t\tthis.rootElem.classList.remove('rotation-type-auto');\n\t\tthis.rootElem.classList.remove('rotation-type-simple');\n\t\tthis.rootElem.classList.remove('rotation-type-apl');\n\t\tthis.rootElem.classList.remove('rotation-type-legacy');\n\n\t\tconst rotType = this.simUI.player.getRotationType();\n\t\tif (rotType == APLRotationType.TypeAuto) {\n\t\t\tthis.rootElem.classList.add('rotation-type-auto');\n\t\t} else if (rotType == APLRotationType.TypeSimple) {\n\t\t\tthis.rootElem.classList.add('rotation-type-simple');\n\t\t} else if (rotType == APLRotationType.TypeAPL) {\n\t\t\tthis.rootElem.classList.add('rotation-type-apl');\n\t\t} else if (rotType == APLRotationType.TypeLegacy) {\n\t\t\tthis.rootElem.classList.add('rotation-type-legacy');\n\t\t}\n\t}\n\n\tprivate buildHeader() {\n\t\tconst header = document.createElement('div');\n\t\theader.classList.add('rotation-tab-header');\n\t\tthis.leftPanel.appendChild(header);\n\n\t\tnew EnumPicker(header, this.simUI.player, {\n\t\t\tlabel: 'Rotation Type',\n\t\t\tlabelTooltip: 'Which set of options to use for specifying the rotation.',\n\t\t\tinline: true,\n\t\t\tvalues: this.simUI.player.hasSimpleRotationGenerator() ? [\n\t\t\t\t{ value: APLRotationType.TypeAuto, name: 'Auto' },\n\t\t\t\t{ value: APLRotationType.TypeSimple, name: 'Simple' },\n\t\t\t\t{ value: APLRotationType.TypeAPL, name: 'APL' },\n\t\t\t] : [\n\t\t\t\t{ value: APLRotationType.TypeAuto, name: 'Auto' },\n\t\t\t\t{ value: APLRotationType.TypeAPL, name: 'APL' },\n\t\t\t],\n\t\t\tchangedEvent: (player: Player<any>) => player.rotationChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getRotationType(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tplayer.aplRotation.type = newValue;\n\t\t\t\tplayer.rotationChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate buildAutoContent() {\n\t\tconst content = document.createElement('div');\n\t\tcontent.classList.add('rotation-tab-auto');\n\t\tthis.leftPanel.appendChild(content);\n\t}\n\n\tprivate buildAplContent() {\n\t\tconst content = document.createElement('div');\n\t\tcontent.classList.add('rotation-tab-apl');\n\t\tthis.leftPanel.appendChild(content);\n\n\t\tnew APLRotationPicker(content, this.simUI, this.simUI.player);\n\t}\n\n\tprivate buildSimpleContent() {\n\t\tif (!this.simUI.player.hasSimpleRotationGenerator() || !this.simUI.individualConfig.rotationInputs) {\n\t\t\treturn;\n\t\t}\n\t\tconst cssClass = 'rotation-tab-simple';\n\n\t\tconst contentBlock = new ContentBlock(this.leftPanel, 'rotation-settings', {\n\t\t\theader: { title: 'Rotation' }\n\t\t});\n\t\tcontentBlock.rootElem.classList.add(cssClass);\n\n\t\tconst rotationIconGroup = Input.newGroupContainer();\n\t\trotationIconGroup.classList.add('rotation-icon-group', 'icon-group');\n\t\tcontentBlock.bodyElement.appendChild(rotationIconGroup);\n\n\t\tif (this.simUI.individualConfig.rotationIconInputs?.length) {\n\t\t\tthis.configureIconSection(\n\t\t\t\trotationIconGroup,\n\t\t\t\tthis.simUI.individualConfig.rotationIconInputs.map(iconInput => IconInputs.buildIconInput(rotationIconGroup, this.simUI.player, iconInput)),\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\n\t\tthis.configureInputSection(contentBlock.bodyElement, this.simUI.individualConfig.rotationInputs);\n\n\t\tcontentBlock.bodyElement.querySelectorAll('.input-root').forEach(elem => {\n\t\t\telem.classList.add('input-inline');\n\t\t})\n\n\t\tconst cooldownsContentBlock = new ContentBlock(this.leftPanel, 'cooldown-settings', {\n\t\t\theader: { title: 'Cooldowns', tooltip: Tooltips.COOLDOWNS_SECTION }\n\t\t});\n\t\tcooldownsContentBlock.rootElem.classList.add(cssClass);\n\n\t\tnew CooldownsPicker(cooldownsContentBlock.bodyElement, this.simUI.player);\n\t}\n\n\tprivate configureInputSection(sectionElem: HTMLElement, sectionConfig: InputSection) {\n\t\tsectionConfig.inputs.forEach(inputConfig => {\n\t\t\tif (inputConfig.type == 'number') {\n\t\t\t\tnew NumberPicker(sectionElem, this.simUI.player, inputConfig);\n\t\t\t} else if (inputConfig.type == 'boolean') {\n\t\t\t\tnew BooleanPicker(sectionElem, this.simUI.player, { ...inputConfig });\n\t\t\t} else if (inputConfig.type == 'enum') {\n\t\t\t\tnew EnumPicker(sectionElem, this.simUI.player, inputConfig);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate configureIconSection(sectionElem: HTMLElement, iconPickers: Array<any>, adjustColumns?: boolean) {\n\t\tif (iconPickers.length == 0) {\n\t\t\tsectionElem.classList.add('hide');\n\t\t} else if (adjustColumns) {\n\t\t\tif (iconPickers.length <= 4) {\n\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${iconPickers.length}, 1fr)`;\n\t\t\t} else if (iconPickers.length > 4 && iconPickers.length < 8) {\n\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${Math.ceil(iconPickers.length / 2)}, 1fr)`;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate buildSavedDataPickers() {\n\t\tconst savedRotationsManager = new SavedDataManager<Player<any>, SavedRotation>(this.rightPanel, this.simUI.player, {\n\t\t\tlabel: 'Rotation',\n\t\t\theader: { title: 'Saved Rotations' },\n\t\t\tstorageKey: this.simUI.getSavedRotationStorageKey(),\n\t\t\tgetData: (player: Player<any>) => SavedRotation.create({\n\t\t\t\trotation: APLRotation.clone(player.aplRotation),\n\t\t\t}),\n\t\t\tsetData: (eventID: EventID, player: Player<any>, newRotation: SavedRotation) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setAplRotation(eventID, newRotation.rotation || APLRotation.create());\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.simUI.player.rotationChangeEmitter, this.simUI.player.talentsChangeEmitter, this.simUI.player.levelChangeEmitter],\n\t\t\tequals: (a: SavedRotation, b: SavedRotation) => {\n\t\t\t\t// Uncomment this to debug equivalence checks with preset rotations (e.g. the chip doesn't highlight)\n\t\t\t\t//console.log(`Rot A: ${SavedRotation.toJsonString(a, {prettySpaces: 2})}\\n\\nRot B: ${SavedRotation.toJsonString(b, {prettySpaces: 2})}`);\n\t\t\t\treturn SavedRotation.equals(a, b);\n\t\t\t},\n\t\t\ttoJson: (a: SavedRotation) => SavedRotation.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedRotation.fromJson(obj),\n\t\t});\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedRotationsManager.loadUserData();\n\t\t\t(this.simUI.individualConfig.presets.rotations || []).forEach(presetRotation => {\n\t\t\t\tconst rotData = presetRotation.rotation;\n\t\t\t\t// Fill default values so the equality checks always work.\n\t\t\t\tif (!rotData.rotation) rotData.rotation = APLRotation.create();\n\n\t\t\t\tsavedRotationsManager.addSavedData({\n\t\t\t\t\tname: presetRotation.name,\n\t\t\t\t\ttooltip: presetRotation.tooltip,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: rotData,\n\t\t\t\t\tenableWhen: presetRotation.enableWhen,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n","import { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker } from '../components/enum_picker.js';\nimport { ListItemPickerConfig, ListPicker } from '../components/list_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport * as Mechanics from '../constants/mechanics.js';\nimport { Encounter } from '../encounter.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { InputType, MobType, SpellSchool, Stat, Target, Target as TargetProto, TargetInput } from '../proto/common.js';\nimport { statNames } from '../proto_utils/names.js';\nimport { Stats } from '../proto_utils/stats.js';\nimport { isHealingSpec, isTankSpec } from '../proto_utils/utils.js';\nimport { Raid } from '../raid.js';\nimport { SimUI } from '../sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BaseModal } from './base_modal.js';\nimport { Component } from './component.js';\nimport { Input } from './input.js';\n\nexport interface EncounterPickerConfig {\n\tshowExecuteProportion: boolean;\n}\n\nexport class EncounterPicker extends Component {\n\tconstructor(parent: HTMLElement, modEncounter: Encounter, config: EncounterPickerConfig, simUI: SimUI) {\n\t\tsuper(parent, 'encounter-picker-root');\n\n\t\taddEncounterFieldPickers(this.rootElem, modEncounter, config.showExecuteProportion);\n\n\t\t// Need to wait so that the encounter and target presets will be loaded.\n\t\tmodEncounter.sim.waitForInit().then(() => {\n\t\t\tconst presetTargets = modEncounter.sim.db.getAllPresetTargets();\n\n\t\t\tnew EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t\textraCssClasses: ['damage-metrics', 'npc-picker'],\n\t\t\t\tlabel: 'NPC',\n\t\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\t\tvalues: [{ name: 'Custom', value: -1 }].concat(\n\t\t\t\t\tpresetTargets.map((pe, i) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: pe.path,\n\t\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => presetTargets.findIndex(pe => equalTargetsIgnoreInputs(encounter.primaryTarget, pe.target)),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\tif (newValue != -1) {\n\t\t\t\t\t\tencounter.applyPresetTarget(eventID, presetTargets[newValue], 0);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t//new EnumPicker<Encounter>(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Target Level',\n\t\t\t//\tvalues: [\n\t\t\t//\t\t{ name: '83', value: 83 },\n\t\t\t//\t\t{ name: '82', value: 82 },\n\t\t\t//\t\t{ name: '81', value: 81 },\n\t\t\t//\t\t{ name: '80', value: 80 },\n\t\t\t//\t],\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getLevel(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setLevel(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t//new EnumPicker(this.rootElem, modEncounter, {\n\t\t\t//\tlabel: 'Mob Type',\n\t\t\t//\tvalues: mobTypeEnumValues,\n\t\t\t//\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getMobType(),\n\t\t\t//\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\tencounter.primaryTarget.setMobType(eventID, newValue);\n\t\t\t//\t},\n\t\t\t//});\n\n\t\t\t// Leaving this commented in case we want it later. But it takes up a lot of\n\t\t\t// screen space and none of these fields get changed much.\n\t\t\t//if (config.simpleTargetStats) {\n\t\t\t//\tconfig.simpleTargetStats.forEach(stat => {\n\t\t\t//\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t//\t\t\tlabel: statNames[stat],\n\t\t\t//\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t//\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.getStats().getStat(stat),\n\t\t\t//\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t//\t\t\t\tencounter.primaryTarget.setStats(eventID, encounter.primaryTarget.getStats().withStat(stat, newValue));\n\t\t\t//\t\t\t},\n\t\t\t//\t\t});\n\t\t\t//\t});\n\t\t\t//}\n\n\t\t\tif (simUI.isIndividualSim() && isHealingSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, simUI.sim.raid, {\n\t\t\t\t\tlabel: 'Num Allies',\n\t\t\t\t\tlabelTooltip: 'Number of allied players in the raid.',\n\t\t\t\t\tchangedEvent: (raid: Raid) => raid.targetDummiesChangeEmitter,\n\t\t\t\t\tgetValue: (raid: Raid) => raid.getTargetDummies(),\n\t\t\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: number) => {\n\t\t\t\t\t\traid.setTargetDummies(eventID, newValue);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (simUI.isIndividualSim() && isTankSpec((simUI as IndividualSimUI<any>).player.spec)) {\n\t\t\t\tnew NumberPicker(this.rootElem, modEncounter, {\n\t\t\t\t\tlabel: 'Min Base Damage',\n\t\t\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\t\tgetValue: (encounter: Encounter) => encounter.primaryTarget.minBaseDamage,\n\t\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\t\t\tencounter.primaryTarget.minBaseDamage = newValue;\n\t\t\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Transfer Target Inputs from target Id if they dont match (possible when custom AI is selected)\n\t\t\tconst targetIndex = presetTargets.findIndex(pe => modEncounter.primaryTarget.id == pe.target?.id);\n\t\t\tconst targetInputs = presetTargets[targetIndex]?.target?.targetInputs || [];\n\n\t\t\tif (\n\t\t\t\ttargetInputs.length != modEncounter.primaryTarget.targetInputs.length ||\n\t\t\t\tmodEncounter.primaryTarget.targetInputs.some((ti, i) => ti.label != targetInputs[i].label)\n\t\t\t) {\n\t\t\t\tmodEncounter.primaryTarget.targetInputs = targetInputs;\n\t\t\t\tmodEncounter.targetsChangeEmitter.emit(TypedEvent.nextEventID());\n\t\t\t}\n\n\t\t\tmakeTargetInputsPicker(this.rootElem, modEncounter, 0);\n\n\t\t\tconst advancedButton = document.createElement('button');\n\t\t\tadvancedButton.classList.add('advanced-button', 'btn', 'btn-primary');\n\t\t\tadvancedButton.textContent = 'Advanced';\n\t\t\tadvancedButton.addEventListener('click', () => new AdvancedEncounterModal(simUI.rootElem, simUI, modEncounter));\n\t\t\tthis.rootElem.appendChild(advancedButton);\n\t\t});\n\t}\n}\n\nclass AdvancedEncounterModal extends BaseModal {\n\tprivate readonly encounter: Encounter;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI, encounter: Encounter) {\n\t\tsuper(parent, 'advanced-encounter-picker-modal');\n\n\t\tthis.encounter = encounter;\n\n\t\tthis.addHeader();\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"encounter-header\"></div>\n\t\t\t<div class=\"encounter-targets\"></div>\n\t\t`;\n\n\t\tconst header = this.rootElem.getElementsByClassName('encounter-header')[0] as HTMLElement;\n\t\tconst targetsElem = this.rootElem.getElementsByClassName('encounter-targets')[0] as HTMLElement;\n\n\t\taddEncounterFieldPickers(header, this.encounter, true);\n\t\tif (!simUI.isIndividualSim()) {\n\t\t\tnew BooleanPicker<Encounter>(header, encounter, {\n\t\t\t\tlabel: 'Use Health',\n\t\t\t\tlabelTooltip: 'Uses a damage limit in place of a duration limit. Damage limit is equal to sum of all targets health.',\n\t\t\t\tinline: true,\n\t\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\t\tgetValue: (encounter: Encounter) => encounter.getUseHealth(),\n\t\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: boolean) => {\n\t\t\t\t\tencounter.setUseHealth(eventID, newValue);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tnew ListPicker<Encounter, TargetProto>(targetsElem, this.encounter, {\n\t\t\textraCssClasses: ['targets-picker', 'mb-0'],\n\t\t\titemLabel: 'Target',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.targetsChangeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.targets,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: Array<TargetProto>) => {\n\t\t\t\tencounter.targets = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tnewItem: () => Encounter.getPresetTargetForLevel(simUI.sim.raid.getPlayer(0)?.getLevel() ?? Mechanics.CURRENT_LEVEL_CAP, simUI.sim).target!,\n\t\t\tcopyItem: (oldItem: TargetProto) => TargetProto.clone(oldItem),\n\t\t\tnewItemPicker: (\n\t\t\t\tparent: HTMLElement,\n\t\t\t\tlistPicker: ListPicker<Encounter, TargetProto>,\n\t\t\t\tindex: number,\n\t\t\t\tconfig: ListItemPickerConfig<Encounter, TargetProto>,\n\t\t\t) => new TargetPicker(parent, encounter, index, config),\n\t\t});\n\t}\n\n\tprivate addHeader() {\n\t\tconst presetEncounters = this.encounter.sim.db.getAllPresetEncounters();\n\n\t\tnew EnumPicker<Encounter>(this.header as HTMLElement, this.encounter, {\n\t\t\tlabel: 'Encounter',\n\t\t\textraCssClasses: ['encounter-picker', 'mb-0', 'pe-2', 'order-first'],\n\t\t\tvalues: [{ name: 'Custom', value: -1 }].concat(\n\t\t\t\tpresetEncounters.map((pe, i) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: pe.path,\n\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t),\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => presetEncounters.findIndex(pe => encounter.matchesPreset(pe)),\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\tencounter.applyPreset(eventID, presetEncounters[newValue]);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n}\n\nclass TargetPicker extends Input<Encounter, TargetProto> {\n\tprivate readonly encounter: Encounter;\n\tprivate readonly targetIndex: number;\n\n\tprivate readonly aiPicker: Input<null, number>;\n\tprivate readonly levelPicker: Input<null, number>;\n\tprivate readonly mobTypePicker: Input<null, number>;\n\tprivate readonly tankIndexPicker: Input<null, number>;\n\tprivate readonly statPickers: Array<Input<null, number>>;\n\tprivate readonly swingSpeedPicker: Input<null, number>;\n\tprivate readonly minBaseDamagePicker: Input<null, number>;\n\tprivate readonly dualWieldPicker: Input<null, boolean>;\n\tprivate readonly dwMissPenaltyPicker: Input<null, boolean>;\n\tprivate readonly parryHastePicker: Input<null, boolean>;\n\tprivate readonly spellSchoolPicker: Input<null, number>;\n\tprivate readonly damageSpreadPicker: Input<null, number>;\n\tprivate readonly targetInputPickers: ListPicker<Encounter, TargetInput>;\n\n\tprivate getTarget(): TargetProto {\n\t\treturn this.encounter.targets[this.targetIndex] || Target.create();\n\t}\n\n\tconstructor(parent: HTMLElement, encounter: Encounter, targetIndex: number, config: ListItemPickerConfig<Encounter, TargetProto>) {\n\t\tsuper(parent, 'target-picker-root', encounter, config);\n\t\tthis.encounter = encounter;\n\t\tthis.targetIndex = targetIndex;\n\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"target-picker-section target-picker-section1\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section2\"></div>\n\t\t\t<div class=\"target-picker-section target-picker-section3 threat-metrics\"></div>\n\t\t`;\n\n\t\tconst section1 = this.rootElem.getElementsByClassName('target-picker-section1')[0] as HTMLElement;\n\t\tconst section2 = this.rootElem.getElementsByClassName('target-picker-section2')[0] as HTMLElement;\n\t\tconst section3 = this.rootElem.getElementsByClassName('target-picker-section3')[0] as HTMLElement;\n\n\t\tconst presetTargets = encounter.sim.db.getAllPresetTargets();\n\t\tnew EnumPicker<null>(section1, null, {\n\t\t\textraCssClasses: ['npc-picker'],\n\t\t\tlabel: 'NPC',\n\t\t\tlabelTooltip: 'Selects a preset NPC configuration.',\n\t\t\tvalues: [{ name: 'Custom', value: -1 }].concat(\n\t\t\t\tpresetTargets.map((pe, i) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: pe.path,\n\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t),\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => presetTargets.findIndex(pe => equalTargetsIgnoreInputs(this.getTarget(), pe.target)),\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tif (newValue != -1) {\n\t\t\t\t\tencounter.applyPresetTarget(eventID, presetTargets[newValue], this.targetIndex);\n\t\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tthis.aiPicker = new EnumPicker<null>(section1, null, {\n\t\t\textraCssClasses: ['ai-picker'],\n\t\t\tlabel: 'AI',\n\t\t\tlabelTooltip: `\n\t\t\t\t<p>Determines the target\\'s ability rotation.</p>\n\t\t\t\t<p>Note that most rotations are not yet implemented.</p>\n\t\t\t`,\n\t\t\tvalues: [{ name: 'None', value: 0 }].concat(\n\t\t\t\tpresetTargets.map(pe => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: pe.path,\n\t\t\t\t\t\tvalue: pe.target!.id,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t),\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().id,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tconst target = this.getTarget();\n\t\t\t\ttarget.id = newValue;\n\n\t\t\t\t// Transfer Target Inputs from the AI of the selected target\n\t\t\t\ttarget.targetInputs = (presetTargets.find(pe => target.id == pe.target?.id)?.target?.targetInputs || []).map(ti => TargetInput.clone(ti));\n\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.levelPicker = new EnumPicker<null>(section1, null, {\n\t\t\tlabel: 'Level',\n\t\t\tvalues: [\n\t\t\t\t{ name: '63', value: 63 },\n\t\t\t\t{ name: '62', value: 62 },\n\t\t\t\t{ name: '61', value: 61 },\n\t\t\t\t{ name: '60', value: 60 },\n\t\t\t\t{ name: '53', value: 53 },\n\t\t\t\t{ name: '52', value: 52 },\n\t\t\t\t{ name: '51', value: 51 },\n\t\t\t\t{ name: '50', value: 50 },\n\t\t\t\t{ name: '43', value: 43 },\n\t\t\t\t{ name: '42', value: 42 },\n\t\t\t\t{ name: '41', value: 41 },\n\t\t\t\t{ name: '40', value: 40 },\n\t\t\t\t{ name: '28', value: 28 },\n\t\t\t\t{ name: '27', value: 27 },\n\t\t\t\t{ name: '26', value: 26 },\n\t\t\t\t{ name: '25', value: 25 },\n\t\t\t],\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().level,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().level = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.mobTypePicker = new EnumPicker(section1, null, {\n\t\t\tlabel: 'Mob Type',\n\t\t\tvalues: mobTypeEnumValues,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().mobType,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().mobType = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.tankIndexPicker = new EnumPicker<null>(section1, null, {\n\t\t\textraCssClasses: ['threat-metrics'],\n\t\t\tlabel: 'Tanked By',\n\t\t\tlabelTooltip:\n\t\t\t\t'Determines which player in the raid this enemy will attack. If no player is assigned to the specified tank slot, this enemy will not attack.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'None', value: -1 },\n\t\t\t\t{ name: 'Main Tank', value: 0 },\n\t\t\t\t{ name: 'Tank 2', value: 1 },\n\t\t\t\t{ name: 'Tank 3', value: 2 },\n\t\t\t\t{ name: 'Tank 4', value: 3 },\n\t\t\t],\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().tankIndex,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().tankIndex = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.targetInputPickers = makeTargetInputsPicker(section1, encounter, this.targetIndex);\n\n\t\tthis.statPickers = ALL_TARGET_STATS.map(statData => {\n\t\t\tconst stat = statData.stat;\n\t\t\treturn new NumberPicker(section2, null, {\n\t\t\t\tinline: true,\n\t\t\t\textraCssClasses: statData.extraCssClasses,\n\t\t\t\tlabel: statNames.get(stat),\n\t\t\t\tlabelTooltip: statData.tooltip,\n\t\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\t\tgetValue: () => this.getTarget().stats[stat],\n\t\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\t\tthis.getTarget().stats[stat] = newValue;\n\t\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tthis.swingSpeedPicker = new NumberPicker(section3, null, {\n\t\t\tlabel: 'Swing Speed',\n\t\t\tlabelTooltip: 'Time in seconds between auto attacks. Set to 0 to disable auto attacks.',\n\t\t\tfloat: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().swingSpeed,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().swingSpeed = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.minBaseDamagePicker = new NumberPicker(section3, null, {\n\t\t\tlabel: 'Min Base Damage',\n\t\t\tlabelTooltip: 'Base damage for auto attacks, i.e. lowest roll with 0 AP against a 0-armor Player.',\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().minBaseDamage,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().minBaseDamage = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.damageSpreadPicker = new NumberPicker(section3, null, {\n\t\t\tlabel: 'Damage Spread',\n\t\t\tlabelTooltip: 'Fractional spread between the minimum and maximum auto-attack damage from this enemy at 0 Attack Power.',\n\t\t\tfloat: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().damageSpread,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().damageSpread = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.dualWieldPicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'Dual Wield',\n\t\t\tlabelTooltip: 'Uses 2 separate weapons to attack.',\n\t\t\tinline: true,\n\t\t\treverse: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().dualWield,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().dualWield = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.dwMissPenaltyPicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'DW Miss Penalty',\n\t\t\tlabelTooltip:\n\t\t\t\t'Enables the Dual Wield Miss Penalty (+19% chance to miss) if dual wielding. Bosses in Hyjal/BT/SWP usually have this disabled to stop tanks from avoidance stacking.',\n\t\t\tinline: true,\n\t\t\treverse: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().dualWieldPenalty,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().dualWieldPenalty = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t\tenableWhen: () => this.getTarget().dualWield,\n\t\t});\n\t\tthis.parryHastePicker = new BooleanPicker(section3, null, {\n\t\t\tlabel: 'Parry Haste',\n\t\t\tlabelTooltip: 'Whether this enemy will gain parry haste when parrying attacks.',\n\t\t\tinline: true,\n\t\t\treverse: true,\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().parryHaste,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\tthis.getTarget().parryHaste = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\t\tthis.spellSchoolPicker = new EnumPicker<null>(section3, null, {\n\t\t\tlabel: 'Spell School',\n\t\t\tlabelTooltip: 'Type of damage caused by auto attacks. This is usually Physical, but some enemies have elemental attacks.',\n\t\t\tvalues: [\n\t\t\t\t{ name: 'Physical', value: SpellSchool.SpellSchoolPhysical },\n\t\t\t\t{ name: 'Arcane', value: SpellSchool.SpellSchoolArcane },\n\t\t\t\t{ name: 'Fire', value: SpellSchool.SpellSchoolFire },\n\t\t\t\t{ name: 'Frost', value: SpellSchool.SpellSchoolFrost },\n\t\t\t\t{ name: 'Holy', value: SpellSchool.SpellSchoolHoly },\n\t\t\t\t{ name: 'Nature', value: SpellSchool.SpellSchoolNature },\n\t\t\t\t{ name: 'Shadow', value: SpellSchool.SpellSchoolShadow },\n\t\t\t],\n\t\t\tchangedEvent: () => encounter.targetsChangeEmitter,\n\t\t\tgetValue: () => this.getTarget().spellSchool,\n\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\tthis.getTarget().spellSchool = newValue;\n\t\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t\t},\n\t\t});\n\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn null;\n\t}\n\tgetInputValue(): TargetProto {\n\t\treturn TargetProto.create({\n\t\t\tid: this.aiPicker.getInputValue(),\n\t\t\tlevel: this.levelPicker.getInputValue(),\n\t\t\tmobType: this.mobTypePicker.getInputValue(),\n\t\t\ttankIndex: this.tankIndexPicker.getInputValue(),\n\t\t\tswingSpeed: this.swingSpeedPicker.getInputValue(),\n\t\t\tminBaseDamage: this.minBaseDamagePicker.getInputValue(),\n\t\t\tdualWield: this.dualWieldPicker.getInputValue(),\n\t\t\tdualWieldPenalty: this.dwMissPenaltyPicker.getInputValue(),\n\t\t\tparryHaste: this.parryHastePicker.getInputValue(),\n\t\t\tspellSchool: this.spellSchoolPicker.getInputValue(),\n\t\t\tdamageSpread: this.damageSpreadPicker.getInputValue(),\n\t\t\tstats: this.statPickers\n\t\t\t\t.map(picker => picker.getInputValue())\n\t\t\t\t.map((statValue, i) => new Stats().withStat(ALL_TARGET_STATS[i].stat, statValue))\n\t\t\t\t.reduce((totalStats, curStats) => totalStats.add(curStats))\n\t\t\t\t.asArray(),\n\t\t\ttargetInputs: this.targetInputPickers.getInputValue(),\n\t\t});\n\t}\n\tsetInputValue(newValue: TargetProto) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tthis.aiPicker.setInputValue(newValue.id);\n\t\tthis.levelPicker.setInputValue(newValue.level);\n\t\tthis.mobTypePicker.setInputValue(newValue.mobType);\n\t\tthis.tankIndexPicker.setInputValue(newValue.tankIndex);\n\t\tthis.swingSpeedPicker.setInputValue(newValue.swingSpeed);\n\t\tthis.minBaseDamagePicker.setInputValue(newValue.minBaseDamage);\n\t\tthis.dualWieldPicker.setInputValue(newValue.dualWield);\n\t\tthis.dwMissPenaltyPicker.setInputValue(newValue.dualWieldPenalty);\n\t\tthis.parryHastePicker.setInputValue(newValue.parryHaste);\n\t\tthis.spellSchoolPicker.setInputValue(newValue.spellSchool);\n\t\tthis.damageSpreadPicker.setInputValue(newValue.damageSpread);\n\t\tALL_TARGET_STATS.forEach((statData, i) => this.statPickers[i].setInputValue(newValue.stats[statData.stat]));\n\t\tthis.targetInputPickers.setInputValue(newValue.targetInputs);\n\t}\n}\n\nclass TargetInputPicker extends Input<Encounter, TargetInput> {\n\tprivate readonly encounter: Encounter;\n\tprivate readonly targetIndex: number;\n\tprivate readonly targetInputIndex: number;\n\n\tprivate boolPicker: Input<null, boolean> | null;\n\tprivate numberPicker: Input<null, number> | null;\n\n\tprivate getTargetInput(): TargetInput {\n\t\treturn this.encounter.targets[this.targetIndex].targetInputs[this.targetInputIndex] || TargetInput.create();\n\t}\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tencounter: Encounter,\n\t\ttargetIndex: number,\n\t\ttargetInputIndex: number,\n\t\tconfig: ListItemPickerConfig<Encounter, TargetInput>,\n\t) {\n\t\tsuper(parent, 'target-input-picker-root', encounter, config);\n\t\tthis.encounter = encounter;\n\t\tthis.targetIndex = targetIndex;\n\t\tthis.targetInputIndex = targetInputIndex;\n\n\t\tthis.boolPicker = null;\n\t\tthis.numberPicker = null;\n\t\tthis.init();\n\t}\n\n\tgetInputElem(): HTMLElement | null {\n\t\treturn this.rootElem;\n\t}\n\tgetInputValue(): TargetInput {\n\t\treturn TargetInput.create({\n\t\t\tboolValue: this.boolPicker ? this.boolPicker.getInputValue() : undefined,\n\t\t\tnumberValue: this.numberPicker ? this.numberPicker.getInputValue() : undefined,\n\t\t});\n\t}\n\tsetInputValue(newValue: TargetInput) {\n\t\tif (!newValue) {\n\t\t\treturn;\n\t\t}\n\t\tif (newValue.inputType == InputType.Number && !this.numberPicker) {\n\t\t\tif (this.boolPicker) {\n\t\t\t\tthis.boolPicker.rootElem.remove();\n\t\t\t\tthis.boolPicker = null;\n\t\t\t}\n\t\t\tthis.numberPicker = new NumberPicker(this.rootElem, null, {\n\t\t\t\tlabel: newValue.label,\n\t\t\t\tlabelTooltip: newValue.tooltip,\n\t\t\t\tchangedEvent: () => this.encounter.targetsChangeEmitter,\n\t\t\t\tgetValue: () => this.getTargetInput().numberValue,\n\t\t\t\tsetValue: (eventID: EventID, _: null, newValue: number) => {\n\t\t\t\t\tthis.getTargetInput().numberValue = newValue;\n\t\t\t\t\tthis.encounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (newValue.inputType == InputType.Bool && !this.boolPicker) {\n\t\t\tif (this.numberPicker) {\n\t\t\t\tthis.numberPicker.rootElem.remove();\n\t\t\t\tthis.numberPicker = null;\n\t\t\t}\n\t\t\tthis.boolPicker = new BooleanPicker(this.rootElem, null, {\n\t\t\t\tlabel: newValue.label,\n\t\t\t\tlabelTooltip: newValue.tooltip,\n\t\t\t\tchangedEvent: () => this.encounter.targetsChangeEmitter,\n\t\t\t\tgetValue: () => this.getTargetInput().boolValue,\n\t\t\t\tsetValue: (eventID: EventID, _: null, newValue: boolean) => {\n\t\t\t\t\tthis.getTargetInput().boolValue = newValue;\n\t\t\t\t\tthis.encounter.targetsChangeEmitter.emit(eventID);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction addEncounterFieldPickers(rootElem: HTMLElement, encounter: Encounter, showExecuteProportion: boolean) {\n\tconst durationGroup = Input.newGroupContainer();\n\trootElem.appendChild(durationGroup);\n\n\tnew NumberPicker(durationGroup, encounter, {\n\t\tlabel: 'Duration',\n\t\tlabelTooltip: 'The fight length for each sim iteration, in seconds.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDuration(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDuration(eventID, newValue);\n\t\t},\n\t\tenableWhen: _ => {\n\t\t\treturn !encounter.getUseHealth();\n\t\t},\n\t});\n\tnew NumberPicker(durationGroup, encounter, {\n\t\tlabel: 'Duration +/-',\n\t\tlabelTooltip:\n\t\t\t'Adds a random amount of time, in seconds, between [value, -1 * value] to each sim iteration. For example, setting Duration to 180 and Duration +/- to 10 will result in random durations between 170s and 190s.',\n\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.getDurationVariation(),\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\tencounter.setDurationVariation(eventID, newValue);\n\t\t},\n\t\tenableWhen: _ => {\n\t\t\treturn !encounter.getUseHealth();\n\t\t},\n\t});\n\n\tif (showExecuteProportion) {\n\t\tconst executeGroup = Input.newGroupContainer();\n\t\texecuteGroup.classList.add('execute-group');\n\t\trootElem.appendChild(executeGroup);\n\n\t\tnew NumberPicker(executeGroup, encounter, {\n\t\t\tlabel: 'Execute Duration 20 (%)',\n\t\t\tlabelTooltip:\n\t\t\t\t'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 20% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion20() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion20(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: _ => {\n\t\t\t\treturn !encounter.getUseHealth();\n\t\t\t},\n\t\t});\n\t\tnew NumberPicker(executeGroup, encounter, {\n\t\t\tlabel: 'Execute Duration 25 (%)',\n\t\t\tlabelTooltip:\n\t\t\t\t\"Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 25% HP) for the purpose of effects like Warlock's Drain Soul.\",\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion25() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion25(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: _ => {\n\t\t\t\treturn !encounter.getUseHealth();\n\t\t\t},\n\t\t});\n\t\tnew NumberPicker(executeGroup, encounter, {\n\t\t\tlabel: 'Execute Duration 35 (%)',\n\t\t\tlabelTooltip:\n\t\t\t\t'Percentage of the total encounter duration, for which the targets will be considered to be in execute range (< 35% HP) for the purpose of effects like Warrior Execute or Mage Molten Fury.',\n\t\t\tchangedEvent: (encounter: Encounter) => encounter.changeEmitter,\n\t\t\tgetValue: (encounter: Encounter) => encounter.getExecuteProportion35() * 100,\n\t\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: number) => {\n\t\t\t\tencounter.setExecuteProportion35(eventID, newValue / 100);\n\t\t\t},\n\t\t\tenableWhen: _ => {\n\t\t\t\treturn !encounter.getUseHealth();\n\t\t\t},\n\t\t});\n\t}\n}\n\nfunction makeTargetInputsPicker(parent: HTMLElement, encounter: Encounter, targetIndex: number): ListPicker<Encounter, TargetInput> {\n\treturn new ListPicker<Encounter, TargetInput>(parent, encounter, {\n\t\titemLabel: 'Target Input',\n\t\tchangedEvent: (encounter: Encounter) => encounter.targetsChangeEmitter,\n\t\tgetValue: (encounter: Encounter) => encounter.targets[targetIndex].targetInputs,\n\t\tsetValue: (eventID: EventID, encounter: Encounter, newValue: Array<TargetInput>) => {\n\t\t\tencounter.targets[targetIndex].targetInputs = newValue;\n\t\t\tencounter.targetsChangeEmitter.emit(eventID);\n\t\t},\n\t\tnewItem: () => TargetInput.create(),\n\t\tcopyItem: (oldItem: TargetInput) => TargetInput.clone(oldItem),\n\t\tnewItemPicker: (\n\t\t\tparent: HTMLElement,\n\t\t\tlistPicker: ListPicker<Encounter, TargetInput>,\n\t\t\tindex: number,\n\t\t\tconfig: ListItemPickerConfig<Encounter, TargetInput>,\n\t\t) => new TargetInputPicker(parent, encounter, targetIndex, index, config),\n\t\thideUi: true,\n\t});\n}\n\nfunction equalTargetsIgnoreInputs(target1: TargetProto | undefined, target2: TargetProto | undefined): boolean {\n\tif ((target1 == null) != (target2 == null)) {\n\t\treturn false;\n\t}\n\tif (target1 == null) {\n\t\treturn true;\n\t}\n\tconst modTarget2 = TargetProto.clone(target2!);\n\tmodTarget2.targetInputs = target1.targetInputs;\n\treturn TargetProto.equals(target1, modTarget2);\n}\n\nconst ALL_TARGET_STATS: Array<{ stat: Stat; tooltip: string; extraCssClasses: Array<string> }> = [\n\t{ stat: Stat.StatHealth, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArmor, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatArcaneResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFireResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatFrostResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatNatureResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatShadowResistance, tooltip: '', extraCssClasses: [] },\n\t{ stat: Stat.StatAttackPower, tooltip: '', extraCssClasses: ['threat-metrics'] },\n\t{ stat: Stat.StatBlockValue, tooltip: '', extraCssClasses: ['threat-metrics'] },\n];\n\nconst mobTypeEnumValues = [\n\t{ name: 'None', value: MobType.MobTypeUnknown },\n\t{ name: 'Beast', value: MobType.MobTypeBeast },\n\t{ name: 'Demon', value: MobType.MobTypeDemon },\n\t{ name: 'Dragonkin', value: MobType.MobTypeDragonkin },\n\t{ name: 'Elemental', value: MobType.MobTypeElemental },\n\t{ name: 'Giant', value: MobType.MobTypeGiant },\n\t{ name: 'Humanoid', value: MobType.MobTypeHumanoid },\n\t{ name: 'Mechanical', value: MobType.MobTypeMechanical },\n\t{ name: 'Undead', value: MobType.MobTypeUndead },\n];\n","import { IndividualSimUI } from \"../../individual_sim_ui\";\nimport { Player } from \"../../player\";\nimport { Spec, Stat } from \"../../proto/common\";\nimport { ActionId } from \"../../proto_utils/action_id\";\n\nimport { IconEnumPicker, IconEnumPickerConfig } from \"../icon_enum_picker\";\nimport { IconPicker, IconPickerConfig } from \"../icon_picker\";\nimport { MultiIconPicker, MultiIconPickerConfig } from \"../multi_icon_picker\";\n\nexport interface ActionInputConfig<T> {\n\tactionId: (player: Player<Spec>) => ActionId | null\n\tvalue: T\n\tminLevel?: number\n\tmaxLevel?: number\n\tshowWhen?: (player: Player<Spec>) => boolean\n}\n\nexport interface StatOption {\n\tstats: Array<Stat>,\n}\n\nexport interface ItemStatOption<T> extends StatOption {\n\tconfig: ActionInputConfig<T>,\n}\n\nexport interface PickerStatOption<PickerType, ConfigType> extends StatOption {\n\tconfig: ConfigType,\n\tpicker: PickerType,\n}\n\nexport interface IconPickerStatOption extends PickerStatOption<\n\ttypeof IconPicker<Player<any>, any>,\n\tIconPickerConfig<Player<any>, any>\n> {}\n\nexport interface MultiIconPickerStatOption extends PickerStatOption<\n\ttypeof MultiIconPicker<Player<any>>,\n\tMultiIconPickerConfig<Player<any>>\n> {}\n\nexport interface IconEnumPickerStatOption extends PickerStatOption<\n  typeof IconEnumPicker<Player<any>, any>,\n  IconEnumPickerConfig<Player<any>, any>\n> {}\n\nexport type ItemStatOptions<T> = ItemStatOption<T>\nexport type PickerStatOptions = IconPickerStatOption | MultiIconPickerStatOption | IconEnumPickerStatOption\nexport type StatOptions<T, Options extends ItemStatOptions<T> | PickerStatOptions> = Array<Options>\n\nexport function relevantStatOptions<T, OptionsType extends ItemStatOptions<T> | PickerStatOptions>(\n\toptions: StatOptions<T, OptionsType>,\n\tsimUI: IndividualSimUI<Spec>\n): StatOptions<T, OptionsType> {\n  return options\n    .filter(option =>\n\t\t\t// Filter out excluded options\n\t\t\t!simUI.individualConfig.excludeBuffDebuffInputs.includes(option.config) &&\n      (\n\t\t\t\t// Compare EP stats\n\t\t\t\toption.stats.length == 0 ||\n      \toption.stats.some(stat => simUI.individualConfig.epStats.includes(stat)) ||\n\t\t\t\t// Check included options\n\t\t\t\tsimUI.individualConfig.includeBuffDebuffInputs.includes(option.config))\n\t\t\t)\n}\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment } from 'tsx-vanilla';\n\nimport { Player } from '../player.js';\nimport { ItemSlot, Spec } from '../proto/common.js';\nimport { SimUI } from '../sim_ui.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { BooleanPicker } from './boolean_picker.js';\nimport { Component } from './component.js';\nimport { IconItemSwapPicker } from './gear_picker.js';\nimport { Input } from './input.js';\n\nexport interface ItemSwapConfig {\n\titemSlots: Array<ItemSlot>;\n\tnote?: string;\n}\n\nexport class ItemSwapPicker<SpecType extends Spec> extends Component {\n\tprivate readonly itemSlots: Array<ItemSlot>;\n\tprivate readonly enableItemSwapPicker: BooleanPicker<Player<SpecType>>;\n\n\tconstructor(parentElem: HTMLElement, simUI: SimUI, player: Player<SpecType>, config: ItemSwapConfig) {\n\t\tsuper(parentElem, 'item-swap-picker-root');\n\t\tthis.itemSlots = config.itemSlots;\n\n\t\tthis.enableItemSwapPicker = new BooleanPicker(this.rootElem, player, {\n\t\t\treverse: true,\n\t\t\tlabel: 'Enable Item Swapping',\n\t\t\tlabelTooltip: 'Allows configuring an Item Swap Set which is used with the <b>Item Swap</b> APL action.',\n\t\t\textraCssClasses: ['input-inline'],\n\t\t\tgetValue: (player: Player<SpecType>) => player.getEnableItemSwap(),\n\t\t\tsetValue(eventID: EventID, player: Player<SpecType>, newValue: boolean) {\n\t\t\t\tplayer.setEnableItemSwap(eventID, newValue);\n\t\t\t},\n\t\t\tchangedEvent: (player: Player<SpecType>) => player.itemSwapChangeEmitter,\n\t\t});\n\n\t\tconst swapPickerContainer = document.createElement('div');\n\t\tswapPickerContainer.classList.add('input-root', 'input-inline');\n\t\tthis.rootElem.appendChild(swapPickerContainer);\n\n\t\tlet noteElem: Element;\n\t\tif (config.note) {\n\t\t\tnoteElem = this.rootElem.appendChild(<p className=\"form-text\">{config.note}</p>);\n\t\t}\n\n\t\tconst toggleEnabled = () => {\n\t\t\tif (!player.getEnableItemSwap()) {\n\t\t\t\tswapPickerContainer.classList.add('hide');\n\t\t\t\tnoteElem?.classList.add('hide');\n\t\t\t} else {\n\t\t\t\tswapPickerContainer.classList.remove('hide');\n\t\t\t\tnoteElem?.classList.remove('hide');\n\t\t\t}\n\t\t};\n\t\tplayer.itemSwapChangeEmitter.on(toggleEnabled);\n\t\ttoggleEnabled();\n\n\t\tconst label = document.createElement('label');\n\t\tlabel.classList.add('form-label');\n\t\tlabel.textContent = 'Item Swap';\n\t\tswapPickerContainer.appendChild(label);\n\n\t\tconst itemSwapContainer = Input.newGroupContainer();\n\t\titemSwapContainer.classList.add('icon-group');\n\t\tswapPickerContainer.appendChild(itemSwapContainer);\n\n\t\tconst swapButtonFragment = document.createElement('fragment');\n\t\tswapButtonFragment.innerHTML = `\n\t\t\t<a\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\tclass=\"gear-swap-icon\"\n\t\t\t\trole=\"button\"\n\t\t\t\tdata-bs-title=\"Swap with equipped items\"\n\t\t\t>\n\t\t\t\t<i class=\"fas fa-arrows-rotate me-1\"></i>\n\t\t\t</a>\n\t\t`;\n\n\t\tconst swapButton = swapButtonFragment.children[0] as HTMLElement;\n\t\titemSwapContainer.appendChild(swapButton);\n\n\t\tswapButton.addEventListener('click', _event => this.swapWithGear(TypedEvent.nextEventID(), player));\n\t\tTooltip.getOrCreateInstance(swapButton);\n\n\t\tthis.itemSlots.forEach(itemSlot => {\n\t\t\tnew IconItemSwapPicker(itemSwapContainer, simUI, player, itemSlot);\n\t\t});\n\t}\n\n\tswapWithGear(eventID: EventID, player: Player<SpecType>) {\n\t\tlet newGear = player.getGear();\n\t\tlet newIsg = player.getItemSwapGear();\n\n\t\tthis.itemSlots.forEach(slot => {\n\t\t\tconst gearItem = player.getGear().getEquippedItem(slot);\n\t\t\tconst swapItem = player.getItemSwapGear().getEquippedItem(slot);\n\n\t\t\tnewGear = newGear.withEquippedItem(slot, swapItem, player.canDualWield2H());\n\t\t\tnewIsg = newIsg.withEquippedItem(slot, gearItem, player.canDualWield2H());\n\t\t});\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tplayer.setGear(eventID, newGear);\n\t\t\tplayer.setItemSwapGear(eventID, newIsg);\n\t\t});\n\t}\n}\n","import { IndividualSimUI } from '../../individual_sim_ui';\nimport { Player } from '../../player';\nimport { Spec, Stat } from '../../proto/common';\nimport { TypedEvent } from '../../typed_event';\nimport { Component } from '../component';\nimport { IconEnumPicker } from '../icon_enum_picker';\nimport { buildIconInput } from '../icon_inputs.js';\nimport { IconPicker } from '../icon_picker';\nimport * as ConsumablesInputs from '../inputs/consumables';\nimport { relevantStatOptions } from '../inputs/stat_options';\nimport { MultiIconPicker } from '../multi_icon_picker';\n\nexport class ConsumesPicker extends Component {\n\tprotected simUI: IndividualSimUI<Spec>;\n\n\tconstructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n\t\tsuper(parentElem, 'consumes-picker-root');\n\t\tthis.simUI = simUI;\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tthis.buildPotionsPicker();\n\t\t\tthis.buildFlaskPicker();\n\t\t\tthis.buildWeaponImbuePicker();\n\t\t\tthis.buildFoodPicker();\n\t\t\tthis.buildPhysicalBuffPickers();\n\t\t\tthis.buildDefensiveBuffPickers();\n\t\t\tthis.buildSpellPowerBuffPickers();\n\t\t\tthis.buildMiscConsumesPickers();\n\t\t\tthis.buildEngPickers();\n\t\t\tthis.buildEnchPicker();\n\t\t\tthis.buildPetPicker();\n\t\t});\n\t}\n\n\tprivate buildPotionsPicker() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Potions</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-potions\"></div>\n\t\t\t</div>\n    \t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst potionsElem = this.rootElem.querySelector('.consumes-potions') as HTMLElement;\n\n\t\tconst potionsOptions = ConsumablesInputs.makePotionsInput(relevantStatOptions(ConsumablesInputs.POTIONS_CONFIG, this.simUI), 'Mana Potion');\n\t\tconst conjuredOptions = ConsumablesInputs.makeConjuredInput(relevantStatOptions(ConsumablesInputs.CONJURED_CONFIG, this.simUI));\n\n\t\tconst pickers = [\n\t\t\tbuildIconInput(potionsElem, this.simUI.player, potionsOptions),\n\t\t\tbuildIconInput(potionsElem, this.simUI.player, conjuredOptions),\n\t\t\tbuildIconInput(potionsElem, this.simUI.player, ConsumablesInputs.MildlyIrradiatedRejuvPotion),\n\t\t];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter, this.simUI.player.professionChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildFlaskPicker() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Flasks</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-flasks\"></div>\n\t\t\t</div>\n    \t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst flasksElem = this.rootElem.querySelector('.consumes-flasks') as HTMLElement;\n\n\t\tconst flasksOptions = ConsumablesInputs.makeFlasksInput(relevantStatOptions(ConsumablesInputs.FLASKS_CONFIG, this.simUI));\n\n\t\tconst pickers = [buildIconInput(flasksElem, this.simUI.player, flasksOptions)];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter, this.simUI.player.professionChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildWeaponImbuePicker() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Weapon Imbues</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-weapon-imbues\"></div>\n\t\t\t</div>\n    \t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst imbuesElem = this.rootElem.querySelector('.consumes-weapon-imbues') as HTMLElement;\n\n\t\tconst mhImbueOptions = ConsumablesInputs.makeMainHandImbuesInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.WEAPON_IMBUES_MH_CONFIG, this.simUI),\n\t\t\t'Main-Hand',\n\t\t);\n\t\tconst ohImbueOptions = ConsumablesInputs.makeOffHandImbuesInput(relevantStatOptions(ConsumablesInputs.WEAPON_IMBUES_OH_CONFIG, this.simUI), 'Off-Hand');\n\n\t\tconst pickers = [buildIconInput(imbuesElem, this.simUI.player, mhImbueOptions), buildIconInput(imbuesElem, this.simUI.player, ohImbueOptions)];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter, this.simUI.player.gearChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildFoodPicker() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Food</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-food\"></div>\n\t\t\t</div>\n    \t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst foodsElem = this.rootElem.querySelector('.consumes-food') as HTMLElement;\n\n\t\tconst foodOptions = ConsumablesInputs.makeFoodInput(relevantStatOptions(ConsumablesInputs.FOOD_CONFIG, this.simUI));\n\t\tconst alcoholOptions = ConsumablesInputs.makeFoodInput(relevantStatOptions(ConsumablesInputs.ALCOHOL_CONFIG, this.simUI));\n\n\t\tconst pickers = [\n\t\t\tbuildIconInput(foodsElem, this.simUI.player, foodOptions),\n\t\t\tbuildIconInput(foodsElem, this.simUI.player, ConsumablesInputs.DragonBreathChili),\n\t\t\tbuildIconInput(foodsElem, this.simUI.player, alcoholOptions),\n\t\t];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildPhysicalBuffPickers() {\n\t\tconst includeAgi = this.simUI.individualConfig.epStats.includes(Stat.StatAgility);\n\t\tconst includeStr = this.simUI.individualConfig.epStats.includes(Stat.StatStrength);\n\n\t\tif (!includeAgi && !includeStr) return;\n\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Physical</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-physical\"></div>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst physicalConsumesElem = this.rootElem.querySelector('.consumes-physical') as HTMLElement;\n\n\t\tconst apBuffOptions = ConsumablesInputs.makeAttackPowerConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.ATTACK_POWER_CONSUMES_CONFIG, this.simUI),\n\t\t\t'Attack Power',\n\t\t);\n\t\tconst agiBuffOptions = ConsumablesInputs.makeAgilityConsumeInput(relevantStatOptions(ConsumablesInputs.AGILITY_CONSUMES_CONFIG, this.simUI), 'Agility');\n\t\tconst strBuffOptions = ConsumablesInputs.makeStrengthConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.STRENGTH_CONSUMES_CONFIG, this.simUI),\n\t\t\t'Strength',\n\t\t);\n\n\t\tconst pickers = [\n\t\t\tbuildIconInput(physicalConsumesElem, this.simUI.player, apBuffOptions),\n\t\t\tbuildIconInput(physicalConsumesElem, this.simUI.player, agiBuffOptions),\n\t\t\tbuildIconInput(physicalConsumesElem, this.simUI.player, strBuffOptions),\n\t\t];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildDefensiveBuffPickers() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Defensive</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-defensive\"></div>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst defensiveConsumesElem = this.rootElem.querySelector('.consumes-defensive') as HTMLElement;\n\n\t\tconst healthBuffOptions = ConsumablesInputs.makeHealthConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.HEALTH_CONSUMES_CONFIG, this.simUI), \n\t\t\t'Health'\n\t\t);\n\n\t\tconst armorBuffOptions = ConsumablesInputs.makeArmorConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.ARMOR_CONSUMES_CONFIG, this.simUI), \n\t\t\t'Armor'\n\t\t);\n\n\t\tconst pickers = [\n\t\t\tbuildIconInput(defensiveConsumesElem, this.simUI.player, healthBuffOptions),\n\t\t\tbuildIconInput(defensiveConsumesElem, this.simUI.player, armorBuffOptions),\n\t\t];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildSpellPowerBuffPickers() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Spells</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-spells\"></div>\n\t\t\t</div>\n    \t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst spellsCnsumesElem = this.rootElem.querySelector('.consumes-spells') as HTMLElement;\n\n\t\tconst spBuffOptions = ConsumablesInputs.makeSpellPowerConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.SPELL_POWER_CONFIG, this.simUI),\n\t\t\t'Spell Damage',\n\t\t);\n\t\tconst fireBuffOptions = ConsumablesInputs.makeFirePowerConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.FIRE_POWER_CONFIG, this.simUI),\n\t\t\t'Fire Damage',\n\t\t);\n\t\tconst frostBuffOptions = ConsumablesInputs.makeFrostPowerConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.FROST_POWER_CONFIG, this.simUI),\n\t\t\t'Frost Damage',\n\t\t);\n\t\tconst shadowBuffOptions = ConsumablesInputs.makeShadowPowerConsumeInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.SHADOW_POWER_CONFIG, this.simUI),\n\t\t\t'Shadow Damage',\n\t\t);\n\t\tconst mp5BuffOptions = ConsumablesInputs.makeMp5ConsumeInput(relevantStatOptions(ConsumablesInputs.MP5_CONFIG, this.simUI), 'Mana Regen');\n\n\t\tconst pickers = [\n\t\t\tbuildIconInput(spellsCnsumesElem, this.simUI.player, spBuffOptions),\n\t\t\tbuildIconInput(spellsCnsumesElem, this.simUI.player, fireBuffOptions),\n\t\t\tbuildIconInput(spellsCnsumesElem, this.simUI.player, frostBuffOptions),\n\t\t\tbuildIconInput(spellsCnsumesElem, this.simUI.player, shadowBuffOptions),\n\t\t\tbuildIconInput(spellsCnsumesElem, this.simUI.player, mp5BuffOptions),\n\t\t];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildMiscConsumesPickers() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Miscellaneous</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-misc\"></div>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst miscConsumesElem = this.rootElem.querySelector('.consumes-misc') as HTMLElement;\n\n\t\tconst zanzaBuffOptions = ConsumablesInputs.makeZanzaBuffConsumesInput(relevantStatOptions(ConsumablesInputs.ZANZA_BUFF_CONSUMES_CONFIG, this.simUI));\n\t\tconst miscConsumesOptions = relevantStatOptions(ConsumablesInputs.MISC_CONSUMES_CONFIG, this.simUI);\n\n\t\tconst pickers = [\n\t\t\tbuildIconInput(miscConsumesElem, this.simUI.player, zanzaBuffOptions),\n\t\t\t...miscConsumesOptions.map(options => options.picker && new options.picker(miscConsumesElem, this.simUI.player, options.config as any, this.simUI)),\n\t\t];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildEngPickers() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Engineering</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-engi\"></div>\n\t\t\t</div>\n\t\t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst engiConsumesElem = this.rootElem.querySelector('.consumes-engi') as HTMLElement;\n\n\t\tconst explosiveOptions = ConsumablesInputs.makeExplosivesInput(relevantStatOptions(ConsumablesInputs.EXPLOSIVES_CONFIG, this.simUI), 'Explosives');\n\n\t\tconst pickers = [\n\t\t\tbuildIconInput(engiConsumesElem, this.simUI.player, ConsumablesInputs.Sapper),\n\t\t\tbuildIconInput(engiConsumesElem, this.simUI.player, explosiveOptions),\n\t\t];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter, this.simUI.player.professionChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildEnchPicker() {\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Enchanting</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-ench\">\n\t\t\t\t\t\t</div>\n\t\t\t</div>\n    \t`;\n\n\t\tconst row = this.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst enchConsumesElem = this.rootElem.querySelector('.consumes-ench') as HTMLElement;\n\n\t\tconst enchantedSigilOptions = ConsumablesInputs.makeEncanthedSigilInput(\n\t\t\trelevantStatOptions(ConsumablesInputs.ENCHANTED_SIGIL_CONFIG, this.simUI),\n\t\t\t'Enchanted Sigils',\n\t\t);\n\n\t\tconst pickers = [buildIconInput(enchConsumesElem, this.simUI.player, enchantedSigilOptions)];\n\n\t\tTypedEvent.onAny([this.simUI.player.levelChangeEmitter, this.simUI.player.professionChangeEmitter]).on(() => this.updateRow(row, pickers));\n\t\tthis.updateRow(row, pickers);\n\t}\n\n\tprivate buildPetPicker() {\n\t\tif (!this.simUI.individualConfig.petConsumeInputs?.length) return;\n\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n\t\t\t<div class=\"consumes-row input-root input-inline\">\n\t\t\t\t<label class=\"form-label\">Pet</label>\n\t\t\t\t<div class=\"consumes-row-inputs consumes-pet\"></div>\n\t\t\t</div>\n\t\t`;\n\n\t\tthis.rootElem.appendChild(fragment.children[0] as HTMLElement);\n\t\tconst petConsumesElem = this.rootElem.querySelector('.consumes-pet') as HTMLElement;\n\n\t\tthis.simUI.individualConfig.petConsumeInputs.map(iconInput => buildIconInput(petConsumesElem, this.simUI.player, iconInput));\n\t}\n\n\tprivate updateRow(rowElem: HTMLElement, pickers: (IconPicker<Player<Spec>, any> | IconEnumPicker<Player<Spec>, any> | MultiIconPicker<Player<Spec>>)[]) {\n\t\tif (!!pickers.find(p => p?.showWhen())) {\n\t\t\trowElem.classList.remove('hide');\n\t\t} else {\n\t\t\trowElem.classList.add('hide');\n\t\t}\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element, fragment, ref } from 'tsx-vanilla';\n\nimport { IndividualSimUI } from '../../individual_sim_ui';\nimport { PresetBuild } from '../../preset_utils';\nimport { APLRotation } from '../../proto/apl';\nimport { EquipmentSpec, Spec } from '../../proto/common';\nimport { TypedEvent } from '../../typed_event';\nimport { Component } from '../component';\n\nexport class PresetBuildsPicker extends Component {\n\treadonly simUI: IndividualSimUI<Spec>;\n\treadonly builds: Array<PresetBuild>;\n\n\tconstructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n\t\tsuper(parentElem, 'preset-builds-picker-root');\n\n\t\tthis.simUI = simUI;\n\t\tthis.builds = this.simUI.individualConfig.presets.builds ?? [];\n\n\t\tif (!this.builds.length) {\n\t\t\tthis.rootElem.classList.add('hide');\n\t\t\treturn;\n\t\t}\n\n\t\tconst buildsContainerRef = ref<HTMLDivElement>();\n\t\tconst infoElemRef = ref<HTMLAnchorElement>();\n\t\tthis.rootElem.appendChild(\n\t\t\t<>\n\t\t\t\t<label className=\"form-label\">\n\t\t\t\t\tPreset Builds\n\t\t\t\t\t<a href=\"javascript:void(0)\" className=\"ms-1\" ref={infoElemRef}>\n\t\t\t\t\t\t<i className=\"fa-regular fa-circle-question\" />\n\t\t\t\t\t</a>\n\t\t\t\t</label>\n\t\t\t\t<div className=\"presets-container\" ref={buildsContainerRef}></div>\n\t\t\t</>,\n\t\t);\n\n\t\tTooltip.getOrCreateInstance(infoElemRef.value!, { title: 'Preset builds apply an optimal combination of gear, talents, and rotation.' });\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tthis.builds.forEach(build => {\n\t\t\t\tconst dataElemRef = ref<HTMLButtonElement>();\n\t\t\t\tbuildsContainerRef.value!.appendChild(\n\t\t\t\t\t<button className=\"saved-data-set-chip badge rounded-pill\" ref={dataElemRef}>\n\t\t\t\t\t\t<span className=\"saved-data-set-name\" attributes={{ role: 'button' }} onclick={() => this.applyBuild(build)}>\n\t\t\t\t\t\t\t{build.name}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>,\n\t\t\t\t);\n\n\t\t\t\tconst checkActive = () => {\n\t\t\t\t\tif (this.isBuildActive(build)) {\n\t\t\t\t\t\tdataElemRef.value!.classList.add('active');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataElemRef.value!.classList.remove('active');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcheckActive();\n\t\t\t\tTypedEvent.onAny([this.simUI.player.gearChangeEmitter, this.simUI.player.talentsChangeEmitter, this.simUI.player.rotationChangeEmitter]).on(\n\t\t\t\t\tcheckActive,\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate applyBuild(build: PresetBuild) {\n\t\tconst eventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.simUI.player.setGear(eventID, this.simUI.sim.db.lookupEquipmentSpec(build.gear.gear));\n\t\t\tthis.simUI.player.setTalentsString(eventID, build.talents.data.talentsString);\n\t\t\tthis.simUI.player.setAplRotation(eventID, build.rotation.rotation.rotation!);\n\t\t});\n\t}\n\n\tprivate isBuildActive(build: PresetBuild): boolean {\n\t\treturn (\n\t\t\tEquipmentSpec.equals(build.gear.gear, this.simUI.player.getGear().asSpec()) &&\n\t\t\tbuild.talents.data.talentsString == this.simUI.player.getTalentsString() &&\n\t\t\tAPLRotation.equals(build.rotation.rotation.rotation, this.simUI.player.getResolvedAplRotation())\n\t\t);\n\t}\n}\n","import * as Tooltips from '../../constants/tooltips';\nimport { Encounter } from '../../encounter';\nimport { IndividualSimUI, InputSection } from '../../individual_sim_ui';\nimport { simLaunchStatuses } from '../../launched_sims';\nimport { Player } from '../../player';\nimport { Consumes, Debuffs, HealingModel, IndividualBuffs, ItemSwap, PartyBuffs, Profession, RaidBuffs, Spec } from '../../proto/common';\nimport { SavedEncounter, SavedSettings } from '../../proto/ui';\nimport { professionNames, raceNames } from '../../proto_utils/names';\nimport { specToEligibleRaces } from '../../proto_utils/utils';\nimport { EventID, TypedEvent } from '../../typed_event';\nimport { getEnumValues } from '../../utils';\nimport { BooleanPicker } from '../boolean_picker';\nimport { ContentBlock } from '../content_block';\nimport { EncounterPicker } from '../encounter_picker';\nimport { EnumPicker } from '../enum_picker';\nimport { IconEnumPicker } from '../icon_enum_picker';\nimport * as IconInputs from '../icon_inputs';\nimport { Input } from '../input';\nimport * as BuffDebuffInputs from '../inputs/buffs_debuffs';\nimport { relevantStatOptions } from '../inputs/stat_options';\nimport { ItemSwapPicker } from '../item_swap_picker';\nimport { MultiIconPicker, MultiIconPickerItemConfig } from '../multi_icon_picker';\nimport { NumberPicker } from '../number_picker';\nimport { SavedDataManager } from '../saved_data_manager';\nimport { SimTab } from '../sim_tab';\nimport { IsbConfig } from './../other_inputs';\nimport { ConsumesPicker } from './consumes_picker';\nimport { PresetBuildsPicker } from './preset_builds_picker';\n\nexport class SettingsTab extends SimTab {\n\tprotected simUI: IndividualSimUI<Spec>;\n\n\treadonly leftPanel: HTMLElement;\n\treadonly rightPanel: HTMLElement;\n\n\treadonly column1: HTMLElement = this.buildColumn(1, 'settings-left-col');\n\treadonly column2: HTMLElement = this.buildColumn(2, 'settings-left-col');\n\treadonly column3: HTMLElement = this.buildColumn(3, 'settings-left-col');\n\treadonly column4?: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n\t\tsuper(parentElem, simUI, { identifier: 'settings-tab', title: 'Settings' });\n\t\tthis.simUI = simUI;\n\n\t\tthis.leftPanel = document.createElement('div');\n\t\tthis.leftPanel.classList.add('settings-tab-left', 'tab-panel-left');\n\n\t\tthis.leftPanel.appendChild(this.column1);\n\t\tthis.leftPanel.appendChild(this.column2);\n\t\tthis.leftPanel.appendChild(this.column3);\n\n\t\t// The 4th column is only used in the raid sim player editor to spread out player settings\n\t\tif (this.simUI.isWithinRaidSim) {\n\t\t\tthis.column4 = this.buildColumn(4, 'settings-left-col');\n\t\t\tthis.leftPanel.appendChild(this.column4);\n\t\t}\n\n\t\tthis.rightPanel = document.createElement('div');\n\t\tthis.rightPanel.classList.add('settings-tab-right', 'tab-panel-right', 'within-raid-sim-hide');\n\n\t\tthis.contentContainer.appendChild(this.leftPanel);\n\t\tthis.contentContainer.appendChild(this.rightPanel);\n\n\t\tthis.buildTabContent();\n\t}\n\n\tprotected buildTabContent() {\n\t\tif (!this.simUI.isWithinRaidSim) {\n\t\t\tthis.buildEncounterSettings();\n\t\t}\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tthis.buildPlayerSettings();\n\t\t\tthis.buildCustomSettingsSections();\n\t\t\tthis.buildConsumesSection();\n\t\t\tthis.buildOtherSettings();\n\t\t\tthis.buildIsbSettings();\n\n\t\t\tif (!this.simUI.isWithinRaidSim) {\n\t\t\t\tthis.buildBuffsSettings();\n\t\t\t\tthis.buildWorldBuffsSettings();\n\t\t\t\tthis.buildDebuffsSettings();\n\t\t\t\tthis.buildSavedDataPickers();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate buildEncounterSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column1, 'encounter-settings', {\n\t\t\theader: { title: 'Encounter' },\n\t\t});\n\n\t\tnew EncounterPicker(contentBlock.bodyElement, this.simUI.sim.encounter, this.simUI.individualConfig.encounterPicker, this.simUI);\n\t}\n\n\tprivate buildPlayerSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column1, 'player-settings', {\n\t\t\theader: { title: 'Player' },\n\t\t});\n\n\t\tconst playerIconGroup = Input.newGroupContainer();\n\t\tplayerIconGroup.classList.add('player-icon-group', 'icon-group');\n\t\tcontentBlock.bodyElement.appendChild(playerIconGroup);\n\n\t\tthis.configureIconSection(\n\t\t\tplayerIconGroup,\n\t\t\tthis.simUI.individualConfig.playerIconInputs.map(iconInput => IconInputs.buildIconInput(playerIconGroup, this.simUI.player, iconInput)),\n\t\t\ttrue,\n\t\t);\n\n\t\tnew PresetBuildsPicker(contentBlock.bodyElement, this.simUI);\n\n\t\tconst levels = [25, 40, 50, 60].filter((_level, i) => i < simLaunchStatuses[this.simUI.player.spec].phase);\n\t\tnew EnumPicker(contentBlock.bodyElement, this.simUI.player, {\n\t\t\tlabel: 'Level',\n\t\t\tvalues: levels.map(level => {\n\t\t\t\treturn {\n\t\t\t\t\tname: `Level ${level}`,\n\t\t\t\t\tvalue: level,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: player => player.levelChangeEmitter,\n\t\t\tgetValue: player => player.getLevel(),\n\t\t\tsetValue: (eventID, player, newValue) => player.setLevel(eventID, newValue),\n\t\t});\n\n\t\tconst races = specToEligibleRaces[this.simUI.player.spec];\n\t\tnew EnumPicker(contentBlock.bodyElement, this.simUI.player, {\n\t\t\tlabel: 'Race',\n\t\t\tvalues: races.map(race => {\n\t\t\t\treturn {\n\t\t\t\t\tname: raceNames.get(race)!,\n\t\t\t\t\tvalue: race,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: player => player.raceChangeEmitter,\n\t\t\tgetValue: player => player.getRace(),\n\t\t\tsetValue: (eventID, player, newValue) => player.setRace(eventID, newValue),\n\t\t});\n\n\t\tif (this.simUI.individualConfig.playerInputs?.inputs.length) {\n\t\t\tthis.configureInputSection(contentBlock.bodyElement, this.simUI.individualConfig.playerInputs);\n\t\t}\n\n\t\tconst professionGroup = Input.newGroupContainer();\n\t\tcontentBlock.bodyElement.appendChild(professionGroup);\n\n\t\tconst professions = getEnumValues(Profession) as Array<Profession>;\n\t\tnew EnumPicker(professionGroup, this.simUI.player, {\n\t\t\tlabel: 'Profession 1',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames.get(p)!,\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: player => player.professionChangeEmitter,\n\t\t\tgetValue: player => player.getProfession1(),\n\t\t\tsetValue: (eventID, player, newValue) => player.setProfession1(eventID, newValue),\n\t\t});\n\n\t\tnew EnumPicker(professionGroup, this.simUI.player, {\n\t\t\tlabel: 'Profession 2',\n\t\t\tvalues: professions.map(p => {\n\t\t\t\treturn {\n\t\t\t\t\tname: professionNames.get(p)!,\n\t\t\t\t\tvalue: p,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: player => player.professionChangeEmitter,\n\t\t\tgetValue: player => player.getProfession2(),\n\t\t\tsetValue: (eventID, player, newValue) => player.setProfession2(eventID, newValue),\n\t\t});\n\t}\n\n\tprivate buildCustomSettingsSections() {\n\t\t(this.simUI.individualConfig.customSections || []).forEach(customSection => {\n\t\t\tconst section = customSection(this.column2, this.simUI);\n\t\t\tsection.rootElem.classList.add('custom-section');\n\t\t});\n\t}\n\n\tprivate buildConsumesSection() {\n\t\tconst column = this.simUI.isWithinRaidSim ? this.column3 : this.column2;\n\t\tconst contentBlock = new ContentBlock(column, 'consumes-settings', {\n\t\t\theader: { title: 'Consumables' },\n\t\t});\n\n\t\tnew ConsumesPicker(contentBlock.bodyElement, this.simUI);\n\t}\n\n\tprivate buildOtherSettings() {\n\t\t// const column = this.simUI.isWithinRaidSim ? this.column4 : this.column2;\n\t\tconst settings = this.simUI.individualConfig.otherInputs?.inputs.filter(\n\t\t\tinputs => !inputs.extraCssClasses || !inputs.extraCssClasses?.includes('within-raid-sim-hide'),\n\t\t);\n\n\t\tconst itemSwapConfig = this.simUI.individualConfig.itemSwapConfig;\n\n\t\tif (settings.length || itemSwapConfig?.itemSlots.length) {\n\t\t\tconst contentBlock = new ContentBlock(this.column2, 'other-settings', {\n\t\t\t\theader: { title: 'Other' },\n\t\t\t});\n\n\t\t\tif (settings.length) {\n\t\t\t\tthis.configureInputSection(contentBlock.bodyElement, this.simUI.individualConfig.otherInputs);\n\t\t\t\tcontentBlock.bodyElement.querySelectorAll('.input-root').forEach(elem => {\n\t\t\t\t\telem.classList.add('input-inline');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (itemSwapConfig?.itemSlots.length) {\n\t\t\t\tnew ItemSwapPicker(contentBlock.bodyElement, this.simUI, this.simUI.player, itemSwapConfig);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate buildIsbSettings() {\n\t\tif (!this.simUI.isWithinRaidSim) {\n\t\t\tconst contentBlock = new ContentBlock(this.column1, 'other-settings', {\n\t\t\t\theader: { title: 'Improved Shadow Bolt' },\n\t\t\t});\n\t\n\t\t\tthis.configureInputSection(contentBlock.bodyElement, IsbConfig);\n\n\t\t\tTypedEvent.onAny([this.simUI.player.talentsChangeEmitter, this.simUI.player.getRaid()!.debuffsChangeEmitter]).on(() => {\n\t\t\t\tconst isWlAndIsb = (this.simUI.player as Player<Spec.SpecWarlock>)?.getTalents().improvedShadowBolt > 0\n\t\t\t\tconst isTankWlAndIsb = (this.simUI.player as Player<Spec.SpecTankWarlock>)?.getTalents().improvedShadowBolt > 0\n\t\t\t\tconst externalIsb = this.simUI.player.getRaid()?.getDebuffs()?.improvedShadowBolt == true\n\t\t\t\tif (externalIsb || isWlAndIsb || isTankWlAndIsb) {\n\t\t\t\t\tcontentBlock.rootElem.classList.remove('hide');\n\t\t\t\t} else {\n\t\t\t\t\tcontentBlock.rootElem.classList.add('hide');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate buildBuffsSettings() {\n\t\tconst buffOptions = relevantStatOptions(BuffDebuffInputs.RAID_BUFFS_CONFIG, this.simUI);\n\n\t\tconst contentBlock = new ContentBlock(this.column3, 'buffs-settings', {\n\t\t\theader: { title: 'Raid Buffs', tooltip: Tooltips.BUFFS_SECTION },\n\t\t});\n\n\t\tthis.configureIconSection(\n\t\t\tcontentBlock.bodyElement,\n\t\t\tbuffOptions.map(options => options.picker && new options.picker(contentBlock.bodyElement, this.simUI.player, options.config as any, this.simUI)),\n\t\t);\n\t}\n\n\tprivate buildWorldBuffsSettings() {\n\t\tconst contentBlock = new ContentBlock(this.column3, 'world-buffs-settings', {\n\t\t\theader: { title: 'World Buffs', tooltip: Tooltips.WORLD_BUFFS_SECTION },\n\t\t});\n\n\t\tconst saygesOptions = relevantStatOptions(BuffDebuffInputs.SAYGES_CONFIG, this.simUI);\n\t\tnew IconEnumPicker(contentBlock.bodyElement, this.simUI.player, BuffDebuffInputs.SaygesDarkFortune(saygesOptions));\n\n\t\tconst worldBuffOptions = relevantStatOptions(BuffDebuffInputs.WORLD_BUFFS_CONFIG, this.simUI);\n\t\tthis.configureIconSection(\n\t\t\tcontentBlock.bodyElement,\n\t\t\tworldBuffOptions.map(\n\t\t\t\toptions => options.picker && new options.picker(contentBlock.bodyElement, this.simUI.player, options.config as any, this.simUI),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate buildDebuffsSettings() {\n\t\tconst debuffOptions = relevantStatOptions(BuffDebuffInputs.DEBUFFS_CONFIG, this.simUI);\n\t\tconst miscDebuffOptions = relevantStatOptions(BuffDebuffInputs.DEBUFFS_MISC_CONFIG, this.simUI);\n\n\t\tif (!debuffOptions.length && !miscDebuffOptions.length) return;\n\n\t\tconst contentBlock = new ContentBlock(this.column3, 'debuffs-settings', {\n\t\t\theader: { title: 'Debuffs', tooltip: Tooltips.DEBUFFS_SECTION },\n\t\t});\n\n\t\tthis.configureIconSection(\n\t\t\tcontentBlock.bodyElement,\n\t\t\tdebuffOptions.map(options => options.picker && new options.picker(contentBlock.bodyElement, this.simUI.player, options.config as any, this.simUI)),\n\t\t);\n\n\t\tif (miscDebuffOptions.length) {\n\t\t\tnew MultiIconPicker(\n\t\t\t\tcontentBlock.bodyElement,\n\t\t\t\tthis.simUI.player,\n\t\t\t\t{\n\t\t\t\t\tinputs: miscDebuffOptions.map(options => options.config) as Array<MultiIconPickerItemConfig<Player<Spec>>>,\n\t\t\t\t\tlabel: 'Misc Debuffs',\n\t\t\t\t},\n\t\t\t\tthis.simUI,\n\t\t\t);\n\t\t}\n\n\t\t// In case no debuffs are active, this will fire a change event to update the pickers\n\t\tthis.simUI.player.getRaid()?.debuffsChangeEmitter.emit(TypedEvent.nextEventID());\n\t}\n\n\tprivate buildSavedDataPickers() {\n\t\tconst savedEncounterManager = new SavedDataManager<Encounter, SavedEncounter>(this.rightPanel, this.simUI.sim.encounter, {\n\t\t\tlabel: 'Encounter',\n\t\t\theader: { title: 'Saved Encounters' },\n\t\t\tstorageKey: this.simUI.getSavedEncounterStorageKey(),\n\t\t\tgetData: (encounter: Encounter) => SavedEncounter.create({ encounter: encounter.toProto() }),\n\t\t\tsetData: (eventID: EventID, encounter: Encounter, newEncounter: SavedEncounter) => encounter.fromProto(eventID, newEncounter.encounter!),\n\t\t\tchangeEmitters: [this.simUI.sim.encounter.changeEmitter],\n\t\t\tequals: (a: SavedEncounter, b: SavedEncounter) => SavedEncounter.equals(a, b),\n\t\t\ttoJson: (a: SavedEncounter) => SavedEncounter.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedEncounter.fromJson(obj),\n\t\t});\n\n\t\tconst savedSettingsManager = new SavedDataManager<IndividualSimUI<any>, SavedSettings>(this.rightPanel, this.simUI, {\n\t\t\tlabel: 'Settings',\n\t\t\theader: { title: 'Saved Settings' },\n\t\t\tstorageKey: this.simUI.getSavedSettingsStorageKey(),\n\t\t\tgetData: (simUI: IndividualSimUI<any>) => {\n\t\t\t\tconst player = simUI.player;\n\t\t\t\treturn SavedSettings.create({\n\t\t\t\t\traidBuffs: simUI.sim.raid.getBuffs(),\n\t\t\t\t\tpartyBuffs: player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\t\t\tplayerBuffs: player.getBuffs(),\n\t\t\t\t\tdebuffs: simUI.sim.raid.getDebuffs(),\n\t\t\t\t\tconsumes: player.getConsumes(),\n\t\t\t\t\trace: player.getRace(),\n\t\t\t\t\tlevel: player.getLevel(),\n\t\t\t\t\tprofessions: player.getProfessions(),\n\t\t\t\t\tenableItemSwap: player.getEnableItemSwap(),\n\t\t\t\t\titemSwap: player.getItemSwapGear().toProto(),\n\t\t\t\t\treactionTimeMs: player.getReactionTime(),\n\t\t\t\t\tchannelClipDelayMs: player.getChannelClipDelay(),\n\t\t\t\t\tinFrontOfTarget: player.getInFrontOfTarget(),\n\t\t\t\t\tdistanceFromTarget: player.getDistanceFromTarget(),\n\t\t\t\t\thealingModel: player.getHealingModel(),\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetData: (eventID: EventID, simUI: IndividualSimUI<any>, newSettings: SavedSettings) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tsimUI.player.setLevel(eventID, newSettings.level);\n\t\t\t\t\tsimUI.sim.raid.setBuffs(eventID, newSettings.raidBuffs || RaidBuffs.create());\n\t\t\t\t\tsimUI.sim.raid.setDebuffs(eventID, newSettings.debuffs || Debuffs.create());\n\t\t\t\t\tconst party = simUI.player.getParty();\n\t\t\t\t\tif (party) {\n\t\t\t\t\t\tparty.setBuffs(eventID, newSettings.partyBuffs || PartyBuffs.create());\n\t\t\t\t\t}\n\t\t\t\t\tsimUI.player.setBuffs(eventID, newSettings.playerBuffs || IndividualBuffs.create());\n\t\t\t\t\tsimUI.player.setConsumes(eventID, newSettings.consumes || Consumes.create());\n\t\t\t\t\tsimUI.player.setRace(eventID, newSettings.race);\n\t\t\t\t\tsimUI.player.setProfessions(eventID, newSettings.professions);\n\t\t\t\t\tsimUI.player.setEnableItemSwap(eventID, newSettings.enableItemSwap);\n\t\t\t\t\tsimUI.player.setItemSwapGear(eventID, simUI.sim.db.lookupItemSwap(newSettings.itemSwap || ItemSwap.create()));\n\t\t\t\t\tsimUI.player.setReactionTime(eventID, newSettings.reactionTimeMs);\n\t\t\t\t\tsimUI.player.setChannelClipDelay(eventID, newSettings.channelClipDelayMs);\n\t\t\t\t\tsimUI.player.setInFrontOfTarget(eventID, newSettings.inFrontOfTarget);\n\t\t\t\t\tsimUI.player.setDistanceFromTarget(eventID, newSettings.distanceFromTarget);\n\t\t\t\t\tsimUI.player.setHealingModel(eventID, newSettings.healingModel || HealingModel.create());\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [\n\t\t\t\tthis.simUI.sim.raid.buffsChangeEmitter,\n\t\t\t\tthis.simUI.sim.raid.debuffsChangeEmitter,\n\t\t\t\tthis.simUI.player.getParty()!.buffsChangeEmitter,\n\t\t\t\tthis.simUI.player.buffsChangeEmitter,\n\t\t\t\tthis.simUI.player.consumesChangeEmitter,\n\t\t\t\tthis.simUI.player.raceChangeEmitter,\n\t\t\t\tthis.simUI.player.professionChangeEmitter,\n\t\t\t\tthis.simUI.player.itemSwapChangeEmitter,\n\t\t\t\tthis.simUI.player.miscOptionsChangeEmitter,\n\t\t\t\tthis.simUI.player.inFrontOfTargetChangeEmitter,\n\t\t\t\tthis.simUI.player.distanceFromTargetChangeEmitter,\n\t\t\t\tthis.simUI.player.healingModelChangeEmitter,\n\t\t\t],\n\t\t\tequals: (a: SavedSettings, b: SavedSettings) => SavedSettings.equals(a, b),\n\t\t\ttoJson: (a: SavedSettings) => SavedSettings.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedSettings.fromJson(obj),\n\t\t});\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedEncounterManager.loadUserData();\n\t\t\tsavedSettingsManager.loadUserData();\n\t\t});\n\t}\n\n\tprivate configureInputSection(sectionElem: HTMLElement, sectionConfig: InputSection) {\n\t\tsectionConfig.inputs.forEach(inputConfig => {\n\t\t\tif (inputConfig.type == 'number') {\n\t\t\t\tnew NumberPicker(sectionElem, this.simUI.player, inputConfig);\n\t\t\t} else if (inputConfig.type == 'boolean') {\n\t\t\t\tnew BooleanPicker(sectionElem, this.simUI.player, { ...inputConfig, reverse: true });\n\t\t\t} else if (inputConfig.type == 'enum') {\n\t\t\t\tnew EnumPicker(sectionElem, this.simUI.player, inputConfig);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate configureIconSection(sectionElem: HTMLElement, iconPickers: Array<any>, adjustColumns?: boolean) {\n\t\tif (iconPickers.length == 0) {\n\t\t\tsectionElem.classList.add('hide');\n\t\t} else if (adjustColumns) {\n\t\t\tif (iconPickers.length <= 4) {\n\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${iconPickers.length}, 1fr)`;\n\t\t\t} else if (iconPickers.length > 4 && iconPickers.length < 8) {\n\t\t\t\tsectionElem.style.gridTemplateColumns = `repeat(${Math.ceil(iconPickers.length / 2)}, 1fr)`;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { IndividualSimUI } from '../../individual_sim_ui';\nimport { Player } from '../../player';\nimport { Spec } from '../../proto/common';\nimport { SavedTalents } from '../../proto/ui';\nimport { classTalentsConfig } from '../../talents/factory';\nimport { TalentsPicker } from '../../talents/talents_picker';\nimport { EventID, TypedEvent } from '../../typed_event';\nimport { SavedDataManager } from '../saved_data_manager';\nimport { SimTab } from '../sim_tab';\n\nexport class TalentsTab extends SimTab {\n\tprotected simUI: IndividualSimUI<Spec>;\n\n\treadonly leftPanel: HTMLElement;\n\treadonly rightPanel: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, simUI: IndividualSimUI<Spec>) {\n\t\tsuper(parentElem, simUI, { identifier: 'talents-tab', title: 'Talents' });\n\t\tthis.simUI = simUI;\n\n\t\tthis.leftPanel = document.createElement('div');\n\t\tthis.leftPanel.classList.add('talents-tab-left', 'tab-panel-left');\n\t\tthis.rightPanel = document.createElement('div');\n\t\tthis.rightPanel.classList.add('talents-tab-right', 'tab-panel-right', 'within-raid-sim-hide');\n\n\t\tthis.contentContainer.appendChild(this.leftPanel);\n\t\tthis.contentContainer.appendChild(this.rightPanel);\n\n\t\tthis.buildTabContent();\n\t}\n\n\tprotected buildTabContent() {\n\t\tthis.buildTalentsPicker(this.leftPanel);\n\t\tthis.buildSavedTalentsPicker();\n\t}\n\n\tprivate buildTalentsPicker(parentElem: HTMLElement) {\n\t\tnew TalentsPicker(parentElem, this.simUI.player, {\n\t\t\tklass: this.simUI.player.getClass(),\n\t\t\ttrees: classTalentsConfig[this.simUI.player.getClass()],\n\t\t\tchangedEvent: (player: Player<any>) => player.talentsChangeEmitter,\n\t\t\tgetValue: (player: Player<any>) => player.getTalentsString(),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: string) => {\n\t\t\t\tplayer.setTalentsString(eventID, newValue);\n\t\t\t},\n\t\t\tpointsPerRow: 5,\n\t\t});\n\t}\n\n\tprivate buildSavedTalentsPicker() {\n\t\tconst savedTalentsManager = new SavedDataManager<Player<any>, SavedTalents>(this.rightPanel, this.simUI.player, {\n\t\t\tlabel: 'Talents',\n\t\t\theader: { title: 'Saved Talents' },\n\t\t\tstorageKey: this.simUI.getSavedTalentsStorageKey(),\n\t\t\tgetData: (player: Player<any>) =>\n\t\t\t\tSavedTalents.create({\n\t\t\t\t\ttalentsString: player.getTalentsString(),\n\t\t\t\t}),\n\t\t\tsetData: (eventID: EventID, player: Player<any>, newTalents: SavedTalents) => {\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\t\t\tplayer.setTalentsString(eventID, newTalents.talentsString);\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeEmitters: [this.simUI.player.talentsChangeEmitter, this.simUI.player.levelChangeEmitter],\n\t\t\tequals: (a: SavedTalents, b: SavedTalents) => SavedTalents.equals(a, b),\n\t\t\ttoJson: (a: SavedTalents) => SavedTalents.toJson(a),\n\t\t\tfromJson: (obj: any) => SavedTalents.fromJson(obj),\n\t\t});\n\n\t\tthis.simUI.sim.waitForInit().then(() => {\n\t\t\tsavedTalentsManager.loadUserData();\n\t\t\tthis.simUI.individualConfig.presets.talents.forEach(config => {\n\t\t\t\tconfig.isPreset = true;\n\t\t\t\tsavedTalentsManager.addSavedData({\n\t\t\t\t\tname: config.name,\n\t\t\t\t\tisPreset: true,\n\t\t\t\t\tdata: config.data,\n\t\t\t\t\tenableWhen: config.enableWhen,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Player } from '../player.js';\nimport { ProgressMetrics, StatWeightsResult, StatWeightValues } from '../proto/api.js';\nimport { PseudoStat, Stat, UnitStats } from '../proto/common.js';\nimport { getClassStatName } from '../proto_utils/names.js';\nimport { Stats, UnitStat } from '../proto_utils/stats.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { stDevToConf90 } from '../utils.js';\nimport { BaseModal } from './base_modal.js';\nimport { ResultsViewer } from './results_viewer.js';\n\nexport function addStatWeightsAction(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epPseudoStats: Array<PseudoStat> | undefined, epReferenceStat: Stat) {\n\tsimUI.addAction('Stat Weights', 'ep-weights-action', () => {\n\t\tnew EpWeightsMenu(simUI, epStats, epPseudoStats || [], epReferenceStat);\n\t});\n}\n\n// Create the config for modal in separate function, as constructor cannot\n// contain any logic before `super' call. Use modal-xl to accommodate the extra\n// TMI & p(death) EP in the UI.\nfunction getModalConfig(simUI: IndividualSimUI<any>) {\n\tconst baseConfig = { footer: true, scrollContents: true };\n\tif (simUI.sim.getShowThreatMetrics() && simUI.sim.getShowExperimental()) {\n\t\treturn { size: 'xl' as const, ...baseConfig };\n\t}\n\treturn baseConfig;\n}\n\nfunction scaledEpValue(stat: UnitStat, epRatios: number[], result: StatWeightsResult | null): number {\n\tif (!result) return 0;\n\n\treturn (\n\t\tepRatios[0] * stat.getProtoValue(result.dps?.epValues!) +\n\t\tepRatios[1] * stat.getProtoValue(result.hps?.epValues!) +\n\t\tepRatios[2] * stat.getProtoValue(result.tps?.epValues!) +\n\t\tepRatios[3] * stat.getProtoValue(result.dtps?.epValues!) +\n\t\tepRatios[4] * stat.getProtoValue(result.tmi?.epValues!) +\n\t\tepRatios[5] * stat.getProtoValue(result.pDeath?.epValues!)\n\t);\n}\n\nclass EpWeightsMenu extends BaseModal {\n\tprivate readonly simUI: IndividualSimUI<any>;\n\tprivate readonly container: HTMLElement;\n\tprivate readonly table: HTMLElement;\n\tprivate readonly tableBody: HTMLElement;\n\tprivate readonly resultsViewer: ResultsViewer;\n\n\tprivate statsType: string;\n\tprivate epStats: Array<Stat>;\n\tprivate epPseudoStats: Array<PseudoStat>;\n\tprivate epReferenceStat: Stat;\n\tprivate showAllStats = false;\n\n\tconstructor(simUI: IndividualSimUI<any>, epStats: Array<Stat>, epPseudoStats: Array<PseudoStat>, epReferenceStat: Stat) {\n\t\tsuper(simUI.rootElem, 'ep-weights-menu', getModalConfig(simUI));\n\t\tthis.simUI = simUI;\n\t\tthis.statsType = 'ep';\n\t\tthis.epStats = epStats;\n\t\tthis.epPseudoStats = epPseudoStats;\n\t\tthis.epReferenceStat = epReferenceStat;\n\n\t\tthis.header?.insertAdjacentHTML('afterbegin', '<h5 class=\"modal-title\">Calculate Stat Weights</h5>');\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"ep-weights-options row\">\n\t\t\t\t<div class=\"col col-sm-3\">\n\t\t\t\t\t<select class=\"ep-type-select form-select\">\n\t\t\t\t\t\t<option value=\"ep\">EP</option>\n\t\t\t\t\t\t<option value=\"weight\">Weights</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"show-all-stats-container col col-sm-3\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"ep-reference-options row experimental\">\n\t\t\t\t<div class=\"col col-sm-4 damage-metrics\">\n\t\t\t\t\t<span>DPS/TPS reference:</span>\n\t\t\t\t\t<select class=\"ref-stat-select form-select damage-metrics\">\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col col-sm-4 healing-metrics\">\n\t\t\t\t\t<span>Healing reference:</span>\n\t\t\t\t\t<select class=\"ref-stat-select form-select healing-metrics\">\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col col-sm-4 threat-metrics\">\n\t\t\t\t\t<span>Mitigation reference:</span>\n\t\t\t\t\t<select class=\"ref-stat-select form-select threat-metrics\">\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<p>The above stat selectors control which reference stat is used for EP normalisation for the different EP columns.</p>\n\t\t\t</div>\n\t\t\t<p>The 'Current EP' column displays the values currently used by the item pickers to sort items.</br>\n\t\t\tUse the <a href='javascript:void(0)' class=\"fa fa-copy\"></a> icon above the EPs to use newly calculated EPs.</p>\n\t\t\t<div class=\"results-ep-table-container modal-scroll-table\">\n\t\t\t\t<div class=\"results-pending-overlay\"></div>\n\t\t\t\t<table class=\"results-ep-table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Stat</th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>DPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"damage-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>DPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>HPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"healing-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>HPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>TPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>TPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight\">\n\t\t\t\t\t\t\t\t<span>DTPS Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep\">\n\t\t\t\t\t\t\t\t<span>DTPS EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight experimental\">\n\t\t\t\t\t\t\t\t<span>TMI Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep experimental\">\n\t\t\t\t\t\t\t\t<span>TMI EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-weight experimental\">\n\t\t\t\t\t\t\t\t<span>Death Weight</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class=\"threat-metrics type-ep experimental\">\n\t\t\t\t\t\t\t\t<span>Death EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-copy\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th style=\"text-align: center\">\n\t\t\t\t\t\t\t\t<span>Current EP</span>\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"col-action\">\n\t\t\t\t\t\t\t\t\t<i class=\"fas fa-arrows-rotate\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr class=\"ep-ratios\">\n\t\t\t\t\t\t\t<td>EP Ratio</td>\n\t\t\t\t\t\t\t<td class=\"damage-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"damage-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"healing-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"healing-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-weight experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td class=\"threat-metrics type-ratio type-ep experimental\">\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"text-align: center; vertical-align: middle;\">\n\t\t\t\t\t\t\t\t<button class=\"btn btn-primary compute-ep\">\n\t\t\t\t\t\t\t\t\t<i class=\"fas fa-calculator\"></i>\n\t\t\t\t\t\t\t\t\t<span class=\"not-tiny\">Update </span>EP\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody></tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t`;\n\t\tthis.footer!.innerHTML = `\n\t\t\t<button class=\"btn btn-primary calc-weights\">\n\t\t\t\t<i class=\"fas fa-calculator\"></i>\n\t\t\t\tCalculate\n\t\t\t</button>\n\t\t`;\n\n\t\tthis.container = this.rootElem.querySelector('.results-ep-table-container') as HTMLElement;\n\t\tthis.table = this.rootElem.querySelector('.results-ep-table') as HTMLElement;\n\t\tthis.tableBody = this.rootElem.querySelector('.results-ep-table tbody') as HTMLElement;\n\n\t\tconst resultsElem = this.rootElem.querySelector('.results-pending-overlay') as HTMLElement;\n\t\tthis.resultsViewer = new ResultsViewer(resultsElem);\n\n\t\tconst updateType = () => {\n\t\t\tif (this.statsType == 'ep') {\n\t\t\t\tthis.table.classList.remove('stats-type-weight');\n\t\t\t\tthis.table.classList.add('stats-type-ep');\n\t\t\t} else {\n\t\t\t\tthis.table.classList.add('stats-type-weight');\n\t\t\t\tthis.table.classList.remove('stats-type-ep');\n\t\t\t}\n\t\t};\n\n\t\tconst selectElem = this.rootElem.getElementsByClassName('ep-type-select')[0] as HTMLSelectElement;\n\t\tselectElem.addEventListener('input', _event => {\n\t\t\tthis.statsType = selectElem.value;\n\t\t\tupdateType();\n\t\t});\n\t\tselectElem.value = this.statsType;\n\t\tupdateType();\n\n\t\tconst getNameFromStat = (stat: Stat | undefined) => {\n\t\t\treturn stat !== undefined ? getClassStatName(stat, this.simUI.player.getClass()) : '??';\n\t\t};\n\n\t\tconst getStatFromName = (value: string) => {\n\t\t\tfor (const stat of this.epStats) {\n\t\t\t\tif (getNameFromStat(stat) == value) {\n\t\t\t\t\treturn stat;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst updateEpRefStat = () => {\n\t\t\tthis.simUI.player.epRefStatChangeEmitter.emit(TypedEvent.nextEventID());\n\t\t\tthis.simUI.prevEpSimResult = this.calculateEp(this.getPrevSimResult());\n\t\t\tthis.updateTable();\n\t\t};\n\n\t\tconst epRefSelects = this.rootElem.querySelectorAll('.ref-stat-select') as NodeListOf<HTMLSelectElement>;\n\t\tepRefSelects.forEach((epSelect: HTMLSelectElement, _idx: number) => {\n\t\t\tthis.epStats.forEach(stat => {\n\t\t\t\tepSelect.options[epSelect.options.length] = new Option(getNameFromStat(stat));\n\t\t\t});\n\t\t\tif (epSelect.classList.contains('damage-metrics')) {\n\t\t\t\tepSelect.addEventListener('input', _event => {\n\t\t\t\t\tthis.simUI.dpsRefStat = getStatFromName(epSelect.value);\n\t\t\t\t\tupdateEpRefStat();\n\t\t\t\t});\n\t\t\t\tepSelect.value = getNameFromStat(this.getDpsEpRefStat());\n\t\t\t} else if (epSelect.classList.contains('healing-metrics')) {\n\t\t\t\tepSelect.addEventListener('input', _event => {\n\t\t\t\t\tthis.simUI.healRefStat = getStatFromName(epSelect.value);\n\t\t\t\t\tupdateEpRefStat();\n\t\t\t\t});\n\t\t\t\tepSelect.value = getNameFromStat(this.getHealEpRefStat());\n\t\t\t} else if (epSelect.classList.contains('threat-metrics')) {\n\t\t\t\tepSelect.addEventListener('input', _event => {\n\t\t\t\t\tthis.simUI.tankRefStat = getStatFromName(epSelect.value);\n\t\t\t\t\tupdateEpRefStat();\n\t\t\t\t});\n\t\t\t\tepSelect.value = getNameFromStat(this.getTankEpRefStat());\n\t\t\t}\n\t\t});\n\n\t\tconst calcButton = this.rootElem.getElementsByClassName('calc-weights')[0] as HTMLElement;\n\t\tcalcButton.addEventListener('click', async _event => {\n\t\t\tconst previousContents = calcButton.innerHTML;\n\t\t\tcalcButton.classList.add('disabled');\n\t\t\tcalcButton.style.width = `${calcButton.getBoundingClientRect().width.toFixed(3)}px`;\n\t\t\tcalcButton.innerHTML = `<i class=\"fa fa-spinner fa-spin\"></i>&nbsp;Running`;\n\t\t\tthis.container.scrollTo({ top: 0 });\n\t\t\tthis.container.classList.add('pending');\n\t\t\tthis.resultsViewer.setPending();\n\t\t\tconst iterations = this.simUI.sim.getIterations();\n\t\t\tconst result = await this.simUI.player.computeStatWeights(\n\t\t\t\tTypedEvent.nextEventID(),\n\t\t\t\tthis.epStats,\n\t\t\t\tthis.epPseudoStats,\n\t\t\t\tthis.epReferenceStat,\n\t\t\t\t(progress: ProgressMetrics) => {\n\t\t\t\t\tthis.setSimProgress(progress);\n\t\t\t\t},\n\t\t\t);\n\t\t\tthis.container.classList.remove('pending');\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tcalcButton.innerHTML = previousContents;\n\t\t\tcalcButton.classList.remove('disabled');\n\t\t\tthis.simUI.prevEpIterations = iterations;\n\t\t\tthis.simUI.prevEpSimResult = this.calculateEp(result);\n\t\t\tthis.updateTable();\n\t\t});\n\n\t\tconst colActionButtons = Array.from(this.rootElem.getElementsByClassName('col-action')) as Array<HTMLSelectElement>;\n\t\tconst makeUpdateWeights = (\n\t\t\tbutton: HTMLElement,\n\t\t\tlabelTooltip: string,\n\t\t\ttooltip: string,\n\t\t\tweightsFunc: () => UnitStats | undefined,\n\t\t\tepRefStat?: () => Stat,\n\t\t) => {\n\t\t\tconst label = button.previousElementSibling as HTMLElement;\n\t\t\tconst title = () => {\n\t\t\t\tif (!epRefStat) return labelTooltip;\n\n\t\t\t\tconst refStatName = getNameFromStat(epRefStat());\n\t\t\t\treturn labelTooltip + ` Normalized by ${refStatName}.`;\n\t\t\t};\n\t\t\tconst labelTooltipConfig = {\n\t\t\t\ttoggle: 'tooltip',\n\t\t\t\thtml: true,\n\t\t\t\ttitle: title,\n\t\t\t};\n\n\t\t\tnew Tooltip(label, labelTooltipConfig);\n\t\t\tTooltip.getOrCreateInstance(button, {\n\t\t\t\ttitle: tooltip,\n\t\t\t\thtml: true,\n\t\t\t});\n\n\t\t\tbutton.addEventListener('click', _event => {\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), Stats.fromProto(weightsFunc()));\n\t\t\t\tthis.updateTable();\n\t\t\t});\n\t\t};\n\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[0],\n\t\t\t'Per-point increase in DPS (Damage Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().dps!.weights,\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[1],\n\t\t\t'EP (Equivalency Points) for DPS (Damage Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().dps!.epValues,\n\t\t\t() => this.getDpsEpRefStat(),\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[2],\n\t\t\t'Per-point increase in HPS (Healing Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().hps!.weights,\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[3],\n\t\t\t'EP (Equivalency Points) for HPS (Healing Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().hps!.epValues,\n\t\t\t() => this.getHealEpRefStat(),\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[4],\n\t\t\t'Per-point increase in TPS (Threat Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().tps!.weights,\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[5],\n\t\t\t'EP (Equivalency Points) for TPS (Threat Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().tps!.epValues,\n\t\t\t() => this.getDpsEpRefStat(),\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[6],\n\t\t\t'Per-point increase in DTPS (Damage Taken Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().dtps!.weights,\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[7],\n\t\t\t'EP (Equivalency Points) for DTPS (Damage Taken Per Second) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().dtps!.epValues,\n\t\t\t() => this.getTankEpRefStat(),\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[8],\n\t\t\t'Per-point decrease in TMI (Theck-Meloree Index) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().tmi!.weights,\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[9],\n\t\t\t'EP (Equivalency Points) for TMI (Theck-Meloree Index) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().tmi!.epValues,\n\t\t\t() => this.getTankEpRefStat(),\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[10],\n\t\t\t'Per-point decrease in p(death) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().pDeath!.weights,\n\t\t);\n\t\tmakeUpdateWeights(\n\t\t\tcolActionButtons[11],\n\t\t\t'EP (Equivalency Points) for p(death) for each stat.',\n\t\t\t'Copy to Current EP',\n\t\t\t() => this.getPrevSimResult().pDeath!.epValues,\n\t\t\t() => this.getTankEpRefStat(),\n\t\t);\n\t\tmakeUpdateWeights(colActionButtons[12], 'Current EP Weights. Used to sort the gear selector menus.', 'Restore Default EP', () =>\n\t\t\tthis.simUI.individualConfig.defaults.epWeights.toProto(),\n\t\t);\n\n\t\tconst showAllStatsContainer = this.rootElem.getElementsByClassName('show-all-stats-container')[0] as HTMLElement;\n\t\tnew BooleanPicker(showAllStatsContainer, this, {\n\t\t\tlabel: 'Show All Stats',\n\t\t\tinline: true,\n\t\t\tchangedEvent: () => new TypedEvent(),\n\t\t\tgetValue: () => this.showAllStats,\n\t\t\tsetValue: (eventID: EventID, menu: EpWeightsMenu, newValue: boolean) => {\n\t\t\t\tthis.showAllStats = newValue;\n\t\t\t\tthis.updateTable();\n\t\t\t},\n\t\t});\n\n\t\tthis.updateTable();\n\n\t\tconst makeEpRatioCell = (cell: HTMLElement, idx: number) => {\n\t\t\tnew NumberPicker(cell, this.simUI.player, {\n\t\t\t\tfloat: true,\n\t\t\t\tchangedEvent: (player: Player<any>) => player.epRatiosChangeEmitter,\n\t\t\t\tgetValue: (_player: Player<any>) => this.simUI.player.getEpRatios()[idx],\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\t\tconst epRatios = player.getEpRatios();\n\t\t\t\t\tepRatios[idx] = newValue;\n\t\t\t\t\tplayer.setEpRatios(eventID, epRatios);\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t\tconst epRatioCells = this.body.querySelectorAll('.type-ratio.type-ep') as NodeListOf<HTMLElement>;\n\t\tepRatioCells.forEach(makeEpRatioCell);\n\t\tthis.simUI.player.epRatiosChangeEmitter.on(_eventID => this.updateTable());\n\n\t\tconst weightRatioCells = this.body.querySelectorAll('.type-ratio.type-weight') as NodeListOf<HTMLElement>;\n\t\tweightRatioCells.forEach(makeEpRatioCell);\n\n\t\tconst updateButton = this.rootElem.getElementsByClassName('compute-ep')[0] as HTMLElement;\n\t\tTooltip.getOrCreateInstance(updateButton, {\n\t\t\ttitle: 'Compute Weighted EP',\n\t\t});\n\n\t\tupdateButton.addEventListener('click', _event => {\n\t\t\tconst results = this.getPrevSimResult();\n\t\t\tconst epRatios = this.simUI.player.getEpRatios();\n\t\t\tif (this.statsType == 'ep') {\n\t\t\t\tconst scaledDpsEp = Stats.fromProto(results.dps!.epValues).scale(epRatios[0]);\n\t\t\t\tconst scaledHpsEp = Stats.fromProto(results.hps!.epValues).scale(epRatios[1]);\n\t\t\t\tconst scaledTpsEp = Stats.fromProto(results.tps!.epValues).scale(epRatios[2]);\n\t\t\t\tconst scaledDtpsEp = Stats.fromProto(results.dtps!.epValues).scale(epRatios[3]);\n\t\t\t\tconst scaledTmiEp = Stats.fromProto(results.tmi!.epValues).scale(epRatios[4]);\n\t\t\t\tconst scaledPDeathEp = Stats.fromProto(results.pDeath!.epValues).scale(epRatios[5]);\n\t\t\t\tconst newEp = scaledDpsEp.add(scaledHpsEp).add(scaledTpsEp).add(scaledDtpsEp).add(scaledTmiEp).add(scaledPDeathEp);\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), newEp);\n\t\t\t} else {\n\t\t\t\tconst scaledDpsWeights = Stats.fromProto(results.dps!.weights).scale(epRatios[0]);\n\t\t\t\tconst scaledHpsWeights = Stats.fromProto(results.hps!.weights).scale(epRatios[1]);\n\t\t\t\tconst scaledTpsWeights = Stats.fromProto(results.tps!.weights).scale(epRatios[2]);\n\t\t\t\tconst scaledDtpsWeights = Stats.fromProto(results.dtps!.weights).scale(epRatios[3]);\n\t\t\t\tconst scaledTmiWeights = Stats.fromProto(results.tmi!.weights).scale(epRatios[4]);\n\t\t\t\tconst scaledPDeathWeights = Stats.fromProto(results.pDeath!.weights).scale(epRatios[5]);\n\t\t\t\tconst newWeights = scaledDpsWeights\n\t\t\t\t\t.add(scaledHpsWeights)\n\t\t\t\t\t.add(scaledTpsWeights)\n\t\t\t\t\t.add(scaledDtpsWeights)\n\t\t\t\t\t.add(scaledTmiWeights)\n\t\t\t\t\t.add(scaledPDeathWeights);\n\t\t\t\tthis.simUI.player.setEpWeights(TypedEvent.nextEventID(), newWeights);\n\t\t\t}\n\t\t\tthis.updateTable();\n\t\t});\n\t}\n\n\tprivate setSimProgress(progress: ProgressMetrics) {\n\t\tthis.resultsViewer.setContent(`\n\t\t\t<div class=\"results-sim\">\n\t\t\t\t<div class=\"\"> ${progress.completedSims} / ${progress.totalSims}<br>simulations complete</div>\n\t\t\t\t<div class=\"\">\n\t\t\t\t\t${progress.completedIterations} / ${progress.totalIterations}<br>iterations complete\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\t}\n\n\tprivate updateTable() {\n\t\tthis.tableBody.innerHTML = ``;\n\n\t\tEpWeightsMenu.epUnitStats.forEach(stat => {\n\t\t\t// Don't show extra stats when 'Show all stats' is not selected\n\t\t\tif (\n\t\t\t\t(!this.showAllStats && stat.isStat() && !this.epStats.includes(stat.getStat())) ||\n\t\t\t\t(stat.isPseudoStat() && !this.epPseudoStats.includes(stat.getPseudoStat()))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst row = this.makeTableRow(stat);\n\t\t\tthis.tableBody.appendChild(row);\n\t\t});\n\t}\n\n\tprivate makeTableRow(stat: UnitStat): HTMLElement {\n\t\tconst row = document.createElement('tr');\n\t\tconst result = this.simUI.prevEpSimResult;\n\t\tconst epRatios = this.simUI.player.getEpRatios();\n\t\tconst rowTotalEp = scaledEpValue(stat, epRatios, result);\n\t\trow.innerHTML = `\n\t\t\t<td>${stat.getName(this.simUI.player.getClass())}</td>\n\t\t\t${this.makeTableRowCells(stat, result?.dps, 'damage-metrics', rowTotalEp, epRatios[0])}\n\t\t\t${this.makeTableRowCells(stat, result?.hps, 'healing-metrics', rowTotalEp, epRatios[1])}\n\t\t\t${this.makeTableRowCells(stat, result?.tps, 'threat-metrics', rowTotalEp, epRatios[2])}\n\t\t\t${this.makeTableRowCells(stat, result?.dtps, 'threat-metrics', rowTotalEp, epRatios[3])}\n\t\t\t${this.makeTableRowCells(stat, result?.tmi, 'threat-metrics experimental', rowTotalEp, epRatios[4])}\n\t\t\t${this.makeTableRowCells(stat, result?.pDeath, 'threat-metrics experimental', rowTotalEp, epRatios[5])}\n\t\t\t<td class=\"current-ep\"></td>\n\t\t`;\n\n\t\tconst currentEpCell = row.querySelector('.current-ep') as HTMLElement;\n\t\tnew NumberPicker(currentEpCell, this.simUI.player, {\n\t\t\tfloat: true,\n\t\t\tchangedEvent: (player: Player<any>) => player.epWeightsChangeEmitter,\n\t\t\tgetValue: (_player: Player<any>) => this.simUI.player.getEpWeights().getUnitStat(stat),\n\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: number) => {\n\t\t\t\tconst epWeights = player.getEpWeights().withUnitStat(stat, newValue);\n\t\t\t\tplayer.setEpWeights(eventID, epWeights);\n\t\t\t},\n\t\t});\n\n\t\treturn row;\n\t}\n\n\tprivate makeTableRowCells(stat: UnitStat, statWeights: StatWeightValues | undefined, className: string, epTotal: number, epRatio: number): string {\n\t\tlet weightCell, epCell;\n\t\tif (statWeights) {\n\t\t\tconst weightAvg = stat.getProtoValue(statWeights.weights!);\n\t\t\tconst weightStdev = stat.getProtoValue(statWeights.weightsStdev!);\n\t\t\tweightCell = this.makeTableCellContents(weightAvg, weightStdev);\n\n\t\t\tconst epAvg = stat.getProtoValue(statWeights.epValues!);\n\t\t\tconst epStdev = stat.getProtoValue(statWeights.epValuesStdev!);\n\t\t\tepCell = this.makeTableCellContents(epAvg, epStdev);\n\t\t} else {\n\t\t\tweightCell = `<span class=\"results-avg notapplicable\">N/A</span>`;\n\t\t\tepCell = weightCell;\n\t\t}\n\n\t\tconst template = document.createElement('template');\n\t\ttemplate.innerHTML = `\n\t\t\t<td class=\"stdev-cell ${className} type-weight\">\n\t\t\t\t${weightCell}\n\t\t\t</td>\n\t\t\t<td class=\"stdev-cell ${className} type-ep\">\n\t\t\t\t${epCell}\n\t\t\t</td>\n\t\t`;\n\n\t\tif (!statWeights) return template.innerHTML;\n\n\t\tif (epRatio == 0) {\n\t\t\tconst cells = template.content.querySelectorAll('.stdev-cell');\n\t\t\tcells.forEach(cell => cell.classList.add('unused-ep'));\n\t\t\treturn template.innerHTML;\n\t\t}\n\n\t\tconst epCurrent = this.simUI.player.getEpWeights().getUnitStat(stat);\n\t\tconst epDelta = epTotal - epCurrent;\n\n\t\tconst epAvgElem = template.content.querySelector('.type-ep .results-avg') as HTMLElement;\n\t\tif (epDelta.toFixed(2) == '0.00')\n\t\t\tepAvgElem; // no-op\n\t\telse if (epDelta > 0) epAvgElem.classList.add('positive');\n\t\telse if (epDelta < 0) epAvgElem.classList.add('negative');\n\n\t\treturn template.innerHTML;\n\t}\n\n\tprivate makeTableCellContents(value: number, stdev: number): string {\n\t\tconst iterations = this.simUI.prevEpIterations || 1;\n\t\treturn `\n\t\t\t<span class=\"results-avg\">${value.toFixed(2)}</span>\n\t\t\t<span class=\"results-stdev\">\n\t\t\t\t(<i class=\"fas fa-plus-minus fa-xs\"></i>${stDevToConf90(stdev, iterations).toFixed(2)})\n\t\t\t</span>\n\t\t`;\n\t}\n\n\tprivate calculateEp(weights: StatWeightsResult) {\n\t\tconst result = StatWeightsResult.clone(weights);\n\t\tconst normaliseValue = (refStat: Stat, values: StatWeightValues) => {\n\t\t\tconst refUnitStat = UnitStat.fromStat(refStat);\n\t\t\tconst refWeight = refUnitStat.getProtoValue(values.weights!);\n\t\t\tconst refStdev = refUnitStat.getProtoValue(values.weightsStdev!);\n\t\t\tEpWeightsMenu.epUnitStats.forEach(stat => {\n\t\t\t\tconst value = stat.getProtoValue(values.weights!);\n\t\t\t\tstat.setProtoValue(values.epValues!, refWeight == 0 ? 0 : value / refWeight);\n\n\t\t\t\tconst valueStdev = stat.getProtoValue(values.weightsStdev!);\n\t\t\t\tstat.setProtoValue(values.epValuesStdev!, refStdev == 0 ? 0 : valueStdev / refStdev);\n\t\t\t});\n\t\t};\n\n\t\tif (this.simUI.dpsRefStat !== undefined) {\n\t\t\tnormaliseValue(this.simUI.dpsRefStat, result.dps!);\n\t\t\tnormaliseValue(this.simUI.dpsRefStat, result.tps!);\n\t\t}\n\t\tif (this.simUI.healRefStat !== undefined) normaliseValue(this.simUI.healRefStat, result.hps!);\n\t\tif (this.simUI.tankRefStat !== undefined) {\n\t\t\tnormaliseValue(this.simUI.tankRefStat, result.dtps!);\n\t\t\tnormaliseValue(this.simUI.tankRefStat, result.tmi!);\n\t\t\tnormaliseValue(this.simUI.tankRefStat, result.pDeath!);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getDpsEpRefStat(): Stat {\n\t\treturn this.simUI.dpsRefStat !== undefined ? this.simUI.dpsRefStat : this.epReferenceStat;\n\t}\n\n\tprivate getHealEpRefStat(): Stat {\n\t\treturn this.simUI.healRefStat !== undefined ? this.simUI.healRefStat : this.epReferenceStat;\n\t}\n\n\tprivate getTankEpRefStat(): Stat {\n\t\treturn this.simUI.tankRefStat !== undefined ? this.simUI.tankRefStat : Stat.StatArmor;\n\t}\n\n\tprivate getPrevSimResult(): StatWeightsResult {\n\t\treturn (\n\t\t\tthis.simUI.prevEpSimResult ||\n\t\t\tStatWeightsResult.create({\n\t\t\t\tdps: {\n\t\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t\t},\n\t\t\t\thps: {\n\t\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t\t},\n\t\t\t\ttps: {\n\t\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t\t},\n\t\t\t\tdtps: {\n\t\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t\t},\n\t\t\t\ttmi: {\n\t\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t\t},\n\t\t\t\tpDeath: {\n\t\t\t\t\tweights: new Stats().toProto(),\n\t\t\t\t\tweightsStdev: new Stats().toProto(),\n\t\t\t\t\tepValues: new Stats().toProto(),\n\t\t\t\t\tepValuesStdev: new Stats().toProto(),\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate static epUnitStats: Array<UnitStat> = UnitStat.getAll().filter(stat => {\n\t\tif (stat.isStat()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn [PseudoStat.PseudoStatMainHandDps, PseudoStat.PseudoStatOffHandDps, PseudoStat.PseudoStatRangedDps].includes(stat.getPseudoStat());\n\t\t}\n\t});\n}\n","import { SimUI } from '../sim_ui.js';\nimport { Sim } from '../sim.js';\nimport { EventID, TypedEvent } from '../typed_event.js';\nimport { wowheadSupportedLanguages } from '../constants/lang.js';\nimport { BooleanPicker } from '../components/boolean_picker.js';\nimport { EnumPicker } from '../components/enum_picker.js';\nimport { NumberPicker } from '../components/number_picker.js';\nimport { BaseModal } from './base_modal.js';\nimport { Tooltip } from 'bootstrap';\n\nexport class SettingsMenu extends BaseModal {\n\tprivate readonly simUI: SimUI;\n\n\tconstructor(parent: HTMLElement, simUI: SimUI) {\n\t\tsuper(parent, 'settings-menu', { title: \"Options\", footer: true });\n\t\tthis.simUI = simUI;\n\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"picker-group\">\n\t\t\t\t<div class=\"fixed-rng-seed-container\">\n\t\t\t\t\t<div class=\"fixed-rng-seed\"></div>\n\t\t\t\t\t<div class=\"form-text\">\n\t\t\t\t\t\t<span>Last used RNG seed:</span>&nbsp;<span class=\"last-used-rng-seed\">0</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"language-picker within-raid-sim-hide\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"show-threat-metrics-picker w-50 pe-2\"></div>\n\t\t\t<div class=\"show-experimental-picker w-50 pe-2\"></div>\n\t\t`;\n\t\tthis.footer!.innerHTML = `\n\t\t\t<button\n\t\t\t\tclass=\"restore-defaults-button btn btn-primary\"\n\t\t\t>Restore Defaults</button>\n\t\t`\n\n\t\tconst restoreDefaultsButton = this.rootElem.getElementsByClassName('restore-defaults-button')[0] as HTMLElement;\n\t\tTooltip.getOrCreateInstance(restoreDefaultsButton, {\n\t\t\ttitle: \"Restores all default settings (gear, consumes, buffs, talents, EP weights, etc). Saved settings are preserved.\"\n\t\t});\n\t\trestoreDefaultsButton.addEventListener('click', event => {\n\t\t\tthis.simUI.applyDefaults(TypedEvent.nextEventID());\n\t\t});\n\n\t\tconst fixedRngSeed = this.rootElem.getElementsByClassName('fixed-rng-seed')[0] as HTMLElement;\n\t\tnew NumberPicker(fixedRngSeed, this.simUI.sim, {\n\t\t\tlabel: 'Fixed RNG Seed',\n\t\t\tlabelTooltip: 'Seed value for the random number generator used during sims, or 0 to use different randomness each run. Use this to share exact sim results or for debugging.',\n\t\t\textraCssClasses: ['mb-0'],\n\t\t\tchangedEvent: (sim: Sim) => sim.fixedRngSeedChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getFixedRngSeed(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setFixedRngSeed(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst lastUsedRngSeed = this.rootElem.getElementsByClassName('last-used-rng-seed')[0] as HTMLElement;\n\t\tlastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed());\n\t\tthis.simUI.sim.lastUsedRngSeedChangeEmitter.on(() => lastUsedRngSeed.textContent = String(this.simUI.sim.getLastUsedRngSeed()));\n\n\t\tconst language = this.rootElem.getElementsByClassName('language-picker')[0] as HTMLElement;\n\t\tconst langs = Object.keys(wowheadSupportedLanguages);\n\t\tconst defaultLang = langs.indexOf('en');\n\t\tconst languagePicker = new EnumPicker(language, this.simUI.sim, {\n\t\t\tlabel: 'Language',\n\t\t\tlabelTooltip: 'Controls the language for Wowhead tooltips.',\n\t\t\tvalues: langs.map((lang, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: wowheadSupportedLanguages[lang],\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tchangedEvent: (sim: Sim) => sim.languageChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => {\n\t\t\t\tconst idx = langs.indexOf(sim.getLanguage());\n\t\t\t\treturn idx == -1 ? defaultLang : idx;\n\t\t\t},\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setLanguage(eventID, langs[newValue] || 'en');\n\t\t\t},\n\t\t});\n\t\t// Refresh page after language change, to apply the changes.\n\t\tlanguagePicker.changeEmitter.on(() => setTimeout(() => location.reload(), 100));\n\n\t\tconst showThreatMetrics = this.rootElem.getElementsByClassName('show-threat-metrics-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showThreatMetrics, this.simUI.sim, {\n\t\t\tlabel: 'Show Threat/Tank Options',\n\t\t\tlabelTooltip: 'Shows all options and metrics relevant to tanks, like TPS/DTPS.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: (sim: Sim) => sim.showThreatMetricsChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowThreatMetrics(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowThreatMetrics(eventID, newValue);\n\t\t\t},\n\t\t});\n\n\t\tconst showExperimental = this.rootElem.getElementsByClassName('show-experimental-picker')[0] as HTMLElement;\n\t\tnew BooleanPicker(showExperimental, this.simUI.sim, {\n\t\t\tlabel: 'Show Experimental',\n\t\t\tlabelTooltip: 'Shows experimental options, if there are any active experiments.',\n\t\t\tinline: true,\n\t\t\tchangedEvent: (sim: Sim) => sim.showExperimentalChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getShowExperimental(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: boolean) => {\n\t\t\t\tsim.setShowExperimental(eventID, newValue);\n\t\t\t},\n\t\t});\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element } from 'tsx-vanilla';\n\nimport { Component } from './component';\n\nexport class SocialLinks extends Component {\n\tstatic buildDiscordLink(): Element {\n\t\tconst anchor = (\n\t\t\t<a\n\t\t\t\thref=\"https://discord.gg/p3DgvmnDCS\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\tclassName=\"discord-link link-alt\"\n\t\t\t\tdataset={{ bsToggle: 'tooltip', bsTitle: 'Join us on Discord' }}>\n\t\t\t\t<i className=\"fab fa-discord fa-lg\" />\n\t\t\t</a>\n\t\t);\n\t\tTooltip.getOrCreateInstance(anchor);\n\t\treturn anchor;\n\t}\n\n\tstatic buildGitHubLink(): Element {\n\t\tconst anchor = (\n\t\t\t<a\n\t\t\t\thref=\"https://github.com/wowsims/sod\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\tclassName=\"github-link link-alt\"\n\t\t\t\tdataset={{ bsToggle: 'tooltip', bsTitle: 'Contribute on GitHub' }}>\n\t\t\t\t<i className=\"fab fa-github fa-lg\" />\n\t\t\t</a>\n\t\t);\n\t\tTooltip.getOrCreateInstance(anchor);\n\t\treturn anchor;\n\t}\n\n\tstatic buildPatreonLink(): Element {\n\t\tconst anchor = (\n\t\t\t<a\n\t\t\t\thref=\"https://patreon.com/wowsims\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\tclassName=\"patreon-link link-alt\"\n\t\t\t\tdataset={{ bsToggle: 'tooltip', bsTitle: 'Support us on Patreon' }}>\n\t\t\t\t<i className=\"fab fa-patreon fa-lg\" /> Patreon\n\t\t\t</a>\n\t\t);\n\t\tTooltip.getOrCreateInstance(anchor);\n\t\treturn anchor;\n\t}\n}\n","import { Tooltip } from 'bootstrap';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { element } from 'tsx-vanilla';\n\nimport { SimUI } from '../sim_ui';\nimport { Component } from './component';\nimport { SettingsMenu } from './settings_menu';\nimport { SimTab } from './sim_tab';\nimport { SocialLinks } from './social_links';\n\ninterface ToolbarLinkArgs {\n\tparent: HTMLElement;\n\thref?: string;\n\ttext?: string;\n\ticon?: string;\n\ttooltip?: string | HTMLElement;\n\tclasses?: string;\n\tonclick?: () => void;\n}\n\nexport class SimHeader extends Component {\n\tprivate simUI: SimUI;\n\n\tprivate simTabsContainer: HTMLElement;\n\tprivate simToolbar: HTMLElement;\n\tprivate knownIssuesLink: HTMLElement;\n\tprivate knownIssuesContent: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, simUI: SimUI) {\n\t\tsuper(parentElem, 'sim-header');\n\t\tthis.simUI = simUI;\n\t\tthis.simTabsContainer = this.rootElem.querySelector('.sim-tabs') as HTMLElement;\n\t\tthis.simToolbar = this.rootElem.querySelector('.sim-toolbar') as HTMLElement;\n\n\t\tthis.knownIssuesContent = (<ul className=\"text-start ps-3 mb-0\"></ul>) as HTMLElement;\n\t\tthis.knownIssuesLink = this.addKnownIssuesLink();\n\t\tthis.addBugReportLink();\n\t\tthis.addDownloadBinaryLink();\n\t\tthis.addSimOptionsLink();\n\t\tthis.addSocialLinks();\n\n\t\t// Allow styling the sticky header\n\t\tnew IntersectionObserver(([e]) => e.target.classList.toggle('stuck', e.intersectionRatio < 1), { threshold: [1] }).observe(this.rootElem);\n\t}\n\n\tactivateTab(className: string) {\n\t\t(this.simTabsContainer.getElementsByClassName(className)[0] as HTMLElement).click();\n\t}\n\n\taddTab(title: string, contentId: string) {\n\t\tconst isFirstTab = this.simTabsContainer.children.length == 0;\n\n\t\tconst classes = `${contentId} nav-item`;\n\t\tconst tab = (\n\t\t\t<li className={classes} attributes={{ role: 'presentation' }}>\n\t\t\t\t<a\n\t\t\t\t\tclassName={`nav-link ${isFirstTab && 'active'}`}\n\t\t\t\t\tdataset={{\n\t\t\t\t\t\tbsToggle: 'tab',\n\t\t\t\t\t\tbsTarget: `#${contentId}`,\n\t\t\t\t\t}}\n\t\t\t\t\tattributes={{\n\t\t\t\t\t\trole: 'tab',\n\t\t\t\t\t\t'aria-selected': isFirstTab,\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"button\">\n\t\t\t\t\t{title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t\ttab.setAttribute('aria-controls', contentId);\n\n\t\tthis.simTabsContainer.appendChild(tab);\n\t}\n\n\taddSimTabLink(tab: SimTab) {\n\t\tconst isFirstTab = this.simTabsContainer.children.length == 0;\n\n\t\ttab.navLink.setAttribute('aria-selected', isFirstTab.toString());\n\n\t\tif (isFirstTab) tab.navLink.classList.add('active', 'show');\n\n\t\tthis.simTabsContainer.appendChild(tab.navItem);\n\t}\n\n\taddImportLink(label: string, onClick: (parent: HTMLElement) => void, hideInRaidSim?: boolean) {\n\t\tthis.addImportExportLink('import-dropdown', label, onClick, hideInRaidSim);\n\t}\n\taddExportLink(label: string, onClick: (parent: HTMLElement) => void, hideInRaidSim?: boolean) {\n\t\tthis.addImportExportLink('export-dropdown', label, onClick, hideInRaidSim);\n\t}\n\tprivate addImportExportLink(cssClass: string, label: string, onClick: (parent: HTMLElement) => void, hideInRaidSim?: boolean) {\n\t\tconst dropdownElem = this.rootElem.getElementsByClassName(cssClass)[0] as HTMLElement;\n\t\tconst menuElem = dropdownElem.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n\n\t\tconst itemElem = (\n\t\t\t<li>\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclassName=\"dropdown-item\"\n\t\t\t\t\tattributes={{\n\t\t\t\t\t\trole: 'button',\n\t\t\t\t\t}}>\n\t\t\t\t\t{label}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\n\t\tconst linkElem = itemElem.children[0];\n\t\tlinkElem.addEventListener('click', () => onClick(menuElem));\n\t\tmenuElem.appendChild(itemElem);\n\t}\n\n\tprivate addToolbarLink(args: ToolbarLinkArgs): HTMLElement {\n\t\tconst item = (\n\t\t\t<div className=\"sim-toolbar-item\">\n\t\t\t\t<a href={args.href ? args.href : 'javascript:void(0)'} className={args.classes} target={args.href ? '_blank' : '_self'}>\n\t\t\t\t\t{args.icon && <i className={args.icon}></i>}\n\t\t\t\t\t{args.text ? ` ${args.text} ` : ''}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\n\t\tconst link = item.children[0];\n\n\t\tif (args.onclick) {\n\t\t\tlink.addEventListener('click', () => {\n\t\t\t\t// Typescript is requiring this even though the condition is being done already above\n\t\t\t\tif (args.onclick) args.onclick();\n\t\t\t});\n\t\t}\n\n\t\tif (args.tooltip) {\n\t\t\tnew Tooltip(link, {\n\t\t\t\tplacement: 'bottom',\n\t\t\t\ttitle: args.tooltip,\n\t\t\t\thtml: true,\n\t\t\t});\n\t\t}\n\n\t\treturn args.parent.appendChild(item) as HTMLElement;\n\t}\n\n\tprivate addKnownIssuesLink(): HTMLElement {\n\t\treturn this.addToolbarLink({\n\t\t\tparent: this.simToolbar,\n\t\t\ttext: 'Known Issues',\n\t\t\ttooltip: this.knownIssuesContent,\n\t\t\tclasses: 'known-issues link-danger hide',\n\t\t}).children[0] as HTMLElement;\n\t}\n\n\taddKnownIssue(issue: string) {\n\t\tthis.knownIssuesContent.appendChild(<li>{issue}</li>);\n\t\tthis.knownIssuesLink.classList.remove('hide');\n\t\tTooltip.getInstance(this.knownIssuesLink)?.setContent({\n\t\t\t'.tooltip-inner': this.knownIssuesContent,\n\t\t});\n\t}\n\n\tprivate addBugReportLink() {\n\t\tthis.addToolbarLink({\n\t\t\thref: 'https://github.com/wowsims/sod/issues/new/choose',\n\t\t\tparent: this.simToolbar,\n\t\t\ticon: 'fas fa-bug fa-lg',\n\t\t\ttooltip: 'Report a bug or<br>Request a feature',\n\t\t});\n\t}\n\n\tprivate addDownloadBinaryLink() {\n\t\tconst href = 'https://github.com/wowsims/sod/releases';\n\t\tconst icon = 'fas fa-gauge-high fa-lg';\n\t\tconst parent = this.simToolbar;\n\n\t\tif (document.location.href.includes('localhost')) {\n\t\t\tfetch('/version').then(resp => {\n\t\t\t\tresp.json()\n\t\t\t\t\t.then(versionInfo => {\n\t\t\t\t\t\tif (versionInfo.outdated == 2) {\n\t\t\t\t\t\t\tthis.addToolbarLink({\n\t\t\t\t\t\t\t\thref: href,\n\t\t\t\t\t\t\t\tparent: parent,\n\t\t\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\t\t\ttooltip: 'Newer version of simulator available for download',\n\t\t\t\t\t\t\t\tclasses: 'downbin link-danger',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(_error => {\n\t\t\t\t\t\tconsole.warn('No version info found!');\n\t\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.addToolbarLink({\n\t\t\t\thref: href,\n\t\t\t\tparent: parent,\n\t\t\t\ticon: icon,\n\t\t\t\ttooltip: 'Download simulator for faster simulating',\n\t\t\t\tclasses: 'downbin',\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate addSimOptionsLink() {\n\t\tthis.addToolbarLink({\n\t\t\tparent: this.simToolbar,\n\t\t\ticon: 'fas fa-cog fa-lg',\n\t\t\ttooltip: 'Show Sim Options',\n\t\t\tclasses: 'sim-options',\n\t\t\tonclick: () => new SettingsMenu(this.simUI.rootElem, this.simUI),\n\t\t});\n\t}\n\n\tprivate addSocialLinks() {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.classList.add('sim-toolbar-socials');\n\t\tthis.simToolbar.appendChild(container);\n\n\t\tthis.addDiscordLink(container);\n\t\tthis.addGitHubLink(container);\n\t\tthis.addPatreonLink(container);\n\t}\n\n\tprivate addDiscordLink(container: HTMLElement) {\n\t\tcontainer.appendChild(<div className=\"sim-toolbar-item\">{SocialLinks.buildDiscordLink()}</div>);\n\t}\n\n\tprivate addGitHubLink(container: HTMLElement) {\n\t\tcontainer.appendChild(<div className=\"sim-toolbar-item\">{SocialLinks.buildGitHubLink()}</div>);\n\t}\n\n\tprivate addPatreonLink(container: HTMLElement) {\n\t\tcontainer.appendChild(<div className=\"sim-toolbar-item\">{SocialLinks.buildPatreonLink()}</div>);\n\t}\n\n\tprotected customRootElement(): HTMLElement {\n\t\treturn (\n\t\t\t<header className=\"sim-header\">\n\t\t\t\t<div className=\"sim-header-container\">\n\t\t\t\t\t<ul className=\"sim-tabs nav nav-tabs\" attributes={{ role: 'tablist' }}></ul>\n\t\t\t\t\t<div className=\"import-export within-raid-sim-hide\">\n\t\t\t\t\t\t<div className=\"dropdown sim-dropdown-menu import-dropdown\">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\t\t\tclassName=\"import-link\"\n\t\t\t\t\t\t\t\tattributes={{ role: 'button', 'aria-expanded': 'false' }}\n\t\t\t\t\t\t\t\tdataset={{ bsToggle: 'dropdown', bsDisplay: 'dynamic' }}>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-download\"></i>\n\t\t\t\t\t\t\t\t{' Import '}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<ul className=\"dropdown-menu\"></ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"dropdown sim-dropdown-menu export-dropdown\">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\t\t\t\tclassName=\"export-link\"\n\t\t\t\t\t\t\t\tattributes={{ role: 'button', 'aria-expanded': 'false' }}\n\t\t\t\t\t\t\t\tdataset={{ bsToggle: 'dropdown', bsDisplay: 'dynamic' }}>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-right-from-bracket\"></i>\n\t\t\t\t\t\t\t\t{' Export '}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<ul className=\"dropdown-menu\"></ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sim-toolbar\"></div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t) as HTMLElement;\n\t}\n}\n","import {\n\tgetLaunchedSimsForClass,\n\tLaunchStatus,\n\traidSimStatus,\n\tsimLaunchStatuses,\n} from '../launched_sims.js';\nimport { Class, Spec } from '../proto/common.js';\nimport {\n\tclassNames,\n\tgetSpecSiteUrl,\n\tnaturalClassOrder,\n\traidSimIcon,\n\traidSimLabel,\n\traidSimSiteUrl,\n\tspecNames,\n\tspecToClass,\n\ttextCssClassForClass,\n\ttextCssClassForSpec,\n\ttitleIcons,\n} from '../proto_utils/utils.js';\nimport { Component } from './component.js';\n\ninterface ClassOptions {\n\ttype: 'Class';\n\tindex: Class;\n}\n\ninterface SpecOptions {\n\ttype: 'Spec';\n\tindex: Spec;\n}\n\ninterface RaidOptions {\n\ttype: 'Raid';\n}\n\ntype SimTitleDropdownConfig = {\n\tnoDropdown?: boolean;\n};\n\n// Dropdown menu for selecting a player.\nexport class SimTitleDropdown extends Component {\n\tprivate readonly dropdownMenu: HTMLElement | undefined;\n\n\tprivate readonly specLabels: Record<Spec, string> = {\n\t\t[Spec.SpecBalanceDruid]: 'Balance',\n\t\t[Spec.SpecFeralDruid]: 'Feral DPS',\n\t\t[Spec.SpecFeralTankDruid]: 'Feral Tank',\n\t\t[Spec.SpecRestorationDruid]: 'Restoration',\n\t\t[Spec.SpecElementalShaman]: 'Elemental',\n\t\t[Spec.SpecEnhancementShaman]: 'Enhancement',\n\t\t[Spec.SpecRestorationShaman]: 'Restoration',\n\t\t[Spec.SpecHunter]: 'Hunter',\n\t\t[Spec.SpecMage]: 'Mage',\n\t\t[Spec.SpecRogue]: 'Rogue',\n\t\t[Spec.SpecTankRogue]: 'Tank',\n\t\t[Spec.SpecHolyPaladin]: 'Holy',\n\t\t[Spec.SpecProtectionPaladin]: 'Protection',\n\t\t[Spec.SpecRetributionPaladin]: 'Retribution',\n\t\t[Spec.SpecHealingPriest]: 'Healing',\n\t\t[Spec.SpecShadowPriest]: 'Shadow',\n\t\t[Spec.SpecWarlock]: 'DPS',\n\t\t[Spec.SpecTankWarlock]: 'Tank',\n\t\t[Spec.SpecWarrior]: 'DPS',\n\t\t[Spec.SpecProtectionWarrior]: 'Protection',\n\t};\n\n\tconstructor(\n\t\tparent: HTMLElement,\n\t\tcurrentSpecIndex: Spec | null,\n\t\tconfig: SimTitleDropdownConfig = {},\n\t) {\n\t\tsuper(parent, 'sim-title-dropdown-root');\n\n\t\tconst rootLinkArgs: SpecOptions | RaidOptions =\n\t\t\tcurrentSpecIndex === null\n\t\t\t\t? { type: 'Raid' }\n\t\t\t\t: { type: 'Spec', index: currentSpecIndex };\n\t\tconst rootLink = this.buildRootSimLink(rootLinkArgs);\n\n\t\tif (config.noDropdown) {\n\t\t\tthis.rootElem.innerHTML = rootLink.outerHTML;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.rootElem.innerHTML = `\n      <div class=\"dropdown sim-link-dropdown\">\n        ${rootLink.outerHTML}\n        <ul class=\"dropdown-menu\"></ul>\n      </div>\n    `;\n\n\t\tthis.dropdownMenu = this.rootElem.getElementsByClassName('dropdown-menu')[0] as HTMLElement;\n\t\tthis.buildDropdown();\n\n\t\t// Prevent Bootstrap from closing the menu instead of opening class menus\n\t\tthis.dropdownMenu.addEventListener('click', event => {\n\t\t\tconst target = event.target as HTMLElement;\n\t\t\tconst link = target.closest('a:not([href=\"javascript:void(0)\"]');\n\n\t\t\tif (!link) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate buildDropdown() {\n\t\t// TODO Classic\n\t\t// if (raidSimStatus >= LaunchStatus.Alpha) {\n\t\t// \t// Add the raid sim to the top of the dropdown\n\t\t// \tlet raidListItem = document.createElement('li');\n\t\t// \traidListItem.appendChild(this.buildRaidLink());\n\t\t// \tthis.dropdownMenu?.appendChild(raidListItem);\n\t\t// }\n\n\t\tnaturalClassOrder.forEach(classIndex => {\n\t\t\tconst listItem = document.createElement('li');\n\t\t\tconst sims = getLaunchedSimsForClass(classIndex);\n\n\t\t\tif (sims.length == 1) {\n\t\t\t\t// The class only has one listed sim so make a direct link to the sim\n\t\t\t\tlistItem.appendChild(this.buildClassLink(classIndex));\n\t\t\t\tthis.dropdownMenu?.appendChild(listItem);\n\t\t\t} else if (sims.length > 1) {\n\t\t\t\t// Add the class to the dropdown with an additional spec dropdown\n\t\t\t\tlistItem.appendChild(this.buildClassDropdown(classIndex));\n\t\t\t\tthis.dropdownMenu?.appendChild(listItem);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate buildClassDropdown(classIndex: Class) {\n\t\tconst sims = getLaunchedSimsForClass(classIndex);\n\t\tconst dropdownFragment = document.createElement('fragment');\n\t\tconst dropdownMenu = document.createElement('ul');\n\t\tdropdownMenu.classList.add('dropdown-menu');\n\n\t\t// Generate the class link to act as a dropdown toggle for the spec dropdown\n\t\tconst classLink = this.buildClassLink(classIndex);\n\n\t\t// Generate links for a class's specs\n\t\tsims.forEach(specIndex => {\n\t\t\tconst listItem = document.createElement('li');\n\t\t\tconst link = this.buildSpecLink(specIndex);\n\n\t\t\tlistItem.appendChild(link);\n\t\t\tdropdownMenu.appendChild(listItem);\n\t\t});\n\n\t\tdropdownFragment.innerHTML = `\n      <div class=\"dropend sim-link-dropdown\">\n        ${classLink.outerHTML}\n        ${dropdownMenu.outerHTML}\n      </div>\n    `;\n\n\t\treturn dropdownFragment.children[0] as HTMLElement;\n\t}\n\n\tprivate buildRootSimLink(data: SpecOptions | RaidOptions): HTMLElement {\n\t\tconst iconPath = this.getSimIconPath(data);\n\t\tconst textKlass = this.getContextualKlass(data);\n\t\tlet label;\n\n\t\tif (data.type == 'Raid') label = raidSimLabel;\n\t\telse {\n\t\t\tconst classIndex = specToClass[data.index];\n\t\t\tif (getLaunchedSimsForClass(classIndex).length > 1)\n\t\t\t\t// If the class has multiple sims, use the spec name\n\t\t\t\tlabel = specNames[data.index];\n\t\t\t// If the class has only 1 sim, use the class name\n\t\t\telse label = classNames[classIndex];\n\t\t}\n\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n      <a href=\"javascript:void(0)\" class=\"sim-link ${textKlass}\" role=\"button\" data-bs-toggle=\"dropdown\" data-bs-trigger=\"click\" aria-expanded=\"false\">\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-label text-white\">WoWSims - Season of Discovery</span>\n            <span class=\"sim-link-title\">${label}</span>\n            ${this.launchStatusLabel(data)}\n          </div>\n        </div>\n      </a>\n    `;\n\n\t\treturn fragment.children[0] as HTMLElement;\n\t}\n\n\tprivate buildRaidLink(): HTMLElement {\n\t\tconst textKlass = this.getContextualKlass({ type: 'Raid' });\n\t\tconst iconPath = this.getSimIconPath({ type: 'Raid' });\n\t\tconst label = raidSimLabel;\n\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n      <a href=\"${raidSimSiteUrl}\" class=\"sim-link ${textKlass}\">\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-title\">${label}</span>\n            ${this.launchStatusLabel({ type: 'Raid' })}\n          </div>\n        </div>\n      </a>\n    `;\n\n\t\treturn fragment.children[0] as HTMLElement;\n\t}\n\n\tprivate buildClassLink(classIndex: Class): HTMLElement {\n\t\tconst specIndexes = getLaunchedSimsForClass(classIndex);\n\t\tconst href = specIndexes.length > 1 ? 'javascript:void(0)' : getSpecSiteUrl(specIndexes[0]);\n\t\tconst textKlass = this.getContextualKlass({ type: 'Class', index: classIndex });\n\t\tconst iconPath = this.getSimIconPath({ type: 'Class', index: classIndex });\n\t\tconst label = classNames[classIndex];\n\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n      <a href=\"${href}\" class=\"sim-link ${textKlass}\" ${specIndexes.length > 1 ? 'role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"' : ''}>\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-title\">${label}</span>\n            ${specIndexes.length == 1 ? this.launchStatusLabel({ type: 'Spec', index: specIndexes[0] }) : ''}\n          </div>\n        </div>\n      </a>\n    `;\n\n\t\treturn fragment.children[0] as HTMLElement;\n\t}\n\n\tprivate buildSpecLink(specIndex: Spec): HTMLElement {\n\t\tconst href = getSpecSiteUrl(specIndex);\n\t\tconst textKlass = this.getContextualKlass({ type: 'Spec', index: specIndex });\n\t\tconst iconPath = this.getSimIconPath({ type: 'Spec', index: specIndex });\n\t\tconst className = classNames[specToClass[specIndex]];\n\t\tconst specLabel = this.specLabels[specIndex];\n\n\t\tconst fragment = document.createElement('fragment');\n\t\tfragment.innerHTML = `\n      <a href=\"${href}\" class=\"sim-link ${textKlass}\" role=\"button\">\n        <div class=\"sim-link-content\">\n          <img src=\"${iconPath}\" class=\"sim-link-icon\">\n          <div class=\"d-flex flex-column\">\n            <span class=\"sim-link-label\">${className}</span>\n            <span class=\"sim-link-title\">${specLabel}</span>\n            ${this.launchStatusLabel({ type: 'Spec', index: specIndex })}\n          </div>\n        </div>\n      </a>\n    `;\n\n\t\treturn fragment.children[0] as HTMLElement;\n\t}\n\n\tprivate launchStatusLabel(data: SpecOptions | RaidOptions): string {\n\t\tconst status =\n\t\t\tdata.type == 'Raid' ? raidSimStatus.status : simLaunchStatuses[data.index].status;\n\t\tconst phase =\n\t\t\tdata.type == 'Raid' ? raidSimStatus.phase : simLaunchStatuses[data.index].phase;\n\t\tconst elem = document.createElement('span');\n\t\telem.classList.add('launch-status-label', 'text-brand');\n\t\telem.textContent =\n\t\t\tstatus == LaunchStatus.Unlaunched\n\t\t\t\t? 'Not Yet Supported'\n\t\t\t\t: `Phase ${phase} - ${LaunchStatus[status]}`;\n\n\t\treturn elem.outerHTML;\n\t}\n\n\tprivate getSimIconPath(data: ClassOptions | SpecOptions | RaidOptions): string {\n\t\tlet iconPath: string;\n\n\t\tif (data.type == 'Raid') {\n\t\t\ticonPath = raidSimIcon;\n\t\t} else if (data.type == 'Class') {\n\t\t\tconst className = classNames[data.index];\n\t\t\ticonPath = `/sod/assets/img/${className.toLowerCase().replace(/\\s/g, '_')}_icon.png`;\n\t\t} else {\n\t\t\ticonPath = titleIcons[data.index];\n\t\t}\n\n\t\treturn iconPath;\n\t}\n\n\tprivate getContextualKlass(data: ClassOptions | SpecOptions | RaidOptions): string {\n\t\tif (data.type == 'Raid')\n\t\t\t// Raid link\n\t\t\treturn 'text-white';\n\t\telse if (data.type == 'Class')\n\t\t\t// Class links\n\t\t\treturn textCssClassForClass(data.index);\n\t\telse return textCssClassForSpec(data.index);\n\t}\n}\n","import { BaseModal } from './components/base_modal.js';\nimport { Component } from './components/component.js';\nimport { NumberPicker } from './components/number_picker.js';\nimport { ResultsViewer } from './components/results_viewer.js';\nimport { SimHeader } from './components/sim_header';\nimport { SimTab } from './components/sim_tab.js';\nimport { SimTitleDropdown } from './components/sim_title_dropdown.js';\nimport { SocialLinks } from './components/social_links.jsx';\nimport { LaunchStatus, SimStatus } from './launched_sims.js';\nimport { Spec } from './proto/common.js';\nimport { ActionId } from './proto_utils/action_id.js';\nimport { Sim, SimError } from './sim.js';\nimport { EventID, TypedEvent } from './typed_event.js';\n\nconst URLMAXLEN = 2048;\nconst globalKnownIssues: Array<string> = [];\n\n// Config for displaying a warning to the user whenever a condition is met.\nexport interface SimWarning {\n\tupdateOn: TypedEvent<any>;\n\tgetContent: () => string | Array<string>;\n}\n\nexport interface SimUIConfig {\n\t// Additional css class to add to the root element.\n\tcssClass: string;\n\t// Scheme used for themeing on a per-class Basis or for other sims\n\tcssScheme: string;\n\t// The spec, if an individual sim, or null if the raid sim.\n\tspec: Spec | null;\n\tsimStatus: SimStatus;\n\tknownIssues?: Array<string>;\n\tnoticeText?: string;\n}\n\n// Shared UI for all individual sims and the raid sim.\nexport abstract class SimUI extends Component {\n\treadonly sim: Sim;\n\treadonly cssClass: string;\n\treadonly cssScheme: string;\n\treadonly isWithinRaidSim: boolean;\n\n\t// Emits when anything from the sim, raid, or encounter changes.\n\treadonly changeEmitter;\n\n\treadonly resultsViewer: ResultsViewer;\n\treadonly simHeader: SimHeader;\n\n\treadonly simContentContainer: HTMLElement;\n\treadonly simMain: HTMLElement;\n\treadonly simActionsContainer: HTMLElement;\n\treadonly iterationsPicker: HTMLElement;\n\treadonly simTabContentsContainer: HTMLElement;\n\n\tconstructor(parentElem: HTMLElement, sim: Sim, config: SimUIConfig) {\n\t\tsuper(parentElem, 'sim-ui');\n\t\tthis.sim = sim;\n\t\tthis.cssClass = config.cssClass;\n\t\tthis.cssScheme = config.cssScheme;\n\t\tthis.isWithinRaidSim = this.rootElem.closest('.within-raid-sim') != null;\n\t\tthis.rootElem.innerHTML = `\n\t\t\t<div class=\"sim-root\">\n\t\t\t\t<div class=\"sim-bg\"></div>\n\t\t\t\t${config.noticeText ? `<div class=\"notices-banner alert border-bottom mb-0 text-center within-raid-sim-hide\">${config.noticeText}</div>` : ''}\n\t\t\t\t<div class=\"sim-container\">\n\t\t\t\t\t<aside class=\"sim-sidebar\">\n\t\t\t\t\t\t<div class=\"sim-title\"></div>\n\t\t\t\t\t\t<div class=\"sim-sidebar-content\">\n\t\t\t\t\t\t\t<div class=\"sim-sidebar-actions within-raid-sim-hide\"></div>\n\t\t\t\t\t\t\t<div class=\"sim-sidebar-results within-raid-sim-hide\"></div>\n\t\t\t\t\t\t\t<div class=\"sim-sidebar-stats\"></div>\n\t\t\t\t\t\t\t<div class=\"sim-sidebar-socials\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</aside>\n\t\t\t\t\t<div class=\"sim-content container-fluid\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t\tthis.simContentContainer = this.rootElem.querySelector('.sim-content') as HTMLElement;\n\t\tthis.simHeader = new SimHeader(this.simContentContainer, this);\n\t\tthis.simMain = document.createElement('main');\n\t\tthis.simMain.classList.add('sim-main', 'tab-content');\n\t\tthis.simContentContainer.appendChild(this.simMain);\n\n\t\tthis.rootElem.classList.add(this.cssClass);\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\tthis.rootElem.classList.add('not-within-raid-sim');\n\t\t}\n\n\t\tthis.changeEmitter = TypedEvent.onAny([this.sim.changeEmitter], 'SimUIChange');\n\n\t\tthis.sim.crashEmitter.on((eventID: EventID, error: SimError) => this.handleCrash(error));\n\n\t\tconst updateShowDamageMetrics = () => {\n\t\t\tif (this.sim.getShowDamageMetrics()) this.rootElem.classList.remove('hide-damage-metrics');\n\t\t\telse this.rootElem.classList.add('hide-damage-metrics');\n\t\t};\n\t\tupdateShowDamageMetrics();\n\t\tthis.sim.showDamageMetricsChangeEmitter.on(updateShowDamageMetrics);\n\n\t\tconst updateShowThreatMetrics = () => {\n\t\t\tif (this.sim.getShowThreatMetrics()) this.rootElem.classList.remove('hide-threat-metrics');\n\t\t\telse this.rootElem.classList.add('hide-threat-metrics');\n\t\t};\n\t\tupdateShowThreatMetrics();\n\t\tthis.sim.showThreatMetricsChangeEmitter.on(updateShowThreatMetrics);\n\n\t\tconst updateShowHealingMetrics = () => {\n\t\t\tif (this.sim.getShowHealingMetrics()) this.rootElem.classList.remove('hide-healing-metrics');\n\t\t\telse this.rootElem.classList.add('hide-healing-metrics');\n\t\t};\n\t\tupdateShowHealingMetrics();\n\t\tthis.sim.showHealingMetricsChangeEmitter.on(updateShowHealingMetrics);\n\n\t\tconst updateShowEpRatios = () => {\n\t\t\t// Threat metrics *always* shows multiple columns, so\n\t\t\t// always show ratios when they are shown\n\t\t\tif (this.sim.getShowThreatMetrics()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-ep-ratios');\n\t\t\t\t// This case doesn't currently happen, but who knows\n\t\t\t\t// what the future holds...\n\t\t\t} else if (this.sim.getShowDamageMetrics() && this.sim.getShowHealingMetrics()) {\n\t\t\t\tthis.rootElem.classList.remove('hide-ep-ratios');\n\t\t\t} else {\n\t\t\t\tthis.rootElem.classList.add('hide-ep-ratios');\n\t\t\t}\n\t\t};\n\n\t\tupdateShowEpRatios();\n\t\tthis.sim.showDamageMetricsChangeEmitter.on(updateShowEpRatios);\n\t\tthis.sim.showHealingMetricsChangeEmitter.on(updateShowEpRatios);\n\t\tthis.sim.showThreatMetricsChangeEmitter.on(updateShowEpRatios);\n\n\t\tconst updateShowExperimental = () => {\n\t\t\tif (this.sim.getShowExperimental()) this.rootElem.classList.remove('hide-experimental');\n\t\t\telse this.rootElem.classList.add('hide-experimental');\n\t\t};\n\t\tupdateShowExperimental();\n\t\tthis.sim.showExperimentalChangeEmitter.on(updateShowExperimental);\n\n\t\tthis.addKnownIssues(config);\n\n\t\t// Sidebar Contents\n\n\t\tconst titleElem = this.rootElem.querySelector('.sim-title') as HTMLElement;\n\t\tnew SimTitleDropdown(titleElem, config.spec, { noDropdown: this.isWithinRaidSim });\n\n\t\tthis.simActionsContainer = this.rootElem.querySelector('.sim-sidebar-actions') as HTMLElement;\n\t\tthis.iterationsPicker = new NumberPicker(this.simActionsContainer, this.sim, {\n\t\t\tlabel: 'Iterations',\n\t\t\textraCssClasses: ['iterations-picker', 'within-raid-sim-hide'],\n\t\t\tchangedEvent: (sim: Sim) => sim.iterationsChangeEmitter,\n\t\t\tgetValue: (sim: Sim) => sim.getIterations(),\n\t\t\tsetValue: (eventID: EventID, sim: Sim, newValue: number) => {\n\t\t\t\tsim.setIterations(eventID, newValue);\n\t\t\t},\n\t\t}).rootElem;\n\n\t\tconst resultsViewerElem = this.rootElem.querySelector('.sim-sidebar-results') as HTMLElement;\n\t\tthis.resultsViewer = new ResultsViewer(resultsViewerElem);\n\n\t\tconst socialsContainer = this.rootElem.querySelector('.sim-sidebar-socials') as HTMLElement;\n\t\tsocialsContainer.appendChild(SocialLinks.buildDiscordLink());\n\t\tsocialsContainer.appendChild(SocialLinks.buildGitHubLink());\n\t\tsocialsContainer.appendChild(SocialLinks.buildPatreonLink());\n\n\t\tthis.simTabContentsContainer = this.rootElem.querySelector('.sim-main.tab-content') as HTMLElement;\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\twindow.addEventListener('message', async event => {\n\t\t\t\tif (event.data == 'runOnce') {\n\t\t\t\t\tthis.runSimOnce();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\taddAction(name: string, cssClass: string, actFn: () => void) {\n\t\tconst button = document.createElement('button');\n\t\tbutton.classList.add('btn', 'btn-primary', 'w-100', cssClass);\n\t\tbutton.textContent = name;\n\t\tbutton.addEventListener('click', actFn);\n\t\tthis.simActionsContainer.appendChild(button);\n\t}\n\n\taddTab(title: string, cssClass: string, innerHTML: string) {\n\t\tconst contentId = cssClass.replace(/\\s+/g, '-') + '-tab';\n\t\tconst isFirstTab = this.simTabContentsContainer.children.length == 0;\n\n\t\tthis.simHeader.addTab(title, contentId);\n\n\t\tconst tabContentFragment = document.createElement('fragment');\n\t\ttabContentFragment.innerHTML = `\n\t\t\t<div\n\t\t\t\tid=\"${contentId}\"\n\t\t\t\tclass=\"tab-pane fade ${isFirstTab ? 'active show' : ''}\"\n\t\t\t>${innerHTML}</div>\n\t\t`;\n\t\tthis.simTabContentsContainer.appendChild(tabContentFragment.children[0] as HTMLElement);\n\t}\n\n\taddSimTab(tab: SimTab) {\n\t\tthis.simHeader.addSimTabLink(tab);\n\t}\n\n\taddWarning(warning: SimWarning) {\n\t\tthis.resultsViewer.addWarning(warning);\n\t}\n\n\tprivate addKnownIssues(config: SimUIConfig) {\n\t\tlet statusStr = '';\n\t\tif (config.simStatus.status == LaunchStatus.Unlaunched) {\n\t\t\tstatusStr = 'This sim is a WORK IN PROGRESS. It is not fully developed and should not be used for general purposes.';\n\t\t} else if (config.simStatus.status == LaunchStatus.Alpha) {\n\t\t\tstatusStr = 'This sim is in ALPHA status. New runes and items may not yet be functional and further testing is needed.';\n\t\t} else {\n\t\t\tstatusStr = `This sim is in BETA status. New runes and items should be mostly functional.`;\n\t\t}\n\t\tif (statusStr) {\n\t\t\tconfig.knownIssues = [statusStr].concat(config.knownIssues || []);\n\t\t}\n\t\tif (config.knownIssues && config.knownIssues.length) {\n\t\t\tconfig.knownIssues.forEach(issue => this.simHeader.addKnownIssue(issue));\n\t\t}\n\t\tglobalKnownIssues.forEach(issue => this.simHeader.addKnownIssue(issue));\n\t}\n\n\t// Returns a key suitable for the browser's localStorage feature.\n\tabstract getStorageKey(postfix: string): string;\n\n\tgetSettingsStorageKey(): string {\n\t\treturn this.getStorageKey('__currentSettings__');\n\t}\n\n\tgetSavedEncounterStorageKey(): string {\n\t\t// By skipping the call to this.getStorageKey(), saved encounters will be\n\t\t// shared across all sims.\n\t\treturn 'sharedData__savedEncounter__';\n\t}\n\n\tisIndividualSim(): boolean {\n\t\treturn this.rootElem.classList.contains('individual-sim-ui');\n\t}\n\n\tasync runSim(onProgress: (_?: any) => void) {\n\t\tthis.resultsViewer.setPending();\n\t\ttry {\n\t\t\tawait this.sim.runRaidSim(TypedEvent.nextEventID(), onProgress);\n\t\t} catch (e) {\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.handleCrash(e);\n\t\t}\n\t}\n\n\tasync runSimOnce() {\n\t\tthis.resultsViewer.setPending();\n\t\ttry {\n\t\t\tawait this.sim.runRaidSimWithLogs(TypedEvent.nextEventID());\n\t\t} catch (e) {\n\t\t\tthis.resultsViewer.hideAll();\n\t\t\tthis.handleCrash(e);\n\t\t}\n\t}\n\n\tasync handleCrash(error: any): Promise<void> {\n\t\tif (!(error instanceof SimError)) {\n\t\t\talert(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst errorStr = (error as SimError).errorStr;\n\t\tif (errorStr.startsWith('[USER_ERROR] ')) {\n\t\t\tlet alertStr = errorStr.substring('[USER_ERROR] '.length);\n\t\t\talertStr = await ActionId.replaceAllInString(alertStr);\n\t\t\talert(alertStr);\n\t\t\treturn;\n\t\t}\n\n\t\tif (window.confirm('Simulation Failure:\\n' + errorStr + '\\nPress Ok to file crash report')) {\n\t\t\t// Splice out just the line numbers\n\t\t\tconst hash = this.hashCode(errorStr);\n\t\t\tconst link = this.toLink();\n\t\t\tconst rngSeed = this.sim.getLastUsedRngSeed();\n\t\t\tfetch('https://api.github.com/search/issues?q=is:issue+is:open+repo:wowsims/sod+' + hash)\n\t\t\t\t.then(resp => {\n\t\t\t\t\tresp.json().then(issues => {\n\t\t\t\t\t\tif (issues.total_count > 0) {\n\t\t\t\t\t\t\twindow.open(issues.items[0].html_url, '_blank');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst base_url = 'https://github.com/wowsims/sod/issues/new?assignees=&labels=&title=Crash%20Report%20';\n\t\t\t\t\t\t\tconst base = `${base_url}${hash}&body=`;\n\t\t\t\t\t\t\tconst maxBodyLength = URLMAXLEN - base.length;\n\t\t\t\t\t\t\tlet issueBody = encodeURIComponent(`Link:\\n${link}\\n\\nRNG Seed: ${rngSeed}\\n\\n${errorStr}`);\n\t\t\t\t\t\t\tif (link.includes('/raid/')) {\n\t\t\t\t\t\t\t\t// Move the actual error before the link, as it will likely get truncated.\n\t\t\t\t\t\t\t\tissueBody = encodeURIComponent(`${errorStr}\\nRNG Seed: ${rngSeed}\\nLink:\\n${link}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet truncated = false;\n\t\t\t\t\t\t\twhile (issueBody.length > maxBodyLength - (truncated ? 3 : 0)) {\n\t\t\t\t\t\t\t\tissueBody = issueBody.slice(0, issueBody.lastIndexOf('%')); // Avoid truncating in the middle of a URLencoded segment.\n\t\t\t\t\t\t\t\ttruncated = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (truncated) {\n\t\t\t\t\t\t\t\tissueBody += '...';\n\t\t\t\t\t\t\t\t// The raid links are too large and will always cause truncation.\n\t\t\t\t\t\t\t\t// Prompt the user to add more information to the issue.\n\t\t\t\t\t\t\t\tnew CrashModal(this.rootElem, link);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twindow.open(base + issueBody, '_blank');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(fetchErr => {\n\t\t\t\t\talert('Failed to file report... try again another time:' + fetchErr);\n\t\t\t\t});\n\t\t}\n\t}\n\n\thashCode(str: string): number {\n\t\tlet hash = 0;\n\t\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\t\tconst chr = str.charCodeAt(i);\n\t\t\thash = (hash << 5) - hash + chr;\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\t\treturn hash;\n\t}\n\n\tabstract applyDefaults(eventID: EventID): void;\n\tabstract toLink(): string;\n}\n\nclass CrashModal extends BaseModal {\n\tconstructor(parent: HTMLElement, link: string) {\n\t\tsuper(parent, 'crash', { title: 'Extra Crash Information' });\n\t\tthis.body.innerHTML = `\n\t\t\t<div class=\"sim-crash-report\">\n\t\t\t\t<h3 class=\"sim-crash-report-header\">Please append the following complete link to the issue you just created. This will simplify debugging the issue.</h3>\n\t\t\t\t<textarea class=\"sim-crash-report-text form-control\"></textarea>\n\t\t\t</div>\n\t\t`;\n\t\tconst text = document.createTextNode(link);\n\t\tthis.body.querySelector('textarea')?.appendChild(text);\n\t}\n}\n","import { CharacterStats, StatMods } from './components/character_stats';\nimport { ContentBlock } from './components/content_block';\nimport { EmbeddedDetailedResults } from './components/detailed_results';\nimport { EncounterPickerConfig } from './components/encounter_picker';\nimport * as Exporters from './components/exporters';\nimport * as IconInputs from './components/icon_inputs';\nimport * as Importers from './components/importers';\nimport { BulkTab } from './components/individual_sim_ui/bulk_tab';\nimport { GearTab } from './components/individual_sim_ui/gear_tab';\nimport { RotationTab } from './components/individual_sim_ui/rotation_tab';\nimport { SettingsTab } from './components/individual_sim_ui/settings_tab';\nimport { TalentsTab } from './components/individual_sim_ui/talents_tab';\nimport * as InputHelpers from './components/input_helpers';\nimport { ItemSwapConfig } from './components/item_swap_picker';\nimport { addRaidSimAction, RaidSimResultsManager } from './components/raid_sim_action';\nimport { SavedDataConfig } from './components/saved_data_manager';\nimport { addStatWeightsAction } from './components/stat_weights_action';\nimport { LEVEL_THRESHOLDS } from './constants/other';\nimport * as Tooltips from './constants/tooltips';\nimport { simLaunchStatuses } from './launched_sims';\nimport { Player, PlayerConfig, registerSpecConfig as registerPlayerConfig } from './player';\nimport { PresetBuild, PresetGear, PresetRotation } from './preset_utils';\nimport { StatWeightsResult } from './proto/api';\nimport { APLRotation_Type as APLRotationType } from './proto/apl';\nimport {\n\tConsumes,\n\tDebuffs,\n\tEncounter as EncounterProto,\n\tEquipmentSpec,\n\tFaction,\n\tHandType,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tProfession,\n\tPseudoStat,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n} from './proto/common';\nimport { IndividualSimSettings, SavedTalents } from './proto/ui';\nimport { ItemSwapGear } from './proto_utils/gear';\nimport { professionNames } from './proto_utils/names';\nimport { Stats } from './proto_utils/stats';\nimport { getTalentPoints, isHealingSpec, isTankSpec, SpecOptions, SpecRotation, specToEligibleRaces, specToLocalStorageKey } from './proto_utils/utils';\nimport { SimSettingCategories } from './sim';\nimport { SimUI, SimWarning } from './sim_ui';\nimport { EventID, TypedEvent } from './typed_event';\n\nconst SAVED_GEAR_STORAGE_KEY = '__savedGear__';\nconst SAVED_ROTATION_STORAGE_KEY = '__savedRotation__';\nconst SAVED_SETTINGS_STORAGE_KEY = '__savedSettings__';\nconst SAVED_TALENTS_STORAGE_KEY = '__savedTalents__';\n\nexport type InputConfig<ModObject> =\n\t| InputHelpers.TypedBooleanPickerConfig<ModObject>\n\t| InputHelpers.TypedNumberPickerConfig<ModObject>\n\t| InputHelpers.TypedEnumPickerConfig<ModObject>;\n\nexport interface InputSection {\n\ttooltip?: string;\n\tinputs: Array<InputConfig<Player<any>>>;\n}\n\nexport interface OtherDefaults {\n\tprofession1?: Profession;\n\tprofession2?: Profession;\n\tdistanceFromTarget?: number;\n\tchannelClipDelay?: number;\n}\n\nexport interface RaidSimPreset<SpecType extends Spec> {\n\tspec: Spec;\n\ttalents: SavedTalents;\n\tspecOptions: SpecOptions<SpecType>;\n\tconsumes: Consumes;\n\n\tdefaultName: string;\n\tdefaultFactionRaces: Record<Faction, Race>;\n\tdefaultGear: Record<Faction, Record<number, EquipmentSpec>>;\n\totherDefaults?: OtherDefaults;\n\n\ttooltip: string;\n\ticonUrl: string;\n}\n\nexport interface IndividualSimUIConfig<SpecType extends Spec> extends PlayerConfig<SpecType> {\n\t// Additional css class to add to the root element.\n\tcssClass: string;\n\t// Used to generate schemed components. E.g. 'shaman', 'druid', 'raid'\n\tcssScheme: string;\n\n\tknownIssues?: Array<string>;\n\twarnings?: Array<(simUI: IndividualSimUI<SpecType>) => SimWarning>;\n\n\tepStats: Array<Stat>;\n\tepPseudoStats?: Array<PseudoStat>;\n\tepReferenceStat: Stat;\n\tdisplayStats: Array<Stat>;\n\tmodifyDisplayStats?: (player: Player<SpecType>) => StatMods;\n\n\tdefaults: {\n\t\trace?: Race;\n\t\tgear: EquipmentSpec;\n\t\tepWeights: Stats;\n\t\tconsumes: Consumes;\n\n\t\trotationType?: APLRotationType;\n\t\tsimpleRotation?: SpecRotation<SpecType>;\n\n\t\ttalents: SavedTalents;\n\t\tspecOptions: SpecOptions<SpecType>;\n\n\t\traidBuffs: RaidBuffs;\n\t\tpartyBuffs: PartyBuffs;\n\t\tindividualBuffs: IndividualBuffs;\n\n\t\tdebuffs: Debuffs;\n\n\t\tother?: OtherDefaults;\n\t};\n\n\tplayerInputs?: InputSection;\n\tplayerIconInputs: Array<IconInputs.IconInputConfig<Player<SpecType>, any>>;\n\tpetConsumeInputs?: Array<IconInputs.IconInputConfig<Player<SpecType>, any>>;\n\trotationInputs?: InputSection;\n\trotationIconInputs?: Array<IconInputs.IconInputConfig<Player<any>, any>>;\n\tincludeBuffDebuffInputs: Array<any>;\n\texcludeBuffDebuffInputs: Array<any>;\n\totherInputs: InputSection;\n\t// Currently, many classes don't support item swapping, and only in certain slots.\n\t// So enable it only where it is supported.\n\titemSwapConfig?: ItemSwapConfig;\n\n\t// For when extra sections are needed (e.g. Shaman totems)\n\tcustomSections?: Array<(parentElem: HTMLElement, simUI: IndividualSimUI<SpecType>) => ContentBlock>;\n\n\tencounterPicker: EncounterPickerConfig;\n\n\tpresets: {\n\t\tgear: Array<PresetGear>;\n\t\ttalents: Array<SavedDataConfig<Player<any>, SavedTalents>>;\n\t\trotations: Array<PresetRotation>;\n\t\tbuilds?: Array<PresetBuild>;\n\t};\n\n\traidSimPresets: Array<RaidSimPreset<SpecType>>;\n}\n\nexport function registerSpecConfig<SpecType extends Spec>(spec: SpecType, config: IndividualSimUIConfig<SpecType>): IndividualSimUIConfig<SpecType> {\n\tregisterPlayerConfig(spec, config);\n\treturn config;\n}\n\nexport const itemSwapEnabledSpecs: Array<Spec> = [];\n\nexport interface Settings {\n\traidBuffs: RaidBuffs;\n\tpartyBuffs: PartyBuffs;\n\tindividualBuffs: IndividualBuffs;\n\tconsumes: Consumes;\n\trace: Race;\n\tprofessions?: Array<Profession>;\n}\n\n// Extended shared UI for all individual player sims.\nexport abstract class IndividualSimUI<SpecType extends Spec> extends SimUI {\n\treadonly player: Player<SpecType>;\n\treadonly individualConfig: IndividualSimUIConfig<SpecType>;\n\n\tprivate raidSimResultsManager: RaidSimResultsManager | null;\n\n\tprevEpIterations: number;\n\tprevEpSimResult: StatWeightsResult | null;\n\tdpsRefStat?: Stat;\n\thealRefStat?: Stat;\n\ttankRefStat?: Stat;\n\n\treadonly bt: BulkTab;\n\tspec: any;\n\n\tconstructor(parentElem: HTMLElement, player: Player<SpecType>, config: IndividualSimUIConfig<SpecType>) {\n\t\tsuper(parentElem, player.sim, {\n\t\t\tcssClass: config.cssClass,\n\t\t\tcssScheme: config.cssScheme,\n\t\t\tspec: player.spec,\n\t\t\tknownIssues: config.knownIssues,\n\t\t\tsimStatus: simLaunchStatuses[player.spec],\n\t\t});\n\t\tthis.rootElem.classList.add('individual-sim-ui');\n\t\tthis.player = player;\n\t\tthis.individualConfig = config;\n\t\tthis.raidSimResultsManager = null;\n\t\tthis.prevEpIterations = 0;\n\t\tthis.prevEpSimResult = null;\n\n\t\tif ((config.itemSwapConfig?.itemSlots || []).length > 0 && !itemSwapEnabledSpecs.includes(player.spec)) {\n\t\t\titemSwapEnabledSpecs.push(player.spec);\n\t\t}\n\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.professionChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tconst failedProfReqs = this.player.getGear().getFailedProfessionRequirements(this.player.getProfessions());\n\t\t\t\tif (failedProfReqs.length == 0) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\treturn failedProfReqs.map(fpr => `${fpr.name} requires ${professionNames.get(fpr.requiredProfession)!}, but it is not selected.`);\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.talentsChangeEmitter, this.player.levelChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tconst talentPoints = getTalentPoints(this.player.getTalentsString());\n\n\t\t\t\tif (talentPoints == 0) {\n\t\t\t\t\t// Just return here, so we don't show a warning during page load.\n\t\t\t\t\treturn '';\n\t\t\t\t} else if (talentPoints < this.player.getLevel() - 9) {\n\t\t\t\t\treturn Tooltips.UNSPECT_TALENT_POINTS_WARNING;\n\t\t\t\t} else if (talentPoints > this.player.getLevel() - 9) {\n\t\t\t\t\treturn Tooltips.TOO_MANY_TALENT_POINTS_WARNING;\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis.addWarning({\n\t\t\tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter, this.player.talentsChangeEmitter]),\n\t\t\tgetContent: () => {\n\t\t\t\tif (\n\t\t\t\t\t!this.player.canDualWield2H() &&\n\t\t\t\t\t((this.player.getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.handType == HandType.HandTypeTwoHand &&\n\t\t\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand) != null) ||\n\t\t\t\t\t\tthis.player.getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.handType == HandType.HandTypeTwoHand)\n\t\t\t\t) {\n\t\t\t\t\treturn Tooltips.TITANS_GRIP_WARNING;\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\t// TODO: This is showing the warning even when no items above player level are equipped\n\t\t// this.addWarning({\n\t\t// \tupdateOn: TypedEvent.onAny([this.player.gearChangeEmitter]),\n\t\t// \tgetContent: () => {\n\t\t// \t\tconst playerLevel = player.getLevel();\n\t\t// \t\tif (\n\t\t// \t\t\tthis.player\n\t\t// \t\t\t\t.getGear()\n\t\t// \t\t\t\t.asArray()\n\t\t// \t\t\t\t.filter(item => item != null && item.item.requiresLevel < playerLevel)\n\t\t// \t\t) {\n\t\t// \t\t\treturn Tooltips.GEAR_MIN_LEVEL_WARNING(playerLevel);\n\t\t// \t\t} else {\n\t\t// \t\t\treturn '';\n\t\t// \t\t}\n\t\t// \t},\n\t\t// });\n\t\t(config.warnings || []).forEach(warning => this.addWarning(warning(this)));\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\t// This needs to go before all the UI components so that gear loading is the\n\t\t\t// first callback invoked from waitForInit().\n\t\t\tthis.sim.waitForInit().then(() => {\n\t\t\t\tthis.loadSettings();\n\n\t\t\t\tif (isHealingSpec(this.player.spec)) {\n\t\t\t\t\talert(Tooltips.HEALING_SIM_DISCLAIMER);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.addSidebarComponents();\n\t\tthis.addGearTab();\n\t\tthis.bt = this.addBulkTab();\n\t\tthis.addSettingsTab();\n\t\tthis.addTalentsTab();\n\t\tthis.addRotationTab();\n\n\t\tif (!this.isWithinRaidSim) {\n\t\t\tthis.addDetailedResultsTab();\n\t\t}\n\n\t\tthis.addTopbarComponents();\n\t}\n\n\tprivate loadSettings() {\n\t\tconst initEventID = TypedEvent.nextEventID();\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tthis.applyDefaults(initEventID);\n\t\t\tconst savedSettings = window.localStorage.getItem(this.getSettingsStorageKey());\n\t\t\tif (savedSettings != null) {\n\t\t\t\ttry {\n\t\t\t\t\tconst settings = IndividualSimSettings.fromJsonString(savedSettings);\n\t\t\t\t\tthis.fromProto(initEventID, settings);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('Failed to parse saved settings: ' + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Loading from link needs to happen after loading saved settings, so that partial link imports\n\t\t\t// (e.g. rotation only) include the previous settings for other categories.\n\t\t\ttry {\n\t\t\t\tconst urlParseResults = Importers.IndividualLinkImporter.tryParseUrlLocation(window.location);\n\t\t\t\tif (urlParseResults) {\n\t\t\t\t\tthis.fromProto(initEventID, urlParseResults.settings, urlParseResults.categories);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn('Failed to parse link settings: ' + e);\n\t\t\t}\n\t\t\twindow.location.hash = '';\n\n\t\t\tthis.player.setName(initEventID, 'Player');\n\n\t\t\t// This needs to go last so it doesn't re-store things as they are initialized.\n\t\t\tthis.changeEmitter.on(_ => {\n\t\t\t\tconst jsonStr = IndividualSimSettings.toJsonString(this.toProto());\n\n\t\t\t\twindow.localStorage.setItem(this.getSettingsStorageKey(), jsonStr);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate addSidebarComponents() {\n\t\tthis.raidSimResultsManager = addRaidSimAction(this);\n\t\taddStatWeightsAction(this, this.individualConfig.epStats, this.individualConfig.epPseudoStats, this.individualConfig.epReferenceStat);\n\n\t\tnew CharacterStats(\n\t\t\tthis.rootElem.getElementsByClassName('sim-sidebar-stats')[0] as HTMLElement,\n\t\t\tthis.player,\n\t\t\tthis.individualConfig.displayStats,\n\t\t\tthis.individualConfig.modifyDisplayStats,\n\t\t);\n\t}\n\n\tprivate addGearTab() {\n\t\tconst gearTab = new GearTab(this.simTabContentsContainer, this);\n\t\tgearTab.rootElem.classList.add('active', 'show');\n\t}\n\n\tprivate addBulkTab(): BulkTab {\n\t\tconst bulkTab = new BulkTab(this.simTabContentsContainer, this);\n\t\tbulkTab.navLink.hidden = !this.sim.getShowExperimental();\n\t\tthis.sim.showExperimentalChangeEmitter.on(() => {\n\t\t\tbulkTab.navLink.hidden = !this.sim.getShowExperimental();\n\t\t});\n\t\treturn bulkTab;\n\t}\n\n\tprivate addSettingsTab() {\n\t\tnew SettingsTab(this.simTabContentsContainer, this);\n\t}\n\n\tprivate addTalentsTab() {\n\t\tnew TalentsTab(this.simTabContentsContainer, this);\n\t}\n\n\tprivate addRotationTab() {\n\t\tnew RotationTab(this.simTabContentsContainer, this);\n\t}\n\n\tprivate addDetailedResultsTab() {\n\t\tthis.addTab(\n\t\t\t'Results',\n\t\t\t'detailed-results-tab',\n\t\t\t`\n\t\t\t<div class=\"detailed-results\">\n\t\t\t</div>\n\t\t`,\n\t\t);\n\n\t\tnew EmbeddedDetailedResults(this.rootElem.getElementsByClassName('detailed-results')[0] as HTMLElement, this, this.raidSimResultsManager!);\n\t}\n\n\tprivate addTopbarComponents() {\n\t\t// TODO: Classic\n\t\tthis.simHeader.addImportLink('JSON', _parent => new Importers.IndividualJsonImporter(this.rootElem, this), true);\n\t\tthis.simHeader.addImportLink('60U SoD', _parent => new Importers.Individual60UImporter(this.rootElem, this), true);\n\t\t//this.simHeader.addImportLink('WoWHead', _parent => new Importers.IndividualWowheadGearPlannerImporter(this.rootElem, this), false);\n\t\tthis.simHeader.addImportLink('Addon', _parent => new Importers.IndividualAddonImporter(this.rootElem, this), true);\n\n\t\tthis.simHeader.addExportLink('Link', _parent => new Exporters.IndividualLinkExporter(this.rootElem, this), false);\n\t\tthis.simHeader.addExportLink('JSON', _parent => new Exporters.IndividualJsonExporter(this.rootElem, this), true);\n\t\t//this.simHeader.addExportLink('WoWHead', _parent => new Exporters.IndividualWowheadGearPlannerExporter(this.rootElem, this), false);\n\t\tthis.simHeader.addExportLink('60U SoD EP', _parent => new Exporters.Individual60UEPExporter(this.rootElem, this), false);\n\t\tthis.simHeader.addExportLink('Pawn EP', _parent => new Exporters.IndividualPawnEPExporter(this.rootElem, this), false);\n\t\t//this.simHeader.addExportLink(\"CLI\", _parent => new Exporters.IndividualCLIExporter(this.rootElem, this), true);\n\t}\n\n\tapplyDefaults(eventID: EventID) {\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\n\t\t\t//Special case for Totem of Wrath keeps buff and debuff sync'd\n\t\t\tthis.player.applySharedDefaults(eventID);\n\t\t\tthis.player.setRace(eventID, this.individualConfig.defaults.race ?? specToEligibleRaces[this.player.spec][0]);\n\t\t\tthis.player.setLevel(eventID, LEVEL_THRESHOLDS[simLaunchStatuses[this.player.spec].phase]);\n\t\t\tthis.player.setGear(eventID, this.sim.db.lookupEquipmentSpec(this.individualConfig.defaults.gear));\n\t\t\tthis.player.setItemSwapGear(eventID, new ItemSwapGear({}));\n\t\t\tthis.player.setConsumes(eventID, this.individualConfig.defaults.consumes);\n\t\t\tthis.player.setTalentsString(eventID, this.individualConfig.defaults.talents.talentsString);\n\t\t\tthis.player.setSpecOptions(eventID, this.individualConfig.defaults.specOptions);\n\t\t\tthis.player.setBuffs(eventID, this.individualConfig.defaults.individualBuffs);\n\t\t\tthis.player.getParty()!.setBuffs(eventID, this.individualConfig.defaults.partyBuffs);\n\t\t\tthis.player.getRaid()!.setBuffs(eventID, this.individualConfig.defaults.raidBuffs);\n\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\tconst defaultRatios = this.player.getDefaultEpRatios(tankSpec, healingSpec);\n\t\t\tthis.player.setEpRatios(eventID, defaultRatios);\n\t\t\tthis.player.setProfession1(eventID, this.individualConfig.defaults.other?.profession1 || Profession.Engineering);\n\t\t\tthis.player.setProfession2(eventID, this.individualConfig.defaults.other?.profession2 || Profession.ProfessionUnknown);\n\t\t\tthis.player.setDistanceFromTarget(eventID, this.individualConfig.defaults.other?.distanceFromTarget || 0);\n\t\t\tthis.player.setChannelClipDelay(eventID, this.individualConfig.defaults.other?.channelClipDelay || 0);\n\n\t\t\tif (this.isWithinRaidSim) {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, 0);\n\t\t\t} else {\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, healingSpec ? 9 : 0);\n\t\t\t\tthis.sim.encounter.applyDefaults(eventID);\n\t\t\t\tthis.sim.raid.setDebuffs(eventID, this.individualConfig.defaults.debuffs);\n\t\t\t\tthis.sim.applyDefaults(eventID, tankSpec, healingSpec);\n\n\t\t\t\tif (tankSpec) {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, [this.player.makeUnitReference()]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sim.raid.setTanks(eventID, []);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetSavedGearStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_GEAR_STORAGE_KEY);\n\t}\n\n\tgetSavedRotationStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_ROTATION_STORAGE_KEY);\n\t}\n\n\tgetSavedSettingsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_SETTINGS_STORAGE_KEY);\n\t}\n\n\tgetSavedTalentsStorageKey(): string {\n\t\treturn this.getStorageKey(SAVED_TALENTS_STORAGE_KEY);\n\t}\n\n\t// Returns the actual key to use for local storage, based on the given key part and the site context.\n\tgetStorageKey(keyPart: string): string {\n\t\t// Local storage is shared by all sites under the same domain, so we need to use\n\t\t// different keys for each spec site.\n\t\treturn specToLocalStorageKey[this.player.spec] + keyPart;\n\t}\n\n\ttoProto(exportCategories?: Array<SimSettingCategories>): IndividualSimSettings {\n\t\tconst exportCategory = (cat: SimSettingCategories) => !exportCategories || exportCategories.length == 0 || exportCategories.includes(cat);\n\n\t\tconst proto = IndividualSimSettings.create({\n\t\t\tplayer: this.player.toProto(true, false, exportCategories),\n\t\t});\n\n\t\tif (exportCategory(SimSettingCategories.Miscellaneous)) {\n\t\t\tIndividualSimSettings.mergePartial(proto, {\n\t\t\t\ttanks: this.sim.raid.getTanks(),\n\t\t\t});\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.Encounter)) {\n\t\t\tIndividualSimSettings.mergePartial(proto, {\n\t\t\t\tencounter: this.sim.encounter.toProto(),\n\t\t\t});\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.External)) {\n\t\t\tIndividualSimSettings.mergePartial(proto, {\n\t\t\t\tpartyBuffs: this.player.getParty()?.getBuffs() || PartyBuffs.create(),\n\t\t\t\traidBuffs: this.sim.raid.getBuffs(),\n\t\t\t\tdebuffs: this.sim.raid.getDebuffs(),\n\t\t\t\ttargetDummies: this.sim.raid.getTargetDummies(),\n\t\t\t});\n\t\t}\n\t\tif (exportCategory(SimSettingCategories.UISettings)) {\n\t\t\tIndividualSimSettings.mergePartial(proto, {\n\t\t\t\tsettings: this.sim.toProto(),\n\t\t\t\tepWeightsStats: this.player.getEpWeights().toProto(),\n\t\t\t\tepRatios: this.player.getEpRatios(),\n\t\t\t\tdpsRefStat: this.dpsRefStat,\n\t\t\t\thealRefStat: this.healRefStat,\n\t\t\t\ttankRefStat: this.tankRefStat,\n\t\t\t});\n\t\t}\n\n\t\treturn proto;\n\t}\n\n\ttoLink(): string {\n\t\treturn Exporters.IndividualLinkExporter.createLink(this);\n\t}\n\n\tfromProto(eventID: EventID, settings: IndividualSimSettings, includeCategories?: Array<SimSettingCategories>) {\n\t\tconst loadCategory = (cat: SimSettingCategories) => !includeCategories || includeCategories.length == 0 || includeCategories.includes(cat);\n\n\t\tconst tankSpec = isTankSpec(this.player.spec);\n\t\tconst healingSpec = isHealingSpec(this.player.spec);\n\n\t\tTypedEvent.freezeAllAndDo(() => {\n\t\t\tif (!settings.player) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.player.fromProto(eventID, settings.player, includeCategories);\n\n\t\t\tif (loadCategory(SimSettingCategories.Miscellaneous)) {\n\t\t\t\tthis.sim.raid.setTanks(eventID, settings.tanks || []);\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.External)) {\n\t\t\t\tthis.sim.raid.setBuffs(eventID, settings.raidBuffs || RaidBuffs.create());\n\t\t\t\tthis.sim.raid.setDebuffs(eventID, settings.debuffs || Debuffs.create());\n\t\t\t\tconst party = this.player.getParty();\n\t\t\t\tif (party) {\n\t\t\t\t\tparty.setBuffs(eventID, settings.partyBuffs || PartyBuffs.create());\n\t\t\t\t}\n\t\t\t\tthis.sim.raid.setTargetDummies(eventID, settings.targetDummies);\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.Encounter)) {\n\t\t\t\tthis.sim.encounter.fromProto(eventID, settings.encounter || EncounterProto.create());\n\t\t\t}\n\t\t\tif (loadCategory(SimSettingCategories.UISettings)) {\n\t\t\t\tif (settings.epWeightsStats) {\n\t\t\t\t\tthis.player.setEpWeights(eventID, Stats.fromProto(settings.epWeightsStats));\n\t\t\t\t} else {\n\t\t\t\t\tthis.player.setEpWeights(eventID, this.individualConfig.defaults.epWeights);\n\t\t\t\t}\n\n\t\t\t\tconst defaultRatios = this.player.getDefaultEpRatios(tankSpec, healingSpec);\n\t\t\t\tif (settings.epRatios) {\n\t\t\t\t\tconst missingRatios = new Array<number>(defaultRatios.length - settings.epRatios.length).fill(0);\n\t\t\t\t\tthis.player.setEpRatios(eventID, settings.epRatios.concat(missingRatios));\n\t\t\t\t} else {\n\t\t\t\t\tthis.player.setEpRatios(eventID, defaultRatios);\n\t\t\t\t}\n\n\t\t\t\tif (settings.dpsRefStat) {\n\t\t\t\t\tthis.dpsRefStat = settings.dpsRefStat;\n\t\t\t\t}\n\t\t\t\tif (settings.healRefStat) {\n\t\t\t\t\tthis.healRefStat = settings.healRefStat;\n\t\t\t\t}\n\t\t\t\tif (settings.tankRefStat) {\n\t\t\t\t\tthis.tankRefStat = settings.tankRefStat;\n\t\t\t\t}\n\n\t\t\t\tif (settings.settings) {\n\t\t\t\t\tthis.sim.fromProto(eventID, settings.settings);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sim.applyDefaults(eventID, tankSpec, healingSpec);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import * as Tooltips from './constants/tooltips.js';\nimport { Player } from './player';\nimport { APLRotation, APLRotation_Type as APLRotationType } from './proto/apl';\nimport { EquipmentSpec, Faction, Spec } from './proto/common';\nimport { SavedRotation, SavedTalents } from './proto/ui';\nimport { SpecRotation, specTypeFunctions } from './proto_utils/utils';\n\nexport interface PresetGear {\n\tname: string;\n\tgear: EquipmentSpec;\n\ttooltip?: string;\n\tenableWhen?: (obj: Player<any>) => boolean;\n}\n\nexport interface PresetTalents {\n\tname: string;\n\tdata: SavedTalents;\n\tenableWhen?: (obj: Player<any>) => boolean;\n}\n\nexport interface PresetRotation {\n\tname: string;\n\trotation: SavedRotation;\n\ttooltip?: string;\n\tenableWhen?: (obj: Player<any>) => boolean;\n}\n\nexport interface PresetBuild {\n\tname: string;\n\tgear: PresetGear;\n\ttalents: PresetTalents;\n\trotation: PresetRotation;\n}\n\nexport interface PresetGearOptions {\n\ttalentTree?: number;\n\ttalentTrees?: Array<number>;\n\tfaction?: Faction;\n\tcustomCondition?: (player: Player<any>) => boolean;\n\n\ttooltip?: string;\n}\n\nexport interface PresetRotationOptions {\n\ttalentTree?: number;\n\tcustomCondition?: (player: Player<any>) => boolean;\n}\n\nexport function makePresetGear(name: string, gearJson: any, options?: PresetGearOptions): PresetGear {\n\tconst gear = EquipmentSpec.fromJson(gearJson);\n\treturn makePresetGearHelper(name, gear, options || {});\n}\n\nfunction makePresetGearHelper(name: string, gear: EquipmentSpec, options: PresetGearOptions): PresetGear {\n\tconst conditions: Array<(player: Player<any>) => boolean> = [];\n\tif (options.talentTree != undefined) {\n\t\tconditions.push((player: Player<any>) => player.getTalentTree() == options.talentTree);\n\t}\n\tif (options.talentTrees != undefined) {\n\t\tconditions.push((player: Player<any>) => (options.talentTrees || []).includes(player.getTalentTree()));\n\t}\n\tif (options.faction != undefined) {\n\t\tconditions.push((player: Player<any>) => player.getFaction() == options.faction);\n\t}\n\tif (options.customCondition != undefined) {\n\t\tconditions.push(options.customCondition);\n\t}\n\n\treturn {\n\t\tname: name,\n\t\ttooltip: options.tooltip || Tooltips.BASIC_BIS_DISCLAIMER,\n\t\tgear: gear,\n\t\tenableWhen: conditions.length > 0 ? (player: Player<any>) => conditions.every(cond => cond(player)) : undefined,\n\t};\n}\n\nexport interface PresetTalentsOptions {\n\tcustomCondition?: (player: Player<any>) => boolean;\n}\n\nexport function makePresetTalents(name: string, data: SavedTalents, options?: PresetTalentsOptions): PresetTalents {\n\tconst conditions: Array<(player: Player<any>) => boolean> = [];\n\tif (options && options.customCondition) {\n\t\tconditions.push(options.customCondition);\n\t}\n\n\treturn {\n\t\tname,\n\t\tdata,\n\t\tenableWhen: conditions.length > 0 ? (player: Player<any>) => conditions.every(cond => cond(player)) : undefined,\n\t};\n}\n\nexport function makePresetAPLRotation(name: string, rotationJson: any, options?: PresetRotationOptions): PresetRotation {\n\tconst rotation = SavedRotation.create({\n\t\trotation: APLRotation.fromJson(rotationJson),\n\t});\n\treturn makePresetRotationHelper(name, rotation, options);\n}\n\nexport function makePresetSimpleRotation<SpecType extends Spec>(\n\tname: string,\n\tspec: SpecType,\n\tsimpleRotation: SpecRotation<SpecType>,\n\toptions?: PresetRotationOptions,\n): PresetRotation {\n\tconst rotation = SavedRotation.create({\n\t\trotation: {\n\t\t\ttype: APLRotationType.TypeSimple,\n\t\t\tsimple: {\n\t\t\t\tspecRotationJson: JSON.stringify(specTypeFunctions[spec].rotationToJson(simpleRotation)),\n\t\t\t},\n\t\t},\n\t});\n\treturn makePresetRotationHelper(name, rotation, options);\n}\n\nfunction makePresetRotationHelper(name: string, rotation: SavedRotation, options?: PresetRotationOptions): PresetRotation {\n\tconst conditions: Array<(player: Player<any>) => boolean> = [];\n\tif (options?.talentTree != undefined) {\n\t\tconditions.push((player: Player<any>) => player.getTalentTree() == options.talentTree);\n\t}\n\tif (options?.customCondition != undefined) {\n\t\tconditions.push(options.customCondition);\n\t}\n\n\treturn {\n\t\tname: name,\n\t\trotation: rotation,\n\t\tenableWhen: conditions.length > 0 ? (player: Player<any>) => conditions.every(cond => cond(player)) : undefined,\n\t};\n}\n\nexport function makePresetBuild(name: string, gear: PresetGear, talents: PresetTalents, rotation: PresetRotation): PresetBuild {\n\treturn { name, gear, talents, rotation };\n}\n"],"names":["LaunchStatus","LaunchStatus2","raidSimStatus","phase","Phase","Phase1","status","simLaunchStatuses","Spec","SpecBalanceDruid","Phase3","SpecFeralDruid","SpecFeralTankDruid","SpecRestorationDruid","SpecElementalShaman","SpecEnhancementShaman","SpecRestorationShaman","SpecHunter","SpecMage","SpecRogue","SpecTankRogue","SpecHolyPaladin","SpecProtectionPaladin","SpecRetributionPaladin","SpecHealingPriest","SpecShadowPriest","SpecWarlock","SpecTankWarlock","SpecWarrior","SpecProtectionWarrior","getLaunchedSimsForClass","klass","Object","keys","specToClass","map","specStr","parseInt","filter","spec","MAX_PARTY_SIZE","Party","constructor","raid","sim","this","buffs","PartyBuffs","create","compChangeEmitter","TypedEvent","buffsChangeEmitter","players","Array","i","playerChangeListener","eventID","changeEmitter","emit","onAny","size","player","length","isEmpty","clear","setBuffs","setPlayer","getIndex","getParties","indexOf","getPlayers","slice","getPlayer","playerIndex","newPlayer","Error","freezeAllAndDo","oldPlayer","off","setParty","newPlayerOldParty","getParty","getPartyIndex","on","getBuffs","clone","newBuffs","equals","toProto","forExport","forSimming","PartyProto","PlayerProto","fromProto","proto","class","Class","ClassUnknown","playerProto","playerToSpec","currentPlayer","Player","STATS_LEN","getEnumValues","Stat","PSEUDOSTATS_LEN","PseudoStat","UnitStat","stat","pseudoStat","isStat","isPseudoStat","getStat","getPseudoStat","other","getName","clazz","getClassStatName","pseudoStatNames","get","getProtoValue","stats","pseudoStats","setProtoValue","val","fromStat","fromPseudoStat","getAll","allStats","StatEnergy","StatRage","includes","allPseudoStats","flat","Stats","initStatsArray","expectedLen","newStats","concat","fill","every","newStat","statIdx","getUnitStat","withStat","value","withPseudoStat","withUnitStat","addStat","add","subtract","scale","scalar","_","computeEP","epWeights","total","forEach","idx","belowCaps","statCaps","entries","asArray","toJson","UnitStats","fromJson","obj","fromMap","statsMap","pseudoStatsMap","statsArr","entry","statStr","Number","pseudoStatsArr","pseudoStatstr","unitStats","CopyButton","Component","parent","config","btnRef","ref","super","element","className","extraCssClasses","join","text","button","clicked","addEventListener","_event","data","getContent","navigator","clipboard","alert","writeText","originalContent","innerHTML","setTimeout","tooltip","Tooltip","getOrCreateInstance","title","TalentsPicker","Input","inline","pointsPerRow","numRows","Math","max","trees","treeConfig","talents","talentConfig","location","rowIdx","numCols","colIdx","getMaxPoints","getLevel","maxPoints","getPointsRemaining","getTalentTreePoints","reduce","sum","points","pointsRemainingElemRef","actionsContainerRef","carouselContainerRef","carouselPrevBtnRef","carouselNextBtnRef","rootElem","appendChild","id","type","attributes","carouselContainer","carouselPrevBtn","carouselNextBtn","levelChangeEmitter","talentsChangeEmitter","setMaxPoints","textContent","getTalentsString","carouselItem","document","createElement","classList","TalentTreePicker","tree","talent","setPoints","carouselitemIdx","style","transform","children","abs","remove","init","getInputElem","getInputValue","replace","setInputValue","newValue","parts","split","setTalentsString","updateTrees","isFull","update","numPoints","newMaxPoints","picker","specNumber","fragment","src","getSpecIcon","getElementsByClassName","pointsElem","querySelector","backgroundImage","backgroundUrl","main","gridTemplateRows","gridTemplateColumns","iconSize","height","maxWidth","TalentPicker","prereqLocation","getTalent","childLocations","push","recurseCalcIdx","t","z","initChildReqs","zIndex","cl","c","parentReq","getChildReqArrow","resetBtn","inputChanged","nextEventID","name","getMaxSpendablePoints","find","getRow","getCol","String","getPoints","str","charAt","TalentReqArrow","parentLoc","childLoc","zIdx","gridRow","gridColumn","rowEnd","colEnd","dir","dataset","reqArrowColSize","reqArrowRowSize","gridRowEnd","gridColumnEnd","setReqFufilled","isFufilled","reqActive","childReqs","whtticon","pointsDisplay","event","preventDefault","longTouchTimer","clearTimeout","window","newPoints","isRightClick","parentElement","loc","pts","isNaN","canSetPoints","oldPoints","additionalPoints","removedPoints","pointTotalsByRow","talentsInRow","cumulativeTotalsByRow","checkValidity","min","spellId","getSpellIdForPoints","ActionId","fromSpellId","then","actionId","setWowheadHref","iconUrl","rank","spellIds","fieldName","newTalentsConfig","prevTalent","curSpellId","pointIdx","druidTalentsConfig","hunterTalentsConfig","mageTalentsConfig","paladinTalentsConfig","priestTalentsConfig","rogueTalentsConfig","shamanTalentsConfig","warlockTalentsConfig","warriorTalentsConfig","classTalentsConfig","ClassDruid","ClassShaman","ClassHunter","ClassMage","ClassRogue","ClassPaladin","ClassPriest","ClassWarlock","ClassWarrior","playerTalentStringToProto","talentString","talentsConfig","treeString","treeIdx","talentStringToProto","specTypeFunctions","talentsCreate","UnitMetadata","auras","spells","getAuras","getSpells","metadata","newSpells","spell","newAuras","aura","Promise","all","newSpell","newId","sort","a","b","stringComparator","anyUpdates","some","newAura","UnitMetadataList","metadatas","newMetadatas","oldLen","v","asList","SPEC_CONFIGS","getSpecConfig","_Player","IndividualBuffs","consumes","Consumes","bonusStats","gear","Gear","enableItemSwap","itemSwapGear","ItemSwapGear","profession1","profession2","aplRotation","APLRotation","talentsString","reactionTime","channelClipDelay","inFrontOfTarget","distanceFromTarget","healingModel","HealingModel","healingEnabled","isbSbFrequency","isbCrit","isbWarlocks","isbSpriests","autoRotationGenerator","simpleRotationGenerator","itemEPCache","randomSuffixEPCache","Map","enchantEPCache","epRatios","numEpRatios","currentStats","PlayerStats","petMetadatas","nameChangeEmitter","consumesChangeEmitter","bonusStatsChangeEmitter","gearChangeEmitter","itemSwapChangeEmitter","professionChangeEmitter","raceChangeEmitter","rotationChangeEmitter","specOptionsChangeEmitter","inFrontOfTargetChangeEmitter","distanceFromTargetChangeEmitter","healingModelChangeEmitter","epWeightsChangeEmitter","miscOptionsChangeEmitter","currentStatsEmitter","epRatiosChangeEmitter","epRefStatChangeEmitter","party","race","specToEligibleRaces","level","LEVEL_THRESHOLDS","specOptions","optionsCreate","specConfig","autoRotation","simpleRotation","ItemSlot","ItemSlotRanged","getTalentTreeIcon","getClass","getClassColor","classColors","isSpec","isClass","getRaid","getRaidIndex","newParty","getOtherPartyMembers","getItems","slot","db","item","canEquipItem","getRandomSuffixes","randomSuffixOptions","getRandomSuffixById","suffix","computeRandomSuffixEP","getEnchants","enchant","canEquipEnchant","getRunes","getEpWeights","setEpWeights","newEpWeights","getDefaultEpRatios","isTankSpec","isHealingSpec","defaultRatios","getEpRatios","setEpRatios","newRatios","computeStatWeights","epStats","epPseudoStats","epReferenceStat","onProgress","statWeights","getCurrentStats","setCurrentStats","getMetadata","getPetMetadatas","updateMetadata","playerPromise","petsPromise","pets","p","playerUpdated","petsUpdated","setName","newName","getLabel","getRace","setRace","newRace","setLevel","newLevel","getProfession1","setProfession1","newProfession","getProfession2","setProfession2","getProfessions","Profession","ProfessionUnknown","setProfessions","newProfessions","hasProfession","prof","isBlacksmithing","Blacksmithing","getFaction","raceToFaction","getConsumes","setConsumes","newConsumes","canDualWield2H","equipItem","newItem","setGear","withEquippedItem","getEquippedItem","getGear","newGear","getEnableItemSwap","setEnableItemSwap","newEnableItemSwap","equipItemSwapitem","setItemSwapGear","getItemSwapItem","getItemSwapGear","newItemSwapGear","getBonusStats","setBonusStats","newBonusStats","getMeleeCritCapInfo","meleeCrit","finalStats","StatMeleeCrit","Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE","meleeHit","StatMeleeHit","Mechanics.MELEE_HIT_RATING_PER_HIT_CHANCE","expertise","StatExpertise","Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION","hasOffhandWeapon","ItemSlotOffHand","weaponSpeed","meleeHitCap","parryCap","getInFrontOfTarget","expertiseCap","remainingMeleeHitCap","remainingExpertiseCap","specSpecificOffset","getTalents","elementalDevastation","getDebuffs","baseCritCap","suppression","glancing","debuffCrit","playerCritCapDelta","getMeleeCritCap","getSimpleRotation","jsonStr","simple","specRotationJson","rotationCreate","json","JSON","parse","rotationFromJson","e","console","warn","setSimpleRotation","newRotation","rotationEquals","SimpleRotation","stringify","rotationToJson","getSimpleCooldowns","Cooldowns","cooldowns","setSimpleCooldowns","newCooldowns","setAplRotation","getRotationType","APLRotationType","TypeUnknown","TypeAPL","hasSimpleRotationGenerator","getResolvedAplRotation","TypeAuto","rot","TypeSimple","simpleRot","newTalentsString","getTalentTree","getSpecOptions","optionsCopy","setSpecOptions","newSpecOptions","optionsEquals","getReactionTime","setReactionTime","newReactionTime","getChannelClipDelay","setChannelClipDelay","newChannelClipDelay","setInFrontOfTarget","newInFrontOfTarget","getDistanceFromTarget","setDistanceFromTarget","newDistanceFromTarget","setDefaultHealingParams","hm","boss","encounter","primaryTarget","dualWield","cadenceSeconds","swingSpeed","hps","minBaseDamage","enableHealing","getHealingModel","setHealingModel","newHealingModel","getIsbSbFrequency","setIsbSbFrequency","newIsbSbFrequency","getIsbCrit","setIsbCrit","newIsbCrit","getIsbWarlocks","setIsbWarlocks","newIsbWarlocks","getIsbSpriests","setIsbSpriests","newIsbSpriests","computeStatsEP","computeEnchantEP","has","effectId","ep","set","randomSuffix","computeItemEP","cached","itemStats","weaponDps","getWeaponDPS","ItemSlotMainHand","PseudoStatMainHandDps","PseudoStatOffHandDps","PseudoStatRangedDps","maxSuffixEP","suffixEPs","unique","setWowheadData","equippedItem","elem","lang","getLanguageCode","langPrefix","ei","wowhead","filterItemData","itemData","getItemFunc","filters","getFilters","filterItems","filterFunc","itemElem","factionRestriction","UIItem_FactionRestriction","UNSPECIFIED","sources","SourceFilterOption","SourceCrafting","itemSrc","source","oneofKind","SourceQuest","SourceReputation","SourceDungeon","zoneName","DungeonFilterOption","zoneId","drop","SourceRaid","RaidFilterOption","SourceWorldBOE","ARMOR_SLOTS","armorTypes","armorType","WEAPON_SLOTS","weaponTypes","weaponType","oneHandedWeapons","handType","HandType","HandTypeTwoHand","twoHandedWeapons","minSpeed","minMhWeaponSpeed","minOhWeaponSpeed","maxSpeed","maxMhWeaponSpeed","maxOhWeaponSpeed","rangedWeaponTypes","rangedWeaponType","minRangedWeaponSpeed","maxRangedWeaponSpeed","filterEnchantData","enchantData","getEnchantFunc","currentEquippedItem","enchantElem","enchantAppliesToItem","makeUnitReference","emptyUnitReference","newUnitReference","toDatabase","dbGear","dbItemSwapGear","Database","mergeSimDatabases","exportCategories","exportCategory","cat","database","SimSettingCategories","mergePartial","equipment","asSpec","itemSwap","Talents","Rotation","hpPercentForDefensives","rotation","Miscellaneous","reactionTimeMs","channelClipDelayMs","withSpecProto","External","includeCategories","loadCategory","TypeLegacy","lookupEquipmentSpec","lookupItemSwap","optionsFromPlayer","applySharedDefaults","burstWindow","getMatchingSpellActionId","match","minLevel","maxLevel","getMatchingItemActionId","fromItemId","ItemSlotHead","ItemSlotShoulder","ItemSlotChest","ItemSlotWrist","ItemSlotHands","ItemSlotLegs","ItemSlotWaist","ItemSlotFeet","Encounter","duration","durationVariation","executeProportion20","executeProportion25","executeProportion35","useHealth","targetsChangeEmitter","durationChangeEmitter","executeProportionChangeEmitter","targetsMetadata","waitForInit","Mechanics.CURRENT_LEVEL_CAP","presetTarget","getPresetTargetForLevel","targets","target","emitter","TargetProto","getDurationVariation","setDurationVariation","newDuration","getDuration","setDuration","getExecuteProportion20","setExecuteProportion20","newExecuteProportion20","getExecuteProportion25","setExecuteProportion25","newExecuteProportion25","getExecuteProportion35","setExecuteProportion35","newExecuteProportion35","getUseHealth","setUseHealth","newUseHealth","matchesPreset","preset","applyPreset","applyPresetTarget","index","EncounterProto","applyDefaults","playerLevel","presetTargets","getAllPresetTargets","MAX_NUM_PARTIES","Raid","RaidBuffs","debuffs","Debuffs","tanks","targetDummies","numActiveParties","debuffsChangeEmitter","tanksChangeEmitter","targetDummiesChangeEmitter","numActivePartiesChangeEmitter","parties","activePlayers","floor","getPlayerFromUnitReference","raidTarget","contextPlayer","UnitType","Unknown","Self","getClassCount","playerClass","setDebuffs","newDebuffs","getTanks","UnitReference","tank","setTanks","newTanks","getTargetDummies","setTargetDummies","newTargetDummies","getNumActiveParties","setNumActiveParties","newNumActiveParties","getActivePlayers","activeParties","RaidProto","curseOfElements","curseOfElementsNew","TristateEffect","TristateEffectMissing","TristateEffectRegular","curseOfShadow","curseOfShadowNew","SIM_WORKER_URL","REPO_NAME","WorkerPool","numWorkers","workers","SimWorker","getLeastBusyWorker","curMinWorker","nextWorker","numTasksRunning","makeApiCall","requestName","request","doApiCall","computeStats","result","ComputeStatsRequest","toBinary","ComputeStatsResult","fromBinary","statWeightsAsync","log","StatWeightsRequest","toJsonString","worker","makeTaskId","addPromiseFunc","newProgressHandler","_err","resultData","ProgressMetrics","StatWeightsResult","finalWeightResult","bulkSimAsync","BulkSimRequest","enumAsInteger","resultJson","BulkSimResult","finalBulkResult","raidSimAsync","RaidSimRequest","RaidSimResult","finalRaidResult","progressData","progress","taskIdsToPromiseFuncs","Worker","resolveReady","onReady","_resolve","_reject","onmessage","msg","postMessage","promiseFuncs","outputData","callback","onError","characters","random","taskPromise","resolve","reject","inputData","SimSettingCategories2","_Sim","iterations","OtherConstants.CURRENT_PHASE","faction","Faction","Alliance","fixedRngSeed","defaultFilters","showDamageMetrics","showThreatMetrics","showHealingMetrics","showExperimental","showEPValues","language","db_","iterationsChangeEmitter","phaseChangeEmitter","factionChangeEmitter","fixedRngSeedChangeEmitter","lastUsedRngSeedChangeEmitter","filtersChangeEmitter","showDamageMetricsChangeEmitter","showThreatMetricsChangeEmitter","showHealingMetricsChangeEmitter","showExperimentalChangeEmitter","showEPValuesChangeEmitter","languageChangeEmitter","crashEmitter","unitMetadataEmitter","simResultEmitter","bulkSimStartEmitter","bulkSimResultEmitter","lastUsedRngSeed","modifyRaidProto","workerPool","_initPromise","settingsChangeEmitter","updateCharacterStats","setModifyRaidProto","newModFn","getModifiedRaidProto","raidProto","makeRaidSimRequest","debug","simOptions","SimOptions","getIterations","randomSeed","BigInt","nextRngSeed","debugFirstIteration","runBulkSim","bulkSettings","bulkItemsDb","baseSettings","playerDatabase","items","enchants","errorResult","SimError","runRaidSim","simResult","SimResult","makeNew","runRaidSimWithLogs","req","async","playerUpdatePromises","raidStats","partyStats","partyIndex","playerStats","targetUpdatePromise","encounterStats","raidBuffs","partyBuffs","statsToWeigh","pseudoStatsToWeigh","getUnitMetadata","defaultRef","Target","Pet","owner","CurrentTarget","getPhase","setPhase","newPhase","setFaction","newFaction","getFixedRngSeed","setFixedRngSeed","newFixedRngSeed","rngSeed","MAX_RNG_SEED","getLastUsedRngSeed","DatabaseFilters","setFilters","newFilters","getShowDamageMetrics","setShowDamageMetrics","newShowDamageMetrics","getShowThreatMetrics","setShowThreatMetrics","newShowThreatMetrics","getShowHealingMetrics","setShowHealingMetrics","newShowHealingMetrics","getShowExperimental","setShowExperimental","newShowExperimental","getShowEPValues","setShowEPValues","newShowEPValues","getLanguage","setLanguage","newLanguage","getBrowserLanguageCode","setLanguageCode","setIterations","newIterations","ALL_ARMOR_TYPES","ALL_WEAPON_TYPES","ALL_RANGED_WEAPON_TYPES","ALL_SOURCES","raids","ALL_RAIDS","SimSettingsProto","showEpValues","isTankSim","isHealingSim","pow","ArmorType","WeaponType","RangedWeaponType","Sim","errorStr","IconPickerDirection","IconPicker","modObj","incrementValue","states","currentValue","step","decrementValue","active","rootAnchor","disableWowheadTouchTooltip","prepend","useImprovedIcons","Boolean","improvedId","improvedId2","ia","ia2","ce","improvedAnchor","improvedAnchor2","counterElem","fillAndSet","updateState","modObject","showWhen","restoreValue","storeValue","changedEvent","leftClickFn","reverse","rightClickFn","getActionId","getValue","hidden","storedValue","IconEnumPicker","direction","Vertical","zeroValue","html","href","role","bsToggle","buttonElem","buttonText","dropdownMenu","numColumns","Horizontal","gridAutoFlow","values","valueConfig","optionContainer","option","updateOption","setImage","showValueWhen","setActionImage","removeAttribute","backgroundColor","color","setActive","enabled","display","backupIconUrl","backupId","makeMultiIconInput","inputs","label","makeWrappedBooleanInput","getModObject","labelTooltip","setValue","enableWhen","makeSpecOptionsBooleanInput","newVal","newMessage","makeRotationBooleanInput","makeWrappedNumberInput","float","positive","defaultValue","makeSpecOptionsNumberInput","internalConfig","percent","makeRotationNumberInput","makeWrappedEnumInput","makeSpecOptionsEnumInput","makeRotationEnumInput","makeWrappedIconInput","makeBooleanIconInput","getFieldValue","setFieldValue","makeSpecOptionsBooleanIconInput","makeNumberIconInput","makeTristateIconInput","impId","input","makeMultistateIconInput","numStates","multiplier","makeEnumIconInput","makeWrappedEnumIconInput","makeSpecOptionsEnumIconInput","buildIconInput","inputConfig","withLabel","makeBooleanRaidBuffInput","InputHelpers.makeBooleanIconInput","makeBooleanIndividualBuffInput","makeBooleanConsumeInput","makeBooleanMiscConsumeInput","miscConsumes","MiscConsumes","makeBooleanDebuffInput","makeTristateRaidBuffInput","InputHelpers.makeTristateIconInput","makeTristateIndividualBuffInput","makeTristateDebuffInput","makeMultistateRaidBuffInput","InputHelpers.makeMultistateIconInput","makeMultistateIndividualBuffInput","makeMultistateMultiplierDebuffInput","makeEnumConsumeInput","InputHelpers.makeEnumIconInput","MultiIconPicker","simUI","labelElem","hasOwnProperty","clearPicker","buildBlankOption","pickers","pickerConfig","updateButtonImage","listItem","getMaxValue","categoryId","AllStatsBuff","AllStatsPercentBuff","InputHelpers.makeMultiIconInput","ArmorBuff","StaminaBuff","BloodPactBuff","PaladinPhysicalBuff","StrengthBuffHorde","Horde","GraceOfAir","IntellectBuff","SpiritBuff","BattleShoutBuff","TrueshotAuraBuff","BattleSquawkBuff","DamageReductionPercentBuff","ResistanceBuff","BlessingOfWisdom","ManaSpringTotem","MeleeCritBuff","SpellCritBuff","SpellIncreaseBuff","RetributionAura","SanctityAura","Thorns","Innervate","PowerInfusion","RallyingCryOfTheDragonslayer","SpiritOfZandalar","SongflowerSerenade","WarchiefsBlessing","SaygesDarkFortune","makeEnumIndividualBuffInput","SaygesFortune","SaygesUnknown","SaygesDamage","SaygesAgility","SaygesIntellect","SaygesSpirit","SaygesStamina","FengusFerocity","MoldarsMoxie","BoonOfBlackfathom","AshenvalePvpBuff","SparkOfInspiration","FervorOfTheTempleExplorer","MajorArmorDebuff","CurseOfRecklessness","FaerieFire","curseOfWeaknessDebuff","AttackPowerDebuff","BleedDebuff","MeleeAttackSpeedDebuff","MeleeHitDebuff","SpellISBDebuff","SpellScorchDebuff","SpellWintersChillDebuff","NatureSpellDamageDebuff","SpellShadowWeavingDebuff","CurseOfElements","CurseOfShadow","HuntersMark","JudgementOfWisdom","JudgementOfTheCrusader","MekkatorqueFistDebuff","SerpentsStrikerFistDebuff","JudgementOfLight","CurseOfVulnerability","GiftOfArthas","CrystalYield","AncientCorrosivePoison","RAID_BUFFS_CONFIG","StatArmor","StatStamina","StatStrength","StatAgility","StatAttackPower","StatIntellect","StatSpirit","StatRangedAttackPower","StatSpellPower","StatSpellCrit","StatNatureResistance","StatShadowResistance","StatFireResistance","StatFrostResistance","StatMP5","StatHolyPower","StatMeleeHaste","WORLD_BUFFS_CONFIG","StatHealth","SAYGES_CONFIG","DEBUFFS_CONFIG","StatShadowPower","StatFirePower","StatFrostPower","StatNaturePower","StatArcanePower","StatDodge","DEBUFFS_MISC_CONFIG","InstantPoisonWeaponImbue","WeaponImbue","InstantPoison","DeadlyPoisonWeaponImbue","DeadlyPoison","WoundPoisonWeaponImbue","WoundPoison","RockbiterWeaponImbue","RockbiterWeapon","FlametongueWeaponImbue","FlametongueWeapon","FrostbrandWeaponImbue","FrostbrandWeapon","WindfuryWeaponImbue","WindfuryWeapon","makeConsumeInputFactory","args","options","consumesFieldName","onSet","ConjuredMinorRecombobulator","Conjured","hasTrinket","ConjuredDemonicRune","ConjuredRogueThistleTea","CONJURED_CONFIG","makeConjuredInput","EnchantedSigilInnovation","EnchantedSigil","InnovationSigil","ENCHANTED_SIGIL_CONFIG","LivingDreamsSigil","makeEncanthedSigilInput","Enchanting","ExplosiveSolidDynamite","Engineering","Explosive","ExplosiveGoblinLandMine","ExplosiveDenseDynamite","ExplosiveThoriumGrenade","EXPLOSIVES_CONFIG","ExplosiveEzThroRadiationBomb","ExplosiveHighYieldRadiationBomb","makeExplosivesInput","Sapper","FlaskOfTheTitans","Flask","FlaskOfDistilledWisdom","FlaskOfSupremePower","FlaskOfChromaticResistance","FlaskOfRestlessDreams","Alchemy","FlaskOfEverlastingNightmares","FLASKS_CONFIG","makeFlasksInput","DirgesKickChimaerokChops","Food","FoodDirgesKickChimaerokChops","GrilledSquid","FoodGrilledSquid","SmokedDesertDumpling","FoodSmokedDesertDumpling","RunnTumTuberSurprise","FoodRunnTumTuberSurprise","BlessSunfruit","FoodBlessSunfruit","BlessedSunfruitJuice","FoodBlessedSunfruitJuice","NightfinSoup","FoodNightfinSoup","TenderWolfSteak","FoodTenderWolfSteak","SagefishDelight","FoodSagefishDelight","HotWolfRibs","FoodHotWolfRibs","SmokedSagefish","FoodSmokedSagefish","FOOD_CONFIG","makeFoodInput","DragonBreathChili","RumseyRumBlackLabel","Alcohol","AlcoholRumseyRumLight","GordokGreenGrog","RumseyRumDark","RumseyRumLight","KreegsStoutBeatdown","ALCOHOL_CONFIG","ElixirOfSuperiorDefense","ArmorElixir","ElixirOfGreaterDefense","ElixirOfDefense","ElixirOfMinorDefense","ScrollOfProtection","ARMOR_CONSUMES_CONFIG","makeArmorConsumeInput","ElixirOfFortitude","HealthElixir","ElixirOfMinorFortitude","HEALTH_CONSUMES_CONFIG","makeHealthConsumeInput","JujuMight","AttackPowerBuff","WinterfallFirewater","ATTACK_POWER_CONSUMES_CONFIG","makeAttackPowerConsumeInput","ElixirOfTheMongoose","AgilityElixir","ElixirOfGreaterAgility","ElixirOfAgility","ElixirOfLesserAgility","ScrollOfAgility","AGILITY_CONSUMES_CONFIG","makeAgilityConsumeInput","JujuPower","StrengthBuff","ElixirOfGiants","ElixirOfOgresStrength","ScrollOfStrength","STRENGTH_CONSUMES_CONFIG","makeStrengthConsumeInput","ROIDS","ZanzaBuff","GroundScorpokAssay","LungJuiceCocktail","CerebralCortexCompound","GizzardGum","SpiritOfZanza","AtalAiMojoOfWar","AtalaiMojoOfWar","AtalAiMojoOfForbiddenMagic","AtalaiMojoOfForbiddenMagic","AtalAiMojoOfLife","AtalaiMojoOfLife","ZANZA_BUFF_CONSUMES_CONFIG","StatHealingPower","makeZanzaBuffConsumesInput","MISC_CONSUMES_CONFIG","PetScrollOfAgility","PetScrollOfStrength","LesserManaPotion","Potions","ManaPotion","GreaterManaPotion","SuperiorManaPotion","MajorManaPotion","MightRagePotion","MightyRagePotion","GreatRagePotion","RagePotion","GreaterStoneshieldPotion","LesserStoneshieldPotion","POTIONS_CONFIG","makePotionsInput","MildlyIrradiatedRejuvPotion","GreaterArcaneElixir","SpellPowerBuff","ArcaneElixir","LesserArcaneElixir","SPELL_POWER_CONFIG","makeSpellPowerConsumeInput","ElixirOfGreaterFirepower","FirePowerBuff","ElixirOfFirepower","FIRE_POWER_CONFIG","makeFirePowerConsumeInput","FROST_POWER_CONFIG","FrostPowerBuff","ElixirOfFrostPower","makeFrostPowerConsumeInput","SHADOW_POWER_CONFIG","ShadowPowerBuff","ElixirOfShadowPower","makeShadowPowerConsumeInput","MP5_CONFIG","ManaRegenElixir","MagebloodPotion","makeMp5ConsumeInput","Windfury","WildStrikes","BrillianWizardOil","WizardOil","LesserWizardOil","MinorWizardOil","BrilliantManaOil","LesserManaOil","MinorManaOil","BlackfathomManaOil","ElementalSharpeningStone","isSharpWeaponType","WeaponTypeUnknown","DenseSharpeningStone","SolidSharpeningStone","BlackfathomSharpeningStone","DenseWeightstone","isBluntWeaponType","SolidWeightstone","ShadowOil","FrostOil","SHAMAN_IMBUES","ROGUE_IMBUES","CONSUMABLES_IMBUES","WEAPON_IMBUES_OH_CONFIG","WEAPON_IMBUES_MH_CONFIG","makeMainHandImbuesInput","makeOffHandImbuesInput","WeaponTypeOffHand","WeaponTypeShield","EnumPicker","selectElem","ReactionTime","ChannelClipDelay","InFrontOfTarget","DistanceFromTarget","IsbConfig","improvedShadowBolt","TankAssignment","findIndex","IncomingHps","HealingCadence","HealingCadenceVariation","cadenceVariation","BurstWindow","HpPercentForDefensives","InspirationUptime","inspirationUptime","NumberPicker","inputElem","onchange","parseFloat","toFixed","toString","updateSize","newSize","CharacterStats","modifyDisplayStats","statOrder","playerLevelRef","table","valueElems","statName","row","bonusStatsLink","valueElem","shouldShowMeleeCritCap","meleeCritCapValueElem","updateStats","statMods","baseStats","gearStats","talentsStats","buffsStats","consumesStats","debuffStats","getDebuffStats","baseDelta","gearDelta","talentsDelta","buffsDelta","consumesDelta","statDisplayString","bonusStatValue","tooltipContent","meleeCritCapInfo","meleeCritCapDisplayString","capDelta","deltaStats","rawValue","StatBlockValue","PseudoStatBlockValueMultiplier","displayStr","round","StatSpellHit","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","StatSpellDamage","spDmg","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","Mechanics.SPECIAL_MELEE_HASTE_RATING_PER_HASTE_PERCENT","Mechanics.HASTE_RATING_PER_HASTE_PERCENT","StatSpellHaste","StatArmorPenetration","Mechanics.ARMOR_PEN_PER_PERCENT_ARMOR","StatDefense","Mechanics.MAX_CHARACTER_LEVEL","Mechanics.DEFENSE_RATING_PER_DEFENSE","StatBlock","Mechanics.BLOCK_RATING_PER_BLOCK_CHANCE","Mechanics.MISS_DODGE_PARRY_BLOCK_CRIT_CHANCE_PER_DEFENSE","StatParry","StatResilience","Mechanics.RESILIENCE_RATING_PER_CRIT_REDUCTION_CHANCE","link","popover","hide","Popover","customClass","placement","fallbackPlacements","sanitize","content","TYPED_OK","Uint8Array","Uint16Array","Int32Array","_has","key","prototype","call","exports","assign","arguments","shift","TypeError","shrinkBuf","buf","subarray","fnTyped","arraySet","dest","src_offs","len","dest_offs","flattenChunks","chunks","l","pos","chunk","fnUntyped","apply","setTyped","Buf8","Buf16","Buf32","utils","require$$0","Z_BINARY","Z_TEXT","zero","STORED_BLOCK","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","MAX_MATCH","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","s","w","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","bi_reverse","code","res","gen_codes","bl_count","bits","n","next_code","init_block","dyn_ltree","dyn_dtree","bl_tree","opt_len","static_len","last_lit","matches","bi_windup","smaller","m","depth","_n2","_m2","pqdownheap","k","heap","j","heap_len","compress_block","ltree","dtree","lc","extra","lx","d_buf","l_buf","build_tree","desc","node","stree","heap_max","h","xbits","f","base","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","send_tree","static_init_done","_tr_stored_block","stored_len","last","header","utils$6","copy_block","_tr_init","l_desc","d_desc","bl_desc","_tr_flush_block","opt_lenb","static_lenb","max_blindex","strm","data_type","black_mask","detect_data_type","build_bl_tree","strategy","lcodes","dcodes","blcodes","send_all_trees","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","s1","s2","crcTable","makeTable","configuration_table","crc32_1","crc","end","messages","require$$1","adler32","require$$2","crc32","require$$3","require$$4","Z_NO_FLUSH","Z_FINISH","Z_OK","Z_STREAM_ERROR","Z_DEFAULT_COMPRESSION","Z_FIXED","Z_UNKNOWN","Z_DEFLATED","MAX_MEM_LEVEL","MIN_MATCH","MIN_LOOKAHEAD","INIT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","err","errorCode","flush_pending","state","avail_out","utils$5","output","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","prev","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","start","_w_size","window_size","hash_size","head","avail_in","next_in","wrap","total_in","insert","ins_h","hash_shift","hash_mask","deflate_fast","flush","hash_head","bflush","match_length","max_lazy_match","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","DeflateState","pending_buf_size","gzhead","gzindex","method","last_flush","w_bits","hash_bits","deflateResetKeep","deflateReset","ret","deflateInit2","windowBits","memLevel","max_block_size","max_start","deflate_1","deflateInit","deflateSetHeader","deflate","old_flush","beg","hcrc","comment","time","os","charCodeAt","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","avail","next","tmpDict","dictLength","deflateInfo","STR_APPLY_OK","STR_APPLY_UIA_OK","fromCharCode","__","_utf8len","q","buf2binstring","strings","string2buf","c2","m_pos","str_len","buf_len","binstring2buf","buf2string","out","c_len","utf16buf","utf8border","zstream","zlib_deflate","ZStream","Z_DEFAULT_STRATEGY","Deflate","chunkSize","to","opt","raw","gzip","ended","dict","_dict_set","deflator","mode","_mode","onEnd","onData","deflateRaw","MAXBITS","lbase","lext","dbase","dext","inflate_fast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from","from_source","lencode","distcode","lenbits","distbits","top","dolen","sane","inflate_table","lens","lens_index","codes","table_index","work","opts","incr","low","mask","here_bits","here_op","here_val","sym","root","curr","left","used","huff","base_index","offs","extra_index","LENS","DISTS","HEAD","TYPE","BAD","ENOUGH_LENS","ENOUGH_DISTS","zswap32","InflateState","havedict","flags","check","wbits","offset","ncode","nlen","ndist","have","lendyn","distdyn","back","was","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","copy","utils$1","inflate_1","inflateInit","inflate","put","last_bits","last_op","last_val","hbuf","order","inf_leave","done","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","inflateInfo","constants","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_DATA_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","zlib_inflate","require$$5","GZheader","Inflate","inflator","next_out_utf8","tail","utf8str","allowBufError","inflateRaw","ungzip","pako","DEFAULT_CONFIG","footer","scrollContents","BaseModal","cssClass","modalConfig","dialogRef","headerRef","bodyRef","footerRef","modalSizeKlass","closeButton","fixed","onclick","close","dialog","body","modal","Modal","keyboard","open","dispose","onShow","_e","showBSFn","bind","hideBSFn","hiddenBSFn","show","removeEventListener","stopImmediatePropagation","backdrop","_backdrop","_element","insertAdjacentElement","stopPropagation","Importer","includeFile","uploadInputId","toLowerCase","replaceAll","textElem","descriptionElem","files","importButton","onImport","error","finishIndividualImport","charClass","equipmentSpec","talentsStr","professions","classNames","loadLeftoversIfNecessary","expectedEnchantIds","foundEnchantIds","missingEnchants","expectedId","expectedItemIds","foundItemIds","missingItems","_IndividualLinkImporter","tryParseUrlLocation","hash","substring","binary","atob","bytes","settingsBytes","settings","IndividualSimSettings","DEFAULT_CATEGORIES","urlParams","URLSearchParams","search","CATEGORY_PARAM","char","CATEGORY_KEYS","categories","UISettings","IndividualLinkImporter","IndividualJsonImporter","fromJsonString","ignoreUnknownFields","isWithinRaidSim","Individual60UImporter","importJson","nameToClass","character","gameClass","nameToRace","Race","RaceUnknown","talentIds","spellIdIndex","talentSpellIdsToTalentString","talentJson","EquipmentSpec","itemJson","itemSpec","ItemSpec","_IndividualWowheadGearPlannerImporter","url","base64Data","numTalentBytes","talentBytes","buf2hex","gearBytes","cur","slotId","isEnchanted","highid","enchantSpellId","enchantSpellIdToEffectId","slotIDs","ItemSlotNeck","ItemSlotBack","ItemSlotFinger1","ItemSlotFinger2","ItemSlotTrinket1","ItemSlotTrinket2","IndividualAddonImporter","profData","nameToProfession","gearJson","Exporter","allowDownload","downloadBtnRef","downloadString","updateContent","getData","_IndividualLinkExporter","pickersContainer","exportPickerConfigs","exportConfig","category","BooleanPicker","_modObj","createLink","protoBytes","deflated","encoded","btoa","linkUrl","URL","arrayEquals","searchParams","delete","categoryCharString","IndividualLinkExporter","IndividualJsonExporter","jsonStringifyWithFlattenedPaths","path","_Individual60UEPExporter","epValues","allUnitStats","namesToWeights","weight","encodeURIComponent","specNames","statNames","StatSpellPenetration","StatMana","StatArcaneResistance","StatBonusArmor","StatFeralAttackPower","Individual60UEPExporter","_IndividualPawnEPExporter","IndividualPawnEPExporter","ContentBlock","headerElement","buildHeader","bodyElement","buildBody","bodyClasses","TitleTag","titleTag","bodyElem","itemQualityCssClasses","ItemQuality","ItemQualityJunk","ItemQualityCommon","ItemQualityUncommon","ItemQualityRare","ItemQualityEpic","ItemQualityLegendary","ItemQualityArtifact","ItemQualityHeirloom","setItemQualityCssClass","quality","descriptionsPromise","getEnchantDescription","fetch","response","descriptionsMap","idStr","getUniqueEnchantString","factionRestrictionsToLabels","ALLIANCE_ONLY","HORDE_ONLY","FiltersMenu","section","newSection","restriction","SourceUnknown","sourceNames","maxArmorType","classToMaxArmorType","ArmorTypeLeather","section2","at","ArmorTypeUnknown","armorTypeNames","weaponTypeSection","classToEligibleWeaponTypes","ewt","weaponTypeNames","weaponSpeedSection","canDualWield","classToEligibleRangedWeaponTypes","rangedWeaponTypeSection","rangedWeaponTypeNames","rangedWeaponSpeedSection","defaults","rows_in_block","blocks_in_cluster","tag","show_no_data_row","no_data_class","no_data_text","keep_parity","callbacks","getStyle","prop","getComputedStyle","Clusterize","ds","params","last_cluster","scroll_debounce","pointer_events_set","resize_debounce","cache","cluster_height","item_height","content_tag","block_height","scroll_top","rows_in_cluster","displayedRows","rows","scroll_elem","content_elem","hasAttribute","setAttribute","scrollTop","getRowsHeight","insertToDom","scrollEv","resizeEv","destroy","clean","setContentElemRows","generateEmptyRow","refresh","force","getNumberOfRows","elementUpdate","cb","r","getScrollProgress","platform","pointerEvents","getClusterNum","scrollingProgress","exploreEnvironment","generate","this_cluster_rows","this_cluster_content_changed","checkChanges","top_offset_changed","top_offset","only_bottom_offset_changed","bottom_offset","layout","parity","renderExtraTag","clusterWillChange","rows_above","counterIncrement","clusterChanged","lastChild","tagName","append","prev_item_height","nodes","offsetHeight","marginTop","marginBottom","rows_len","generateRows","items_start","items_end","td","empty_row","no_data_content","createTextNode","colSpan","num_rows","cluster_divider","current_cluster","max_cluster","class_name","clusterize_prefix","changed","GearPicker","leftSide","rightSide","leftItemPickers","ItemPicker","rightItemPickers","itemPickers","ItemRenderer","createRuneContainer","rune","runeIconElem","runeContainer","filledId","iconElem","nameElem","runeElem","innerText","asActionId","setBackgroundAndHref","description","makeSpellUrl","makeItemUrl","itemId","isRuneSlot","itemTypeToSlotsMap","_item","hasRuneBySlot","_items","_enchants","_runes","_equippedItem","loadItems","loadItem","gearData","changeEvent","openGearSelector","openSelectorModal","addOnDisposeCallback","slotNames","getEmptySlotIconUrl","tab","SelectorModal","selectedTab","eligibleItems","eligibleEnchants","eligibleRunes","IconItemSwapPicker","iconAnchor","socketsContainerElem","SelectorModalTabs","ilists","scrollTo","tabsElem","contentElem","setData","openTabName","getAttribute","click","openTab","addTab","fromItem","baseEP","ignoreEPFilter","onEquip","withItem","EquippedItem","removeTabs","withEnchant","withRune","addRandomSuffixTab","contentId","sizeRefresh","itemProto","fromRandomSuffix","withRandomSuffix","equippedToItemFn","onRemove","setTabContent","tabContentId","selected","tabAnchor","bsTarget","ilist","ItemList","Item","is","invokeUpdate","updateSelected","applyFilter","applyFilters","hideOrShowEPValues","labelSubstring","tabElems","contentElems","tabElem","getElementById","emptySlotIcons","onItemClick","currentFilters","epButton","tabContent","placeholder","sim2","makeShow1hWeaponsSelector","makeShow2hWeaponsSelector","makeShowEPValuesSelector","listElem","itemsToDisplay","scroller","startIdx","endIdx","createItemElem","removeButton","startsWith","searchInput","simAllButton","IndividualSimUI","itemSpecs","isRangedOrTrinket","curItem","curEP","idata","bt","addItems","newEquippedItem","newItemId","newEP","epDeltaElem","listItemEP","formatDeltaTextElem","itemIdxs","sortFn","listItemData","searchQuery","include","itemA","itemB","ilvl","diff","dataA","dataB","isItemFavorited","labels","container","itemEP","equippedItemID","equippedItemEP","anchorElem","listItemElem","getSourceInfo","favoriteElem","setFavorite","fav","isFavorite","favId","favoriteItems","favIdx","splice","favoriteEnchants","toggle","makeAnchor","inner","crafted","professionNames","profession","zone","getZone","npc","getNpc","npcId","makeNpcUrl","otherName","makeZoneUrl","quest","makeQuestUrl","width","factionNames","rep","repFactionId","REP_LEVEL_NAMES","repLevel","soldBy","npcName","ResultsViewer","parentElem","warnings","pendingElem","warningElem","warningsLink","addWarningsLink","updateWarnings","hideAll","addWarningLink","classes","icon","cfg","addWarning","warning","updateOn","activeWarnings","tooltipFragment","list","outerHTML","setPending","setContent","SimTab","identifier","childNodes","navItem","buildNavItem","navLink","contentContainer","simHeader","addSimTabLink","tabFragment","buildColumn","customCssClass","column","BulkGearJsonImporter","bulkUI","lookupItemSpec","BulkSimResultRenderer","baseResult","dpsDivParent","dpsDiv","dpsNumber","formatDps","unitMetrics","dps","avg","dpsDelta","dpsDeltaSpan","formatDpsDelta","itemsContainer","itemsAdded","equipBtn","itemAdded","activateTab","renderer","itemSlotName","delta","ItemSpecWithSlot","emitDefaultValues","BulkItemPicker","setItem","getEligibleItemSlots","openEnchantGemSelector","Enchants","allItems","setItems","destroyItemButton","closeX","insertBefore","opacity","alignItems","BulkTab","itemsChangedEmitter","column1","leftPanel","rightPanel","pendingDiv","pendingResults","doCombos","fastMode","autoEnchant","gemIconElements","buildTabContent","loadSettings","getSettingsKey","getStorageKey","storedSettings","localStorage","getItem","BulkSettings","combinations","storeSettings","createBulkSettings","setStr","iterationsPerCombo","createBulkItemsDatabase","itemsDb","SimDatabase","SimItem","UIItem","SimEnchant","UIEnchant","clearItems","setCombinations","setFastMode","handleCrash","itemsBlock","noticeWorkInProgress","itemTextIntro","itemList","resultsBlock","bulkSimResult","results","resultBlock","equippedGearResult","settingsBlock","bulkSimButton","previousContents","disabled","simStart","Date","getTime","lastTotal","rounds","currentRound","progressMetrics","msSinceStart","iterPerSecond","completedIterations","totalSims","ceil","setSimProgress","importFavsButton","itemID","searchButton","searchText","searchResults","ev","toAdd","strID","searchString","pieces","displayCount","matched","lcName","lcSetName","piece","lcPiece","itemElement","heroic","htxt","ftxt","baseSearchHTML","getAllItems","focus","clearButton","_obj","secondsRemain","totalIterations","roundsText","completedSims","SavedDataManager","userData","presets","frozen","contentBlock","savedDataDiv","presetDataDiv","customDataDiv","presetsOnly","buildCreateContainer","saveInput","addSavedData","newData","makeSavedData","dataArr","isPreset","oldIdx","replaceWith","dataElemFragment","dataElem","deleteFragment","deleteButton","confirm","saveUserData","checkActive","changeEmitters","savedData","storageKey","loadUserData","dataStr","jsonData","freeze","savedDataCreateFragment","GearTab","buildGearPickers","buildSavedGearsetPicker","savedGearManager","getSavedGearStorageKey","SavedGearSet","bonusStatsStats","newSavedGear","individualConfig","presetGear","BLESSINGS_SECTION","BASIC_BIS_DISCLAIMER","actions","useIcon","curDragData","ListPicker","itemPickerPairs","hideUi","horizontalLayout","inlineMenuBar","titleTooltip","itemsDiv","actionEnabled","newItemButton","newButtonTooltip","makeActionElem","itemLabel","newList","pair","ipp","numToAdd","addNewPicker","action","allowedActions","itemContainer","itemHeader","itemPicker","newItemPicker","getSourceValue","moveButton","moveButtonTooltip","draggable","ondragstart","dataTransfer","dropEffect","effectAllowed","listPicker","dragEnterCounter","ondragenter","ondragleave","ondragover","ondrop","srcIdx","dstIdx","arrElem","copyButton","copyButtonTooltip","copyItem","deleteButtonTooltip","iconCssClass","actionElem","getItemHeaderElem","headerElem","nextElementSibling","previousElementSibling","contains","AdaptiveStringPicker","actionIdSets","defaultLabel","getActionIDs","baseActionName","rankedNameRegex","RegExp","hasRanks","submenu","stackable_auras","maxStacks","icd_auras","hasIcd","exclusive_effect_auras","hasExclusiveEffect","castable_spells","castableSpells","isCastable","bucket","isMajorCooldown","placeholders","fromOtherId","OtherAction","OtherActionPotion","fromEmpty","headerText","prepullOnly","encounterOnly","channel_spells","isChanneled","dot_spells","hasDot","shield_spells","hasShield","APLActionIDPicker","DropdownPicker","actionIdSet","sourceToValue","valueToSource","setOptionContent","createMissingValue","anyId","getUnitRef","defaultUnitRef","updateValues","unitRef","setOptions","APLRunePicker","rawId","getRuneById","Rune","ActionID","itemTypeNames","unitSets","aura_sources","getUnits","petMetadata","targetMetadata","aura_sources_targets_first","targetUI","APLUnitPicker","UnitPicker","unitSet","refToValue","hideLabelWhenDefaultSelected","thisPlayer","defaultTargetIcon","petName","rmIdx","getPetIconFromName","APLPickerBuilder","fieldPickers","fields","makeFieldPicker","fieldConfig","builder","field","factory","pickerData","actionIdFieldConfig","unitRefField","getParentValue","unitFieldConfig","booleanFieldConfig","numberFieldConfig","numberPickerConfig","stringFieldConfig","aplInputBuilder","APLValuePicker","isPrepull","closest","allValueKinds","valueKindFactories","valueKind","includeIf","kindPicker","TextDropdownPicker","kind","fullDescription","shortDescription","_player","newKind","sourceValue","oldKind","newSourceValue","makeAPLValue","valuePicker","not","and","vals","or","cmp","lhs","setSourceValue","player2","currentKind","APLValue","updateValuePicker","implVal","sourceVal","valueFieldConfig","valueListFieldConfig","oldValue","inputBuilder","AplHelpers.aplInputBuilder","const","APLValueConst","AplHelpers.stringFieldConfig","APLValueCompare","ComparisonOperator","OpEq","OpNe","OpGe","OpGt","OpLe","OpLt","math","APLValueMath","MathOperator","OpAdd","OpSub","OpMul","OpDiv","mathOperatorFieldConfig","APLValueMax","APLValueMin","APLValueAnd","APLValueOr","APLValueNot","currentTime","APLValueCurrentTime","currentTimePercent","APLValueCurrentTimePercent","remainingTime","APLValueRemainingTime","remainingTimePercent","APLValueRemainingTimePercent","isExecutePhase","APLValueIsExecutePhase","ExecutePhaseThreshold","E20","E25","E35","executePhaseThresholdFieldConfig","numberTargets","APLValueNumberTargets","frontOfTarget","APLValueFrontOfTarget","currentHealth","APLValueCurrentHealth","AplHelpers.unitFieldConfig","currentHealthPercent","APLValueCurrentHealthPercent","currentMana","APLValueCurrentMana","_isPrepull","currentManaPercent","APLValueCurrentManaPercent","currentRage","APLValueCurrentRage","currentEnergy","APLValueCurrentEnergy","timeToEnergyTick","APLValueTimeToEnergyTick","energyThreshold","APLValueEnergyThreshold","AplHelpers.numberFieldConfig","currentComboPoints","APLValueCurrentComboPoints","gcdIsReady","APLValueGCDIsReady","gcdTimeToReady","APLValueGCDTimeToReady","autoTimeToNext","APLValueAutoTimeToNext","AutoAttackType","Any","Melee","MainHand","OffHand","Ranged","autoTypeFieldConfig","autoSwingTime","APLValueAutoSwingTime","AutoSwingType","autoSwingTypeFieldConfig","spellIsKnown","APLValueSpellIsKnown","AplHelpers.actionIdFieldConfig","spellCurrentCost","APLValueSpellCurrentCost","spellCanCast","APLValueSpellCanCast","spellIsReady","APLValueSpellIsReady","spellTimeToReady","APLValueSpellTimeToReady","spellCastTime","APLValueSpellCastTime","spellTravelTime","APLValueSpellTravelTime","spellCpm","APLValueSpellCPM","spellIsChanneling","APLValueSpellIsChanneling","spellChanneledTicks","APLValueSpellChanneledTicks","APLValueChannelClipDelay","auraIsKnown","APLValueAuraIsKnown","auraIsActive","APLValueAuraIsActive","auraIsActiveWithReactionTime","APLValueAuraIsActiveWithReactionTime","auraRemainingTime","APLValueAuraRemainingTime","auraNumStacks","APLValueAuraNumStacks","auraInternalCooldown","APLValueAuraInternalCooldown","auraIcdIsReadyWithReactionTime","APLValueAuraICDIsReadyWithReactionTime","auraShouldRefresh","APLValueAuraShouldRefresh","maxOverlap","runeIsEquipped","APLValueRuneIsEquipped","_getParentValue","AplHelpers.runeFieldConfig","dotIsActive","APLValueDotIsActive","dotRemainingTime","APLValueDotRemainingTime","sequenceIsComplete","APLValueSequenceIsComplete","sequenceIsReady","APLValueSequenceIsReady","sequenceTimeToReady","APLValueSequenceTimeToReady","totemRemainingTime","APLValueTotemRemainingTime","TotemType","Water","Earth","Air","Fire","totemTypeFieldConfig","catExcessEnergy","APLValueCatExcessEnergy","catNewSavageRoarDuration","APLValueCatNewSavageRoarDuration","warlockShouldRecastDrainSoul","APLValueWarlockShouldRecastDrainSoul","warlockShouldRefreshCorruption","APLValueWarlockShouldRefreshCorruption","warlockCurrentPetMana","APLValueWarlockCurrentPetMana","warlockCurrentPetManaPercent","APLValueWarlockCurrentPetManaPercent","currentSealRemainingTime","APLValueCurrentSealRemainingTime","APLActionPicker","conditionPicker","AplValues.APLValuePicker","condition","srcVal","APLAction","actionDiv","allActionKinds","actionKindFactories","actionKind","makeAPLAction","actionPicker","sequence","strictSequence","newActionKind","updateActionPicker","actionListFieldConfig","castSpell","APLActionCastSpell","multidot","APLActionMultidot","maxDots","AplValues.valueFieldConfig","multishield","APLActionMultishield","maxShields","channelSpell","APLActionChannelSpell","interruptIf","AplHelpers.booleanFieldConfig","autocastOtherCooldowns","APLActionAutocastOtherCooldowns","wait","APLActionWait","waitUntil","APLActionWaitUntil","schedule","APLActionSchedule","innerAction","actionFieldConfig","APLActionSequence","resetSequence","APLActionResetSequence","APLActionStrictSequence","changeTarget","APLActionChangeTarget","activateAura","APLActionActivateAura","activateAuraWithStacks","APLActionActivateAuraWithStacks","numStacks","addComboPoints","APLActionAddComboPoints","cancelAura","APLActionCancelAura","triggerIcd","APLActionTriggerICD","itemSwapEnabledSpecs","APLActionItemSwap","ItemSwapSet","Swap1","Main","itemSwapSetFieldConfig","move","APLActionMove","customRotation","APLActionCustomRotation","catOptimalRotationAction","APLActionCatOptimalRotationAction","minCombosForRip","maxWaitTime","maintainFaerieFire","useShredTrick","castPaladinPrimarySeal","APLActionCastPaladinPrimarySeal","APLRotationPicker","modPlayer","prepullActions","APLPrepullAction","doAtValue","oldItem","APLPrepullActionPicker","priorityList","APLListItem","APLListItemPicker","itemHeaderElem","makeListItemWarnings","rotationStats","hidePicker","HidePicker","doAtPicker","getWarnings","warningsElem","warningsTooltip","visibility","formattedWarnings","replaceAllInString","NumberListPicker","CooldownsPicker","cooldownPickers","_eventID","cooldown","makeActionPicker","makeTimingsPicker","deleteButtonFragment","cooldownIndex","availableCooldowns","ActionIdProto","cooldownAction","Cooldown","timings","curCooldown","RotationTab","updateSections","buildAutoContent","buildAplContent","buildSimpleContent","buildSavedDataPickers","rotType","rotationInputs","rotationIconGroup","newGroupContainer","rotationIconInputs","configureIconSection","iconInput","IconInputs.buildIconInput","configureInputSection","querySelectorAll","cooldownsContentBlock","sectionElem","sectionConfig","iconPickers","adjustColumns","savedRotationsManager","getSavedRotationStorageKey","SavedRotation","rotations","presetRotation","rotData","EncounterPicker","modEncounter","addEncounterFieldPickers","showExecuteProportion","pe","equalTargetsIgnoreInputs","isIndividualSim","targetIndex","targetInputs","ti","makeTargetInputsPicker","advancedButton","AdvancedEncounterModal","addHeader","targetsElem","encounter2","TargetPicker","presetEncounters","getAllPresetEncounters","getTarget","section1","section3","aiPicker","TargetInput","levelPicker","mobTypePicker","mobTypeEnumValues","mobType","tankIndexPicker","tankIndex","targetInputPickers","statPickers","ALL_TARGET_STATS","statData","swingSpeedPicker","minBaseDamagePicker","damageSpreadPicker","damageSpread","dualWieldPicker","dwMissPenaltyPicker","dualWieldPenalty","parryHastePicker","parryHaste","spellSchoolPicker","SpellSchool","SpellSchoolPhysical","SpellSchoolArcane","SpellSchoolFire","SpellSchoolFrost","SpellSchoolHoly","SpellSchoolNature","SpellSchoolShadow","spellSchool","statValue","totalStats","curStats","TargetInputPicker","getTargetInput","targetInputIndex","boolPicker","numberPicker","boolValue","numberValue","inputType","InputType","Bool","durationGroup","executeGroup","target1","target2","modTarget2","MobType","MobTypeUnknown","MobTypeBeast","MobTypeDemon","MobTypeDragonkin","MobTypeElemental","MobTypeGiant","MobTypeHumanoid","MobTypeMechanical","MobTypeUndead","relevantStatOptions","excludeBuffDebuffInputs","includeBuffDebuffInputs","ItemSwapPicker","itemSlots","enableItemSwapPicker","swapPickerContainer","noteElem","note","toggleEnabled","itemSwapContainer","swapButtonFragment","swapButton","swapWithGear","itemSlot","newIsg","gearItem","swapItem","ConsumesPicker","buildPotionsPicker","buildFlaskPicker","buildWeaponImbuePicker","buildFoodPicker","buildPhysicalBuffPickers","buildDefensiveBuffPickers","buildSpellPowerBuffPickers","buildMiscConsumesPickers","buildEngPickers","buildEnchPicker","buildPetPicker","potionsElem","potionsOptions","ConsumablesInputs.makePotionsInput","ConsumablesInputs.POTIONS_CONFIG","conjuredOptions","ConsumablesInputs.makeConjuredInput","ConsumablesInputs.CONJURED_CONFIG","ConsumablesInputs.MildlyIrradiatedRejuvPotion","updateRow","flasksElem","flasksOptions","ConsumablesInputs.makeFlasksInput","ConsumablesInputs.FLASKS_CONFIG","imbuesElem","mhImbueOptions","ConsumablesInputs.makeMainHandImbuesInput","ConsumablesInputs.WEAPON_IMBUES_MH_CONFIG","ohImbueOptions","ConsumablesInputs.makeOffHandImbuesInput","ConsumablesInputs.WEAPON_IMBUES_OH_CONFIG","foodsElem","foodOptions","ConsumablesInputs.makeFoodInput","ConsumablesInputs.FOOD_CONFIG","alcoholOptions","ConsumablesInputs.ALCOHOL_CONFIG","ConsumablesInputs.DragonBreathChili","includeAgi","includeStr","physicalConsumesElem","apBuffOptions","ConsumablesInputs.makeAttackPowerConsumeInput","ConsumablesInputs.ATTACK_POWER_CONSUMES_CONFIG","agiBuffOptions","ConsumablesInputs.makeAgilityConsumeInput","ConsumablesInputs.AGILITY_CONSUMES_CONFIG","strBuffOptions","ConsumablesInputs.makeStrengthConsumeInput","ConsumablesInputs.STRENGTH_CONSUMES_CONFIG","defensiveConsumesElem","healthBuffOptions","ConsumablesInputs.makeHealthConsumeInput","ConsumablesInputs.HEALTH_CONSUMES_CONFIG","armorBuffOptions","ConsumablesInputs.makeArmorConsumeInput","ConsumablesInputs.ARMOR_CONSUMES_CONFIG","spellsCnsumesElem","spBuffOptions","ConsumablesInputs.makeSpellPowerConsumeInput","ConsumablesInputs.SPELL_POWER_CONFIG","fireBuffOptions","ConsumablesInputs.makeFirePowerConsumeInput","ConsumablesInputs.FIRE_POWER_CONFIG","frostBuffOptions","ConsumablesInputs.makeFrostPowerConsumeInput","ConsumablesInputs.FROST_POWER_CONFIG","shadowBuffOptions","ConsumablesInputs.makeShadowPowerConsumeInput","ConsumablesInputs.SHADOW_POWER_CONFIG","mp5BuffOptions","ConsumablesInputs.makeMp5ConsumeInput","ConsumablesInputs.MP5_CONFIG","miscConsumesElem","zanzaBuffOptions","ConsumablesInputs.makeZanzaBuffConsumesInput","ConsumablesInputs.ZANZA_BUFF_CONSUMES_CONFIG","miscConsumesOptions","ConsumablesInputs.MISC_CONSUMES_CONFIG","engiConsumesElem","explosiveOptions","ConsumablesInputs.makeExplosivesInput","ConsumablesInputs.EXPLOSIVES_CONFIG","ConsumablesInputs.Sapper","enchConsumesElem","enchantedSigilOptions","ConsumablesInputs.makeEncanthedSigilInput","ConsumablesInputs.ENCHANTED_SIGIL_CONFIG","petConsumeInputs","petConsumesElem","rowElem","PresetBuildsPicker","builds","buildsContainerRef","infoElemRef","build","dataElemRef","applyBuild","isBuildActive","SettingsTab","column2","column3","column4","buildEncounterSettings","buildPlayerSettings","buildCustomSettingsSections","buildConsumesSection","buildOtherSettings","buildIsbSettings","buildBuffsSettings","buildWorldBuffsSettings","buildDebuffsSettings","encounterPicker","playerIconGroup","playerIconInputs","levels","_level","races","raceNames","playerInputs","professionGroup","customSections","customSection","otherInputs","itemSwapConfig","isWlAndIsb","isTankWlAndIsb","buffOptions","BuffDebuffInputs.RAID_BUFFS_CONFIG","saygesOptions","BuffDebuffInputs.SAYGES_CONFIG","BuffDebuffInputs.SaygesDarkFortune","worldBuffOptions","BuffDebuffInputs.WORLD_BUFFS_CONFIG","debuffOptions","BuffDebuffInputs.DEBUFFS_CONFIG","miscDebuffOptions","BuffDebuffInputs.DEBUFFS_MISC_CONFIG","savedEncounterManager","getSavedEncounterStorageKey","SavedEncounter","newEncounter","savedSettingsManager","getSavedSettingsStorageKey","SavedSettings","playerBuffs","newSettings","ItemSwap","TalentsTab","buildTalentsPicker","buildSavedTalentsPicker","savedTalentsManager","getSavedTalentsStorageKey","SavedTalents","newTalents","_EpWeightsMenu","baseConfig","getModalConfig","showAllStats","statsType","insertAdjacentHTML","tableBody","resultsElem","resultsViewer","updateType","getNameFromStat","getStatFromName","updateEpRefStat","prevEpSimResult","calculateEp","getPrevSimResult","updateTable","epSelect","_idx","Option","dpsRefStat","getDpsEpRefStat","healRefStat","getHealEpRefStat","tankRefStat","getTankEpRefStat","calcButton","getBoundingClientRect","prevEpIterations","colActionButtons","makeUpdateWeights","weightsFunc","epRefStat","refStatName","weights","tps","dtps","tmi","pDeath","showAllStatsContainer","menu","makeEpRatioCell","cell","updateButton","scaledDpsEp","scaledHpsEp","scaledTpsEp","scaledDtpsEp","scaledTmiEp","scaledPDeathEp","newEp","scaledDpsWeights","scaledHpsWeights","scaledTpsWeights","scaledDtpsWeights","scaledTmiWeights","scaledPDeathWeights","newWeights","epUnitStats","makeTableRow","rowTotalEp","scaledEpValue","makeTableRowCells","currentEpCell","epTotal","epRatio","weightCell","epCell","weightAvg","weightStdev","weightsStdev","makeTableCellContents","epAvg","epStdev","epValuesStdev","template","epDelta","epAvgElem","stdev","stDevToConf90","normaliseValue","refStat","refUnitStat","refWeight","refStdev","valueStdev","EpWeightsMenu","SettingsMenu","restoreDefaultsButton","langs","wowheadSupportedLanguages","defaultLang","reload","SocialLinks","buildDiscordLink","anchor","bsTitle","buildGitHubLink","buildPatreonLink","SimHeader","simTabsContainer","simToolbar","knownIssuesContent","knownIssuesLink","addKnownIssuesLink","addBugReportLink","addDownloadBinaryLink","addSimOptionsLink","addSocialLinks","IntersectionObserver","intersectionRatio","threshold","observe","isFirstTab","addImportLink","onClick","hideInRaidSim","addImportExportLink","addExportLink","menuElem","addToolbarLink","addKnownIssue","issue","getInstance","resp","versionInfo","outdated","catch","_error","addDiscordLink","addGitHubLink","addPatreonLink","customRootElement","bsDisplay","SimTitleDropdown","currentSpecIndex","specLabels","rootLinkArgs","rootLink","buildRootSimLink","noDropdown","buildDropdown","naturalClassOrder","classIndex","sims","buildClassLink","buildClassDropdown","dropdownFragment","classLink","specIndex","buildSpecLink","iconPath","getSimIconPath","textKlass","getContextualKlass","raidSimLabel","launchStatusLabel","buildRaidLink","raidSimSiteUrl","specIndexes","getSpecSiteUrl","specLabel","Unlaunched","raidSimIcon","titleIcons","textCssClassForClass","textCssClassForSpec","globalKnownIssues","SimUI","cssScheme","noticeText","simContentContainer","simMain","updateShowDamageMetrics","updateShowThreatMetrics","updateShowHealingMetrics","updateShowEpRatios","updateShowExperimental","addKnownIssues","titleElem","simActionsContainer","iterationsPicker","resultsViewerElem","socialsContainer","simTabContentsContainer","runSimOnce","addAction","actFn","tabContentFragment","addSimTab","statusStr","simStatus","Alpha","knownIssues","getSettingsStorageKey","runSim","alertStr","hashCode","toLink","issues","total_count","html_url","maxBodyLength","issueBody","truncated","lastIndexOf","CrashModal","fetchErr","registerSpecConfig","registerPlayerConfig","raidSimResultsManager","failedProfReqs","getFailedProfessionRequirements","fpr","requiredProfession","talentPoints","getTalentPoints","addSidebarComponents","addGearTab","addBulkTab","addSettingsTab","addTalentsTab","addRotationTab","addDetailedResultsTab","addTopbarComponents","initEventID","savedSettings","urlParseResults","Importers.IndividualLinkImporter","addRaidSimAction","displayStats","bulkTab","EmbeddedDetailedResults","_parent","Importers.IndividualJsonImporter","Importers.Individual60UImporter","Importers.IndividualAddonImporter","Exporters.IndividualLinkExporter","Exporters.IndividualJsonExporter","Exporters.Individual60UEPExporter","Exporters.IndividualPawnEPExporter","tankSpec","healingSpec","individualBuffs","keyPart","specToLocalStorageKey","epWeightsStats","missingRatios","makePresetGear","conditions","talentTree","talentTrees","customCondition","Tooltips.BASIC_BIS_DISCLAIMER","cond","makePresetGearHelper","makePresetTalents","makePresetAPLRotation","rotationJson","makePresetRotationHelper","makePresetSimpleRotation","makePresetBuild"],"mappings":"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","x_google_ignoreList":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]}